63
!
!=
%
&
&&
(
)
*
+
,
-
.
/
;
<
<=
=
==
>
>=
EOF
LEXEME(CharacterLiteral)
LEXEME(Identifier)
LEXEME(NumberLiteral)
LEXEME(StringLiteral)
[
]
abstract
boolean
byte
char
class
else
extends
false
final
for
if
implements
import
instanceof
int
interface
native
new
null
package
private
protected
public
return
short
static
super
this
true
void
while
{
|
||
}
~
113
BooleanLiteral
NullLiteral
CharacterLiteral
IntegerLiteral
StringLiteral
Identifier
Goal
Literal
Type
PrimitiveType
NumericType
IntegralType
ReferenceType
ClassOrInterfaceType
ClassType
InterfaceType
ArrayType
Name
SimpleName
QualifiedName
CompilationUnit
ImportDeclarations
TypeDeclarations
PackageDeclaration
ImportDeclaration
SingleTypeImportDeclaration
TypeImportOnDemandDeclaration
TypeDeclaration
Modifiers
Modifier
ClassDeclaration
Super
Interfaces
InterfaceTypeList
ClassBody
ClassBodyDeclarations
ClassBodyDeclaration
ClassMemberDeclaration
FieldDeclaration
VariableDeclarators
VariableDeclarator
VariableDeclaratorId
VariableInitializer
MethodDeclaration
MethodHeader
MethodDeclarator
FormalParameterList
FormalParameter
ClassTypeList
MethodBody
StaticInitializer
ConstructorDeclaration
ConstructorDeclarator
ConstructorBody
InterfaceDeclaration
ExtendsInterfaces
InterfaceBody
InterfaceMemberDeclarations
InterfaceMemberDeclaration
AbstractMethodDeclaration
ArrayInitializer
VariableInitializers
Block
BlockStatements
BlockStatement
LocalVariableDeclarationStatement
LocalVariableDeclaration
Statement
StatementNoShortIf
StatementWithoutTrailingSubstatement
EmptyStatement
ExpressionStatement
StatementExpression
IfThenStatement
IfThenElseStatement
IfThenElseStatementNoShortIf
WhileStatement
WhileStatementNoShortIf
ForStatement
ForStatementNoShortIf
ForInit
ForUpdate
StatementExpressionList
ReturnStatement
Primary
PrimaryNoNewArray
ClassInstanceCreationExpression
ArgumentList
ArrayCreationExpression
DimExprs
DimExpr
Dims
FieldAccess
MethodInvocation
ArrayAccess
PostfixExpression
UnaryExpression
UnaryExpressionNotPlusMinus
CastExpression
MultiplicativeExpression
AdditiveExpression
RelationalExpression
EqualityExpression
AndExpression
InclusiveOrExpression
ConditionalAndExpression
ConditionalOrExpression
AssignmentExpression
Assignment
LeftHandSide
AssignmentOperator
Expression
ConstantExpression
Goal
253
BooleanLiteral true
BooleanLiteral false
NullLiteral null
CharacterLiteral LEXEME(CharacterLiteral)
IntegerLiteral LEXEME(NumberLiteral)
StringLiteral LEXEME(StringLiteral)
Identifier LEXEME(Identifier)
Goal CompilationUnit EOF
Literal IntegerLiteral
Literal BooleanLiteral
Literal CharacterLiteral
Literal StringLiteral
Literal NullLiteral
Type PrimitiveType
Type ReferenceType
PrimitiveType NumericType
PrimitiveType boolean
NumericType IntegralType
IntegralType byte
IntegralType short
IntegralType int
IntegralType char
ReferenceType ClassOrInterfaceType
ReferenceType ArrayType
ClassOrInterfaceType Name
ClassType ClassOrInterfaceType
InterfaceType ClassOrInterfaceType
ArrayType PrimitiveType [ ]
ArrayType Name [ ]
ArrayType ArrayType [ ]
Name SimpleName
Name QualifiedName
SimpleName Identifier
QualifiedName Name . Identifier
CompilationUnit PackageDeclaration ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration ImportDeclarations
CompilationUnit PackageDeclaration TypeDeclarations
CompilationUnit PackageDeclaration
CompilationUnit ImportDeclarations TypeDeclarations
CompilationUnit ImportDeclarations
CompilationUnit TypeDeclarations
CompilationUnit
ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration
TypeDeclarations TypeDeclaration
TypeDeclarations TypeDeclarations TypeDeclaration
PackageDeclaration package Name ;
ImportDeclaration SingleTypeImportDeclaration
ImportDeclaration TypeImportOnDemandDeclaration
SingleTypeImportDeclaration import Name ;
TypeImportOnDemandDeclaration import Name . * ;
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
TypeDeclaration ;
Modifiers Modifier
Modifiers Modifiers Modifier
Modifier public
Modifier protected
Modifier private
Modifier static
Modifier abstract
Modifier final
Modifier native
ClassDeclaration Modifiers class Identifier Super Interfaces ClassBody
ClassDeclaration Modifiers class Identifier Super ClassBody
ClassDeclaration Modifiers class Identifier Interfaces ClassBody
ClassDeclaration Modifiers class Identifier ClassBody
Super extends ClassType
Interfaces implements InterfaceTypeList
InterfaceTypeList InterfaceType
InterfaceTypeList InterfaceTypeList , InterfaceType
ClassBody { ClassBodyDeclarations }
ClassBody { }
ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclaration ClassMemberDeclaration
ClassBodyDeclaration StaticInitializer
ClassBodyDeclaration ConstructorDeclaration
ClassMemberDeclaration FieldDeclaration
ClassMemberDeclaration MethodDeclaration
FieldDeclaration Modifiers Type VariableDeclarators ;
VariableDeclarators VariableDeclarator
VariableDeclarators VariableDeclarators , VariableDeclarator
VariableDeclarator VariableDeclaratorId
VariableDeclarator VariableDeclaratorId = VariableInitializer
VariableDeclaratorId Identifier
VariableDeclaratorId VariableDeclaratorId [ ]
VariableInitializer Expression
MethodDeclaration MethodHeader MethodBody
MethodHeader Modifiers Type MethodDeclarator
MethodHeader Modifiers void MethodDeclarator
MethodDeclarator Identifier ( FormalParameterList )
MethodDeclarator Identifier ( )
FormalParameterList FormalParameter
FormalParameterList FormalParameterList , FormalParameter
FormalParameter Type VariableDeclaratorId
ClassTypeList ClassType
ClassTypeList ClassTypeList , ClassType
MethodBody Block
MethodBody ;
StaticInitializer static Block
ConstructorDeclaration Modifiers ConstructorDeclarator ConstructorBody
ConstructorDeclarator SimpleName ( FormalParameterList )
ConstructorDeclarator SimpleName ( )
ConstructorBody { BlockStatements }
ConstructorBody { }
InterfaceDeclaration Modifiers interface Identifier ExtendsInterfaces InterfaceBody
InterfaceDeclaration Modifiers interface Identifier InterfaceBody
ExtendsInterfaces extends InterfaceType
ExtendsInterfaces ExtendsInterfaces , InterfaceType
InterfaceBody { InterfaceMemberDeclarations }
InterfaceBody { }
InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclarations InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclaration AbstractMethodDeclaration
AbstractMethodDeclaration MethodHeader ;
ArrayInitializer { VariableInitializers , }
ArrayInitializer { VariableInitializers }
ArrayInitializer { , }
ArrayInitializer { }
VariableInitializers VariableInitializer
VariableInitializers VariableInitializers , VariableInitializer
Block { BlockStatements }
Block { }
BlockStatements BlockStatement
BlockStatements BlockStatements BlockStatement
BlockStatement LocalVariableDeclarationStatement
BlockStatement Statement
LocalVariableDeclarationStatement LocalVariableDeclaration ;
LocalVariableDeclaration Type VariableDeclarators
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement ReturnStatement
EmptyStatement ;
ExpressionStatement StatementExpression ;
StatementExpression Assignment
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreationExpression
IfThenStatement if ( Expression ) Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
WhileStatement while ( Expression ) Statement
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
ForStatement for ( ForInit ; Expression ; ForUpdate ) Statement
ForStatement for ( ForInit ; Expression ; ) Statement
ForStatement for ( ForInit ; ; ForUpdate ) Statement
ForStatement for ( ForInit ; ; ) Statement
ForStatement for ( ; Expression ; ForUpdate ) Statement
ForStatement for ( ; Expression ; ) Statement
ForStatement for ( ; ; ForUpdate ) Statement
ForStatement for ( ; ; ) Statement
ForStatementNoShortIf for ( ForInit ; Expression ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; ) StatementNoShortIf
ForInit StatementExpression
ForInit LocalVariableDeclaration
ForUpdate StatementExpression
StatementExpressionList StatementExpression
StatementExpressionList StatementExpressionList , StatementExpression
ReturnStatement return Expression ;
ReturnStatement return ;
Primary PrimaryNoNewArray
Primary ArrayCreationExpression
PrimaryNoNewArray Literal
PrimaryNoNewArray this
PrimaryNoNewArray ( Expression )
PrimaryNoNewArray ClassInstanceCreationExpression
PrimaryNoNewArray FieldAccess
PrimaryNoNewArray MethodInvocation
PrimaryNoNewArray ArrayAccess
ClassInstanceCreationExpression new ClassType ( ArgumentList )
ClassInstanceCreationExpression new ClassType ( )
ArgumentList Expression
ArgumentList ArgumentList , Expression
ArrayCreationExpression new PrimitiveType DimExprs Dims
ArrayCreationExpression new PrimitiveType DimExprs
ArrayCreationExpression new ClassOrInterfaceType DimExprs Dims
ArrayCreationExpression new ClassOrInterfaceType DimExprs
DimExprs DimExpr
DimExprs DimExprs DimExpr
DimExpr [ Expression ]
Dims [ ]
Dims Dims [ ]
FieldAccess Primary . Identifier
FieldAccess super . Identifier
MethodInvocation Name ( ArgumentList )
MethodInvocation Name ( )
MethodInvocation Primary . Identifier ( ArgumentList )
MethodInvocation Primary . Identifier ( )
MethodInvocation super . Identifier ( ArgumentList )
MethodInvocation super . Identifier ( )
ArrayAccess Name [ Expression ]
ArrayAccess PrimaryNoNewArray [ Expression ]
PostfixExpression Primary
PostfixExpression Name
UnaryExpression - UnaryExpression
UnaryExpression UnaryExpressionNotPlusMinus
UnaryExpressionNotPlusMinus PostfixExpression
UnaryExpressionNotPlusMinus ~ UnaryExpression
UnaryExpressionNotPlusMinus ! UnaryExpression
UnaryExpressionNotPlusMinus CastExpression
CastExpression ( Expression ) UnaryExpressionNotPlusMinus
CastExpression ( Name Dims ) UnaryExpressionNotPlusMinus
CastExpression ( PrimitiveType Dims ) UnaryExpression
CastExpression ( PrimitiveType ) UnaryExpression
MultiplicativeExpression UnaryExpression
MultiplicativeExpression MultiplicativeExpression * UnaryExpression
MultiplicativeExpression MultiplicativeExpression / UnaryExpression
MultiplicativeExpression MultiplicativeExpression % UnaryExpression
AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression
RelationalExpression AdditiveExpression
RelationalExpression RelationalExpression < AdditiveExpression
RelationalExpression RelationalExpression > AdditiveExpression
RelationalExpression RelationalExpression <= AdditiveExpression
RelationalExpression RelationalExpression >= AdditiveExpression
RelationalExpression RelationalExpression instanceof ReferenceType
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression
AndExpression EqualityExpression
AndExpression AndExpression & EqualityExpression
InclusiveOrExpression AndExpression
InclusiveOrExpression InclusiveOrExpression | AndExpression
ConditionalAndExpression InclusiveOrExpression
ConditionalAndExpression ConditionalAndExpression && InclusiveOrExpression
ConditionalOrExpression ConditionalAndExpression
ConditionalOrExpression ConditionalOrExpression || ConditionalAndExpression
AssignmentExpression ConditionalOrExpression
AssignmentExpression Assignment
Assignment LeftHandSide AssignmentOperator AssignmentExpression
LeftHandSide Name
LeftHandSide FieldAccess
LeftHandSide ArrayAccess
AssignmentOperator =
Expression AssignmentExpression
ConstantExpression Expression
433
7470
61 <= reduce 183
260 false reduce 125
295 FieldAccess shift 1
39 BooleanLiteral shift 2
322 FieldAccess shift 1
40 IfThenElseStatement shift 3
42 LEXEME(Identifier) reduce 32
167 Name shift 4
5 >= reduce 208
425 Primary shift 5
61 == reduce 183
163 public reduce 63
221 > reduce 193
221 ; reduce 193
47 && reduce 8
221 < reduce 193
417 null shift 6
161 void reduce 59
69 byte shift 7
108 LEXEME(NumberLiteral) shift 8
50 static reduce 61
221 / reduce 193
213 short reduce 54
221 - reduce 193
72 QualifiedName shift 9
221 . reduce 193
221 + reduce 193
221 , reduce 193
217 || reduce 197
221 ) reduce 193
247 ExpressionStatement shift 10
221 * reduce 193
224 CharacterLiteral shift 11
116 super shift 12
221 % reduce 193
221 & reduce 193
5 == reduce 208
320 ArrayCreationExpression shift 13
221 ] reduce 193
7 [ reduce 18
221 [ reduce 193
30 return reduce 139
3 true reduce 132
191 && reduce 201
300 static reduce 101
418 ) shift 14
72 false shift 15
406 else shift 16
346 StatementExpression shift 17
260 char reduce 125
41 LocalVariableDeclarationStatement shift 18
314 ; reduce 50
39 ConditionalOrExpression shift 19
425 UnaryExpression shift 20
32 | reduce 3
316 static reduce 75
18 byte reduce 126
221 | reduce 193
7 ) reduce 18
72 LocalVariableDeclaration shift 21
326 StatementExpression shift 17
188 new reduce 130
39 EqualityExpression shift 22
32 + reduce 3
32 * reduce 3
32 ) reduce 3
32 & reduce 3
32 % reduce 3
271 this shift 23
165 null shift 6
32 / reduce 3
32 . reduce 3
41 Literal shift 24
32 - reduce 3
32 , reduce 3
32 ; reduce 3
62 <= reduce 0
72 char shift 25
122 protected reduce 51
287 instanceof reduce 226
20 | reduce 220
32 > reduce 3
16 ArrayAccess shift 26
32 < reduce 3
188 super reduce 130
375 } reduce 78
10 while reduce 141
72 LEXEME(StringLiteral) shift 27
331 ExpressionStatement shift 10
410 StatementWithoutTrailingSubstatement shift 28
260 LEXEME(StringLiteral) reduce 125
233 int reduce 151
309 InclusiveOrExpression shift 29
32 [ reduce 3
370 Block shift 30
409 Expression shift 31
224 LEXEME(CharacterLiteral) shift 32
62 == reduce 0
20 ] reduce 220
101 Primary shift 5
32 ] reduce 3
417 ReferenceType shift 33
61 >= reduce 183
107 IfThenElseStatement shift 3
397 { reduce 103
185 ArrayCreationExpression shift 13
39 LEXEME(Identifier) shift 34
410 EmptyStatement shift 35
229 instanceof reduce 194
3 return reduce 132
69 ExpressionStatement shift 10
117 SimpleName shift 36
138 final reduce 112
264 SimpleName shift 36
167 BooleanLiteral shift 2
206 ClassInstanceCreationExpression shift 37
62 >= reduce 0
322 Name shift 38
428 public reduce 88
240 ( shift 39
9 || reduce 31
240 ) shift 40
5 <= reduce 208
72 BlockStatements shift 41
167 LEXEME(Identifier) shift 34
264 Identifier shift 42
117 Identifier shift 42
108 StatementWithoutTrailingSubstatement shift 28
14 NullLiteral shift 43
302 IntegralType shift 44
243 ClassOrInterfaceType shift 45
1 | reduce 182
266 LEXEME(CharacterLiteral) shift 32
140 super shift 12
4 + reduce 209
334 { reduce 175
4 * reduce 209
4 ) reduce 209
4 ( shift 46
4 & reduce 209
4 % reduce 209
334 } reduce 175
412 null shift 6
52 LEXEME(CharacterLiteral) shift 32
179 Literal shift 24
14 Primary shift 5
98 return reduce 142
140 IntegerLiteral shift 47
352 ] reduce 221
193 static reduce 114
381 IntegerLiteral shift 47
1 [ reduce 182
171 WhileStatement shift 48
381 new shift 49
1 ] reduce 182
303 abstract reduce 71
141 ClassInstanceCreationExpression shift 37
14 false shift 15
326 Block shift 30
334 LEXEME(NumberLiteral) reduce 175
205 final shift 50
352 > reduce 221
352 < reduce 221
150 int shift 51
398 LEXEME(Identifier) shift 34
1 < reduce 182
1 ; reduce 182
1 > reduce 182
1 = reduce 248
13 && reduce 177
96 EqualityExpression shift 22
352 ; reduce 221
352 / reduce 221
106 || reduce 233
195 LEXEME(Identifier) shift 34
352 , reduce 221
1 * reduce 182
352 - reduce 221
1 ) reduce 182
1 , reduce 182
1 + reduce 182
1 . reduce 182
1 - reduce 182
162 Literal shift 24
352 & reduce 221
1 / reduce 182
352 % reduce 221
352 * reduce 221
352 + reduce 221
4 ] reduce 209
30 true reduce 139
362 Literal shift 24
352 ) reduce 221
4 [ shift 52
14 QualifiedName shift 9
263 ArrayCreationExpression shift 13
320 this shift 23
108 StringLiteral shift 53
161 protected reduce 59
35 null reduce 140
140 new shift 49
20 ; reduce 220
20 < reduce 220
20 > reduce 220
167 FieldAccess shift 54
1 & reduce 182
1 % reduce 182
20 % reduce 220
20 & reduce 220
332 short reduce 160
20 ) reduce 220
20 * reduce 220
20 + reduce 220
20 , reduce 220
20 - reduce 220
20 / reduce 220
363 } reduce 104
4 > reduce 209
4 < reduce 209
4 ; reduce 209
370 ArrayCreationExpression shift 13
195 SimpleName shift 36
72 LeftHandSide shift 55
263 this shift 23
4 / reduce 209
4 . shift 56
9 implements reduce 31
4 - reduce 209
4 , reduce 209
410 StringLiteral shift 53
180 protected reduce 80
196 null shift 6
284 public reduce 123
96 BooleanLiteral shift 2
222 for reduce 157
54 == reduce 182
381 super shift 12
116 boolean shift 57
228 ConditionalAndExpression shift 58
183 StringLiteral shift 53
98 true reduce 142
4 | reduce 209
153 LEXEME(Identifier) reduce 148
83 Literal shift 24
47 != reduce 8
54 >= reduce 182
422 Identifier shift 59
252 private reduce 73
13 != reduce 177
127 boolean reduce 58
379 import reduce 46
248 abstract reduce 100
222 if reduce 157
320 StatementExpression shift 17
191 != reduce 201
346 ArrayCreationExpression shift 13
295 Assignment shift 60
185 this shift 23
372 final shift 50
72 NullLiteral shift 43
266 MethodInvocation shift 61
52 CharacterLiteral shift 11
69 IfThenElseStatement shift 3
360 WhileStatement shift 48
405 || reduce 235
187 true shift 62
295 Name shift 38
352 | reduce 221
376 EOF reduce 66
271 ArrayCreationExpression shift 13
322 LEXEME(Identifier) shift 34
396 Literal shift 24
171 Primary shift 63
54 <= reduce 182
72 Primary shift 63
277 > reduce 232
101 LEXEME(StringLiteral) shift 27
277 < reduce 232
277 ; reduce 232
161 interface reduce 59
118 null shift 6
83 ConditionalAndExpression shift 58
425 ClassInstanceCreationExpression shift 37
261 abstract reduce 74
277 , reduce 232
178 LEXEME(CharacterLiteral) shift 32
219 [ reduce 86
277 & reduce 232
241 ArrayAccess shift 26
346 this shift 23
224 UnaryExpressionNotPlusMinus shift 64
277 ) reduce 232
101 NullLiteral shift 43
162 if shift 65
219 , reduce 86
419 ClassInstanceCreationExpression shift 66
219 ) reduce 86
425 false shift 15
275 CharacterLiteral shift 11
219 = reduce 86
23 || reduce 179
219 ; reduce 86
54 != reduce 182
171 LEXEME(StringLiteral) shift 27
269 private reduce 44
243 NumericType shift 67
101 QualifiedName shift 9
204 true shift 62
302 QualifiedName shift 9
389 SingleTypeImportDeclaration shift 68
161 char reduce 59
425 QualifiedName shift 9
414 { shift 69
178 MethodInvocation shift 70
67 [ reduce 15
326 Statement shift 71
190 Literal shift 24
370 false shift 15
171 LeftHandSide shift 55
152 != reduce 216
410 ( shift 39
108 { shift 72
215 protected reduce 76
265 public shift 73
249 public reduce 110
196 StringLiteral shift 53
425 LEXEME(StringLiteral) shift 27
360 LeftHandSide shift 55
194 , shift 74
410 ; shift 75
40 ExpressionStatement shift 10
194 ) shift 76
114 || reduce 204
370 NullLiteral shift 43
104 > reduce 215
205 short shift 77
162 for shift 78
187 ForStatement shift 79
376 abstract reduce 66
161 native reduce 59
104 ] reduce 215
39 FieldAccess shift 1
332 ( reduce 160
160 ( reduce 128
95 short reduce 158
228 Literal shift 24
409 AndExpression shift 80
16 super shift 12
28 this reduce 130
104 ) reduce 215
320 if shift 81
104 & reduce 215
370 QualifiedName shift 9
104 , reduce 215
96 AdditiveExpression shift 82
104 - reduce 215
104 * reduce 215
104 + reduce 215
228 this shift 23
332 ; reduce 160
104 % reduce 215
326 this shift 23
65 ( shift 83
432 IfThenElseStatement shift 3
334 ( reduce 175
104 < reduce 215
15 >= reduce 1
104 ; reduce 215
228 PostfixExpression shift 84
104 / reduce 215
54 && reduce 182
96 Identifier shift 42
407 Literal shift 24
334 ; reduce 175
251 PrimaryNoNewArray shift 85
410 { shift 72
368 LEXEME(Identifier) reduce 27
316 } reduce 75
295 LEXEME(Identifier) shift 34
15 <= reduce 1
96 Name shift 86
96 SimpleName shift 36
295 IfThenStatement shift 87
72 WhileStatement shift 48
241 PrimaryNoNewArray shift 85
15 == reduce 1
188 boolean reduce 130
196 InclusiveOrExpression shift 29
166 ; shift 88
140 ArrayAccess shift 26
326 if shift 65
332 } reduce 160
332 { reduce 160
129 protected reduce 49
160 ; reduce 128
295 BooleanLiteral shift 2
96 Assignment shift 89
104 | reduce 215
28 if reduce 130
173 new reduce 144
76 && reduce 202
264 true shift 62
418 Dims shift 90
320 for shift 91
222 this reduce 157
173 LEXEME(Identifier) reduce 144
184 instanceof reduce 207
272 Literal shift 24
370 NumericType shift 67
118 Literal shift 24
274 | reduce 205
370 this shift 23
298 PrimaryNoNewArray shift 85
49 char shift 25
409 PrimaryNoNewArray shift 85
103 Literal shift 24
109 true reduce 127
157 CharacterLiteral shift 11
278 { reduce 26
73 public reduce 56
28 else reduce 135
14 UnaryExpression shift 92
74 IntegerLiteral shift 47
410 while shift 93
278 , reduce 26
103 this shift 23
259 for reduce 122
117 LEXEME(Identifier) shift 34
96 ConditionalOrExpression shift 19
86 ] reduce 209
86 [ shift 52
74 new shift 49
284 super reduce 123
389 TypeImportOnDemandDeclaration shift 94
39 Identifier shift 42
162 Statement shift 95
272 this shift 23
241 super shift 12
109 return reduce 127
40 PrimaryNoNewArray shift 85
86 | reduce 209
319 native reduce 77
86 ) reduce 209
86 * reduce 209
387 InclusiveOrExpression shift 29
86 ( shift 46
14 LEXEME(StringLiteral) shift 27
86 % reduce 209
86 & reduce 209
25 [ reduce 21
86 / reduce 209
86 - reduce 209
86 . shift 56
86 + reduce 209
86 , reduce 209
407 null shift 6
271 PostfixExpression shift 84
409 ArrayAccess shift 26
361 LEXEME(CharacterLiteral) shift 32
73 boolean reduce 56
76 != reduce 202
274 / reduce 205
170 ( shift 96
324 null reduce 153
274 ) reduce 205
274 * reduce 205
274 + reduce 205
274 , reduce 205
274 - reduce 205
419 LEXEME(CharacterLiteral) shift 32
274 . reduce 205
39 Assignment shift 89
274 % reduce 205
40 ArrayAccess shift 26
346 Block shift 30
274 & reduce 205
101 UnaryExpression shift 20
418 [ shift 97
25 ) reduce 21
390 PrimaryNoNewArray shift 85
86 = reduce 247
86 > reduce 209
86 ; reduce 209
67 ) reduce 15
86 < reduce 209
275 ReturnStatement shift 98
48 null reduce 133
16 PrimaryNoNewArray shift 85
224 MethodInvocation shift 61
52 MethodInvocation shift 61
107 ExpressionStatement shift 10
379 private reduce 46
39 Name shift 86
147 final reduce 62
281 final shift 50
274 ; reduce 205
274 < reduce 205
274 > reduce 205
309 LEXEME(NumberLiteral) shift 8
302 int shift 51
298 ArrayAccess shift 26
150 IntegralType shift 44
425 NullLiteral shift 43
152 && reduce 216
108 while shift 93
274 [ reduce 205
274 ] reduce 205
309 null shift 6
320 Statement shift 99
76 >= reduce 202
363 final reduce 104
41 ReferenceType shift 33
363 static reduce 104
419 WhileStatement shift 48
26 == reduce 184
193 } reduce 114
274 <= reduce 205
206 CharacterLiteral shift 11
87 for reduce 131
189 public reduce 99
344 Identifier shift 100
138 private reduce 112
190 ConditionalAndExpression shift 58
116 AndExpression shift 80
76 == reduce 202
72 ClassInstanceCreationExpression shift 66
179 PostfixExpression shift 84
142 == shift 101
291 char reduce 55
334 null reduce 175
138 } reduce 112
398 Identifier shift 102
26 >= reduce 184
320 QualifiedName shift 9
387 StringLiteral shift 53
274 == reduce 205
320 LEXEME(StringLiteral) shift 27
326 NullLiteral shift 43
240 StringLiteral shift 53
16 IfThenElseStatement shift 3
264 Name shift 4
181 boolean reduce 159
74 ArrayAccess shift 26
198 ; reduce 170
130 private reduce 57
432 ExpressionStatement shift 10
119 && reduce 23
76 <= reduce 202
326 LEXEME(StringLiteral) shift 27
196 ~ shift 103
88 CastExpression shift 104
274 >= reduce 205
187 Identifier shift 42
69 PrimaryNoNewArray shift 85
265 SingleTypeImportDeclaration shift 68
173 boolean reduce 144
247 LEXEME(CharacterLiteral) shift 32
324 while reduce 153
35 LEXEME(NumberLiteral) reduce 140
69 LEXEME(CharacterLiteral) shift 32
87 if reduce 131
72 ArrayCreationExpression shift 13
320 false shift 15
103 ArrayCreationExpression shift 13
72 int shift 51
26 <= reduce 184
196 ] shift 105
141 CharacterLiteral shift 11
364 RelationalExpression shift 106
284 boolean reduce 123
167 AdditiveExpression shift 82
167 Identifier shift 42
14 ArrayCreationExpression shift 13
141 NullLiteral shift 43
165 LEXEME(NumberLiteral) shift 8
346 for shift 91
206 NullLiteral shift 43
28 false reduce 130
385 CharacterLiteral shift 11
10 { reduce 141
331 MethodInvocation shift 70
346 QualifiedName shift 9
117 Name shift 4
175 private reduce 52
1 && reduce 182
10 } reduce 141
385 Primary shift 5
271 Literal shift 24
101 UnaryExpressionNotPlusMinus shift 64
239 while reduce 149
66 . reduce 181
235 ) shift 107
66 ) reduce 147
119 != reduce 23
346 if shift 81
183 ~ shift 103
10 ( reduce 141
186 byte reduce 60
402 ) shift 108
129 native reduce 49
241 AndExpression shift 80
41 Statement shift 109
178 ClassInstanceCreationExpression shift 66
370 Primary shift 63
370 Statement shift 109
10 ; reduce 141
396 null shift 6
390 ArrayAccess shift 26
362 PostfixExpression shift 84
88 true shift 62
260 int reduce 125
361 ReturnStatement shift 98
185 LEXEME(StringLiteral) shift 27
192 instanceof reduce 191
14 ClassInstanceCreationExpression shift 37
300 abstract reduce 101
346 WhileStatement shift 48
408 == reduce 218
58 || reduce 242
334 while reduce 175
410 WhileStatementNoShortIf shift 110
346 false shift 15
191 <= reduce 201
157 MethodInvocation shift 61
271 NullLiteral shift 43
233 LEXEME(CharacterLiteral) reduce 151
16 IntegerLiteral shift 47
117 FieldAccess shift 54
275 WhileStatement shift 48
290 ClassOrInterfaceType shift 111
69 ArrayAccess shift 26
66 [ reduce 181
74 BooleanLiteral shift 2
50 abstract reduce 61
305 CastExpression shift 104
275 ClassInstanceCreationExpression shift 66
47 >= reduce 8
408 >= reduce 218
191 == reduce 201
160 { reduce 128
352 != reduce 221
1 != reduce 182
326 for shift 78
179 this shift 23
240 LEXEME(NumberLiteral) shift 8
160 } reduce 128
295 super shift 12
66 ; reduce 147
185 false shift 15
127 public reduce 58
96 MultiplicativeExpression shift 112
314 static reduce 50
39 SimpleName shift 36
309 StringLiteral shift 53
46 CastExpression shift 104
41 ClassOrInterfaceType shift 45
191 >= reduce 201
374 private reduce 106
388 ArrayAccess shift 26
220 boolean reduce 124
263 Literal shift 24
259 null reduce 122
232 ArrayCreationExpression shift 13
379 ; reduce 46
148 SimpleName shift 36
261 static reduce 74
375 static reduce 78
61 != reduce 183
320 LeftHandSide shift 55
330 || reduce 225
28 char reduce 130
423 , shift 74
183 - shift 113
423 ) shift 114
383 implements shift 115
408 <= reduce 218
149 true shift 62
165 StringLiteral shift 53
183 ( shift 116
419 MethodInvocation shift 70
373 EOF reduce 107
46 RelationalExpression shift 106
160 LEXEME(NumberLiteral) reduce 128
139 short reduce 174
183 ! shift 117
150 QualifiedName shift 9
362 this shift 23
30 LEXEME(Identifier) reduce 139
190 null shift 6
93 ( shift 118
69 ArrayType shift 119
251 ArrayAccess shift 120
312 TypeDeclaration shift 121
122 EOF reduce 51
230 new reduce 155
180 abstract reduce 80
71 } reduce 156
361 ClassInstanceCreationExpression shift 66
71 { reduce 156
49 QualifiedName shift 9
312 ClassDeclaration shift 122
195 true shift 62
396 InclusiveOrExpression shift 29
352 && reduce 221
346 LEXEME(StringLiteral) shift 27
74 Assignment shift 89
61 && reduce 183
277 | reduce 232
162 ArrayCreationExpression shift 13
104 <= reduce 215
73 LEXEME(Identifier) reduce 56
153 new reduce 148
71 ( reduce 156
407 StringLiteral shift 53
331 LEXEME(CharacterLiteral) shift 32
230 LEXEME(Identifier) reduce 155
165 Literal shift 24
71 ; reduce 156
292 [ shift 123
171 NullLiteral shift 43
277 ] reduce 232
162 StatementNoShortIf shift 124
264 FieldAccess shift 54
263 NullLiteral shift 43
272 PostfixExpression shift 84
388 PrimaryNoNewArray shift 85
373 native reduce 107
185 QualifiedName shift 9
41 PrimitiveType shift 125
243 QualifiedName shift 9
223 Name shift 38
277 != reduce 232
366 protected reduce 79
116 Expression shift 126
101 ArrayCreationExpression shift 13
153 return reduce 148
49 NumericType shift 67
370 LocalVariableDeclaration shift 21
419 false shift 15
34 LEXEME(Identifier) reduce 6
388 super shift 12
360 Block shift 30
40 LEXEME(CharacterLiteral) shift 32
153 super reduce 148
171 CharacterLiteral shift 11
275 MethodInvocation shift 70
54 & reduce 182
54 ) reduce 182
54 % reduce 182
341 ; reduce 91
54 / reduce 182
54 . reduce 182
54 + reduce 182
54 * reduce 182
54 - reduce 182
54 , reduce 182
387 null shift 6
206 UnaryExpressionNotPlusMinus shift 64
149 SimpleName shift 36
340 LEXEME(Identifier) reduce 29
140 Name shift 86
13 >= reduce 177
54 > reduce 182
409 LEXEME(CharacterLiteral) shift 32
259 protected reduce 122
54 ; reduce 182
108 WhileStatementNoShortIf shift 110
54 < reduce 182
281 private shift 127
195 Assignment shift 60
171 ArrayCreationExpression shift 13
178 CharacterLiteral shift 11
325 . shift 128
361 NullLiteral shift 43
361 CharacterLiteral shift 11
309 - shift 113
309 ( shift 116
309 ! shift 117
432 ArrayAccess shift 26
341 { reduce 91
223 Identifier shift 42
360 ReturnStatement shift 98
325 ; shift 129
412 LEXEME(NumberLiteral) shift 8
190 LEXEME(NumberLiteral) shift 8
371 LEXEME(Identifier) reduce 250
312 protected shift 130
162 WhileStatementNoShortIf shift 110
46 AssignmentExpression shift 131
380 MethodInvocation shift 61
310 { reduce 33
310 | reduce 33
121 ; reduce 45
407 PostfixExpression shift 84
152 == reduce 216
45 || reduce 22
360 CharacterLiteral shift 11
310 ] reduce 33
364 - shift 113
232 Literal shift 24
432 PrimaryNoNewArray shift 85
419 QualifiedName shift 9
390 ForUpdate shift 132
364 ( shift 116
390 LEXEME(CharacterLiteral) shift 32
310 [ reduce 33
72 ClassOrInterfaceType shift 45
79 for reduce 134
83 null shift 6
104 != reduce 215
385 UnaryExpressionNotPlusMinus shift 133
364 ! shift 117
152 <= reduce 216
309 ~ shift 103
72 IntegralType shift 44
360 Primary shift 63
310 = reduce 33
310 > reduce 33
304 , shift 74
36 LEXEME(Identifier) reduce 30
47 == reduce 8
79 if reduce 134
370 StatementExpression shift 17
241 Expression shift 134
142 && reduce 237
50 short reduce 61
35 while reduce 140
310 ; reduce 33
310 < reduce 33
310 - reduce 33
310 . reduce 33
310 / reduce 33
310 % reduce 33
13 == reduce 177
310 & reduce 33
354 Modifiers shift 135
74 super shift 12
360 NullLiteral shift 43
310 ( reduce 33
310 ) reduce 33
54 [ reduce 182
310 * reduce 33
310 + reduce 33
54 ] reduce 182
310 , reduce 33
99 int reduce 154
412 StringLiteral shift 53
239 LEXEME(NumberLiteral) reduce 149
47 <= reduce 8
259 static reduce 122
169 ; reduce 111
239 null reduce 149
141 UnaryExpressionNotPlusMinus shift 64
385 ClassInstanceCreationExpression shift 37
190 StringLiteral shift 53
152 >= reduce 216
344 MethodDeclarator shift 136
140 FieldAccess shift 1
13 <= reduce 177
304 ) shift 137
101 ClassInstanceCreationExpression shift 37
54 | reduce 182
72 Block shift 30
104 && reduce 215
432 super shift 12
0 SingleTypeImportDeclaration shift 68
223 IfThenStatement shift 87
303 EOF reduce 71
141 Primary shift 5
16 new shift 49
140 EqualityExpression shift 22
425 LeftHandSide shift 55
385 NullLiteral shift 43
281 InterfaceMemberDeclaration shift 138
425 LEXEME(CharacterLiteral) shift 32
259 abstract reduce 122
258 ; shift 139
295 return shift 140
206 Primary shift 5
79 this reduce 134
108 null shift 6
342 { reduce 108
387 LEXEME(NumberLiteral) shift 8
360 ClassInstanceCreationExpression shift 66
291 protected reduce 55
86 && reduce 209
291 int reduce 55
96 new shift 49
322 Identifier shift 42
119 >= reduce 23
171 ClassInstanceCreationExpression shift 66
178 NullLiteral shift 43
314 final reduce 50
223 FieldAccess shift 1
274 && reduce 205
370 LeftHandSide shift 55
142 != shift 141
178 Primary shift 63
381 PrimaryNoNewArray shift 85
41 null shift 6
309 ConditionalAndExpression shift 58
118 InclusiveOrExpression shift 29
335 short shift 77
119 == reduce 23
185 PostfixExpression shift 84
327 || reduce 186
361 Primary shift 63
167 EqualityExpression shift 142
74 PrimaryNoNewArray shift 85
119 <= reduce 23
178 ReturnStatement shift 98
381 ArrayAccess shift 120
70 ) reduce 146
241 new shift 49
342 , reduce 108
127 LEXEME(Identifier) reduce 58
195 BooleanLiteral shift 2
388 CharacterLiteral shift 11
70 ; reduce 146
116 LEXEME(Identifier) shift 34
410 null shift 6
70 . reduce 183
147 private reduce 62
233 char reduce 151
196 - shift 113
422 LEXEME(Identifier) shift 34
60 ) reduce 145
364 Identifier shift 42
410 LEXEME(NumberLiteral) shift 8
196 ( shift 116
419 LEXEME(StringLiteral) shift 27
241 IntegerLiteral shift 47
162 Block shift 30
48 while reduce 133
299 private reduce 105
395 Identifier shift 42
157 Expression shift 143
196 ! shift 117
269 final reduce 44
157 AndExpression shift 80
248 static reduce 100
60 ; reduce 145
109 LEXEME(Identifier) reduce 127
86 != reduce 209
395 Name shift 144
326 ArrayCreationExpression shift 13
0 package shift 145
116 new shift 49
295 SimpleName shift 36
74 SimpleName shift 36
96 LEXEME(Identifier) shift 34
417 short shift 77
305 LEXEME(NumberLiteral) shift 8
415 ! reduce 7
305 true shift 62
387 Literal shift 24
241 LEXEME(Identifier) shift 34
274 != reduce 205
326 StatementNoShortIf shift 146
116 IntegerLiteral shift 47
171 Block shift 30
257 QualifiedName shift 9
113 MethodInvocation shift 61
322 IfThenStatement shift 87
407 ConditionalAndExpression shift 58
370 char shift 25
251 LEXEME(CharacterLiteral) shift 32
70 [ reduce 183
362 ConditionalAndExpression shift 58
96 IntegerLiteral shift 47
135 native shift 147
46 StringLiteral shift 53
61 || reduce 183
79 false reduce 134
11 instanceof reduce 10
118 PostfixExpression shift 84
298 MethodInvocation shift 70
162 StringLiteral shift 53
204 LEXEME(Identifier) shift 34
375 abstract reduce 78
239 ; reduce 149
59 extends shift 148
239 ( reduce 149
289 protected shift 130
125 [ shift 123
178 IfThenElseStatement shift 3
222 null reduce 157
88 AdditiveExpression shift 82
29 ] reduce 240
302 ClassOrInterfaceType shift 45
171 Statement shift 71
14 MethodInvocation shift 61
330 && reduce 225
218 != reduce 192
408 && reduce 218
175 public reduce 52
179 false shift 15
28 int reduce 130
228 UnaryExpression shift 20
314 private reduce 50
108 Literal shift 24
73 class reduce 56
417 ClassOrInterfaceType shift 45
29 | shift 149
364 AssignmentExpression shift 131
50 final reduce 61
261 native reduce 74
224 LEXEME(StringLiteral) shift 27
281 Modifiers shift 150
148 Name shift 144
195 super shift 12
320 ClassInstanceCreationExpression shift 66
327 ] reduce 186
29 , reduce 240
322 ForStatementNoShortIf shift 151
239 } reduce 149
103 false shift 15
239 { reduce 149
88 Identifier shift 42
29 ) reduce 240
327 | reduce 186
319 static reduce 77
309 RelationalExpression shift 106
354 private shift 127
362 LEXEME(StringLiteral) shift 27
272 false shift 15
204 BooleanLiteral shift 2
52 ArrayAccess shift 26
252 } reduce 73
251 UnaryExpressionNotPlusMinus shift 152
371 new reduce 250
376 static reduce 66
298 CharacterLiteral shift 11
313 EOF reduce 53
195 boolean shift 57
316 final reduce 75
362 false shift 15
121 native reduce 45
309 CastExpression shift 104
150 ArrayType shift 119
298 LEXEME(CharacterLiteral) shift 32
29 ; reduce 240
160 true reduce 128
432 MethodInvocation shift 70
327 & reduce 186
327 % reduce 186
324 ( reduce 153
322 ForStatement shift 79
327 * reduce 186
327 ) reduce 186
327 , reduce 186
327 + reduce 186
228 LeftHandSide shift 55
119 | reduce 23
324 ; reduce 153
122 abstract reduce 51
161 abstract reduce 59
309 this shift 23
364 LEXEME(NumberLiteral) shift 8
327 < reduce 186
272 LEXEME(StringLiteral) shift 27
327 ; reduce 186
327 . reduce 186
327 - reduce 186
363 private reduce 104
327 / reduce 186
9 >= reduce 31
330 != reduce 225
360 Statement shift 153
179 NullLiteral shift 43
177 ) reduce 24
177 & reduce 24
375 private reduce 78
220 return reduce 124
103 StringLiteral shift 53
327 > reduce 186
119 ] reduce 23
177 . shift 56
119 [ shift 154
427 , reduce 70
177 , reduce 24
177 ; reduce 24
327 [ reduce 186
26 != reduce 184
103 LEXEME(StringLiteral) shift 27
206 ArrayCreationExpression shift 13
407 - shift 113
408 != reduce 218
407 ( shift 116
407 ) shift 155
177 > reduce 24
390 new shift 49
177 < reduce 24
380 UnaryExpressionNotPlusMinus shift 64
46 Identifier shift 42
138 static reduce 112
119 > reduce 23
119 ; reduce 23
119 < reduce 23
177 [ shift 156
173 true reduce 144
88 LEXEME(NumberLiteral) shift 8
324 { reduce 153
119 ) reduce 23
308 { shift 72
432 CharacterLiteral shift 11
9 <= reduce 31
177 ] reduce 24
119 , reduce 23
141 ArrayCreationExpression shift 13
362 NullLiteral shift 43
119 & reduce 23
407 ~ shift 103
162 false shift 15
288 public reduce 64
223 return shift 140
324 } reduce 153
322 PrimaryNoNewArray shift 85
427 { reduce 70
284 return reduce 123
9 == reduce 31
177 | reduce 24
387 ! shift 117
387 ( shift 116
88 StringLiteral shift 53
140 LEXEME(Identifier) shift 34
387 - shift 113
247 ClassInstanceCreationExpression shift 66
241 BooleanLiteral shift 2
393 || reduce 228
232 LEXEME(StringLiteral) shift 27
83 QualifiedName shift 9
409 new shift 49
224 false shift 15
41 char shift 25
195 new shift 49
107 IntegerLiteral shift 47
177 LEXEME(Identifier) reduce 24
140 ConditionalOrExpression shift 19
425 MethodInvocation shift 61
385 ArrayCreationExpression shift 13
150 protected shift 130
40 IntegerLiteral shift 47
407 ! shift 117
46 MultiplicativeExpression shift 112
19 ] reduce 244
380 CharacterLiteral shift 11
148 LEXEME(Identifier) shift 34
238 ; shift 157
379 static reduce 46
309 PostfixExpression shift 84
381 LEXEME(Identifier) shift 34
251 instanceof reduce 180
362 LeftHandSide shift 55
363 abstract reduce 104
360 ArrayCreationExpression shift 13
221 == reduce 193
232 null shift 6
5 ; reduce 208
159 <= reduce 195
5 . shift 158
5 / reduce 208
5 , reduce 208
5 - reduce 208
301 ] shift 159
203 public shift 73
361 Block shift 30
18 boolean reduce 126
271 null shift 6
260 for reduce 125
153 true reduce 148
266 PrimaryNoNewArray shift 85
16 ReturnStatement shift 98
5 > reduce 208
19 , reduce 244
5 < reduce 208
21 ; shift 160
20 <= reduce 220
221 <= reduce 193
19 ) reduce 244
361 IfThenElseStatement shift 3
221 >= reduce 193
150 NumericType shift 67
118 ArrayCreationExpression shift 13
95 return reduce 158
218 && reduce 192
388 MethodInvocation shift 70
19 ; reduce 244
16 ExpressionStatement shift 10
364 AdditiveExpression shift 82
5 & reduce 208
5 % reduce 208
432 IfThenStatement shift 87
5 * reduce 208
5 + reduce 208
5 ) reduce 208
181 return reduce 159
1 >= reduce 182
162 LEXEME(StringLiteral) shift 27
101 this shift 23
263 Primary shift 5
204 FieldAccess shift 1
159 >= reduce 195
233 byte reduce 151
331 new shift 49
224 Primary shift 5
291 native reduce 55
52 AndExpression shift 80
326 ClassInstanceCreationExpression shift 66
228 null shift 6
425 PostfixExpression shift 84
99 false reduce 154
95 null reduce 158
409 UnaryExpressionNotPlusMinus shift 64
40 super shift 12
1 == reduce 182
147 static reduce 62
5 | reduce 208
20 >= reduce 220
395 SimpleName shift 36
364 SimpleName shift 36
248 protected reduce 100
281 static shift 161
16 Assignment shift 60
159 == reduce 195
224 NullLiteral shift 43
322 true shift 62
161 int reduce 59
39 PrimaryNoNewArray shift 85
230 true reduce 155
69 ClassInstanceCreationExpression shift 66
69 boolean shift 57
16 Name shift 38
5 ] reduce 208
1 <= reduce 182
54 || reduce 182
167 PrimaryNoNewArray shift 85
20 == reduce 220
187 LEXEME(Identifier) shift 34
204 ) shift 162
387 ~ shift 103
204 ( shift 39
88 - shift 113
80 ] reduce 238
88 ( shift 116
246 ClassBody shift 163
360 LEXEME(CharacterLiteral) shift 32
259 LEXEME(StringLiteral) reduce 122
41 StatementExpression shift 17
150 byte shift 7
88 ! shift 117
403 public shift 73
410 IfThenElseStatementNoShortIf shift 164
255 / reduce 213
255 , reduce 213
255 - reduce 213
255 * reduce 213
88 ; shift 165
255 + reduce 213
139 LEXEME(Identifier) reduce 174
39 true shift 62
241 AdditiveExpression shift 82
255 ) reduce 213
157 Primary shift 5
255 & reduce 213
86 == reduce 209
409 MethodInvocation shift 61
116 Assignment shift 89
255 % reduce 213
16 MethodInvocation shift 70
80 ; reduce 238
255 > reduce 213
46 null shift 6
255 < reduce 213
255 ; reduce 213
195 ForInit shift 166
80 , reduce 238
185 UnaryExpressionNotPlusMinus shift 64
243 int shift 51
222 false reduce 157
86 >= reduce 209
80 & shift 167
179 Primary shift 5
240 true shift 62
80 ) reduce 238
162 null shift 6
190 this shift 23
255 ] reduce 213
159 != reduce 195
39 super shift 12
88 ~ shift 103
35 { reduce 140
286 native shift 147
241 Identifier shift 42
390 CharacterLiteral shift 11
308 short reduce 59
35 } reduce 140
370 ClassInstanceCreationExpression shift 66
291 void reduce 55
80 | reduce 238
255 | reduce 213
150 ClassOrInterfaceType shift 45
228 ClassInstanceCreationExpression shift 37
332 while reduce 160
118 AssignmentExpression shift 131
314 import reduce 50
380 LEXEME(CharacterLiteral) shift 32
263 UnaryExpression shift 168
407 false shift 15
347 else reduce 165
364 MultiplicativeExpression shift 112
14 this shift 23
303 static reduce 71
381 Name shift 4
86 <= reduce 209
137 instanceof reduce 185
113 IntegerLiteral shift 47
35 ( reduce 140
281 } shift 169
101 MethodInvocation shift 61
149 Identifier shift 42
187 ; shift 75
4 == reduce 209
387 AssignmentExpression shift 131
222 LEXEME(StringLiteral) reduce 157
41 while shift 170
35 ; reduce 140
71 LEXEME(NumberLiteral) reduce 156
223 ArrayAccess shift 26
228 QualifiedName shift 9
396 LEXEME(NumberLiteral) shift 8
387 ConditionalAndExpression shift 58
87 LEXEME(NumberLiteral) reduce 131
116 EqualityExpression shift 22
99 LEXEME(StringLiteral) reduce 154
183 CastExpression shift 104
165 ) shift 171
165 ( shift 39
4 <= reduce 209
247 ArrayAccess shift 26
157 super shift 12
72 if shift 81
74 AndExpression shift 80
320 null shift 6
103 null shift 6
167 MultiplicativeExpression shift 112
388 new shift 49
159 && reduce 195
187 { shift 72
129 abstract reduce 49
165 ArrayCreationExpression shift 13
380 FieldAccess shift 54
116 Name shift 172
162 StatementWithoutTrailingSubstatement shift 28
185 null shift 6
275 LEXEME(StringLiteral) shift 27
48 this reduce 133
178 ArrayCreationExpression shift 13
4 >= reduce 209
374 public reduce 106
251 MethodInvocation shift 61
225 || reduce 198
320 WhileStatement shift 48
204 Identifier shift 42
15 || reduce 1
75 short reduce 143
362 Primary shift 5
251 CharacterLiteral shift 11
187 FieldAccess shift 1
275 false shift 15
370 CharacterLiteral shift 11
185 UnaryExpression shift 20
303 native reduce 71
17 ; shift 173
407 LEXEME(StringLiteral) shift 27
407 NullLiteral shift 43
110 else reduce 137
48 if reduce 133
419 StatementNoShortIf shift 174
417 NumericType shift 67
179 LEXEME(NumberLiteral) shift 8
102 instanceof reduce 199
224 PrimaryNoNewArray shift 85
62 - reduce 0
62 , reduce 0
205 static shift 161
62 + reduce 0
116 SimpleName shift 36
62 * reduce 0
62 / reduce 0
62 . reduce 0
139 ; reduce 174
26 && reduce 184
130 final reduce 57
396 RelationalExpression shift 106
370 Literal shift 24
302 NumericType shift 67
118 this shift 23
68 native reduce 47
247 WhileStatement shift 48
62 % reduce 0
46 AdditiveExpression shift 82
167 IntegerLiteral shift 47
75 LEXEME(Identifier) reduce 143
62 ) reduce 0
62 & reduce 0
417 Literal shift 24
75 new reduce 143
425 CharacterLiteral shift 11
74 LEXEME(Identifier) shift 34
69 CharacterLiteral shift 11
243 IntegralType shift 44
72 for shift 91
62 < reduce 0
62 ; reduce 0
362 LEXEME(NumberLiteral) shift 8
62 > reduce 0
387 ArrayCreationExpression shift 13
206 Expression shift 31
139 ( reduce 174
326 Literal shift 24
425 this shift 23
116 ConditionalOrExpression shift 19
372 InterfaceDeclaration shift 175
366 native reduce 79
215 abstract reduce 76
272 LEXEME(NumberLiteral) shift 8
187 ( shift 39
71 true reduce 156
388 ForUpdate shift 176
62 ] reduce 0
425 Literal shift 24
62 [ reduce 0
169 private reduce 111
380 new shift 49
117 new shift 49
381 BooleanLiteral shift 2
390 MethodInvocation shift 70
179 LEXEME(StringLiteral) shift 27
432 LEXEME(Identifier) shift 34
187 BooleanLiteral shift 2
295 ForStatement shift 79
83 PostfixExpression shift 84
149 ~ shift 103
62 | reduce 0
52 UnaryExpression shift 20
271 ClassInstanceCreationExpression shift 37
16 SimpleName shift 36
407 LEXEME(NumberLiteral) shift 8
354 SingleTypeImportDeclaration shift 68
174 else reduce 162
232 StringLiteral shift 53
425 UnaryExpressionNotPlusMinus shift 64
326 null shift 6
335 Name shift 177
30 short reduce 139
324 LEXEME(NumberLiteral) reduce 153
87 this reduce 131
432 new shift 49
88 AssignmentExpression shift 131
299 final reduce 105
233 false reduce 151
331 ArrayAccess shift 26
190 CastExpression shift 104
149 FieldAccess shift 54
272 NullLiteral shift 43
324 LEXEME(StringLiteral) reduce 153
412 ) shift 178
412 ( shift 39
315 protected reduce 98
72 MethodInvocation shift 70
313 abstract reduce 53
18 new reduce 126
139 { reduce 174
359 , reduce 94
157 QualifiedName shift 9
359 ) reduce 94
139 } reduce 174
149 ! shift 117
361 ArrayCreationExpression shift 13
149 ( shift 116
190 PostfixExpression shift 84
272 Primary shift 5
267 && shift 179
149 - shift 113
291 interface reduce 55
328 & reduce 234
305 EqualityExpression shift 22
142 || reduce 237
370 ClassOrInterfaceType shift 45
149 MultiplicativeExpression shift 112
191 | reduce 201
185 CharacterLiteral shift 11
52 new shift 49
252 public reduce 73
139 null reduce 174
41 short shift 77
381 MethodInvocation shift 61
305 ConditionalOrExpression shift 19
218 > reduce 192
230 boolean reduce 155
218 < reduce 192
220 new reduce 124
221 != reduce 193
295 new shift 49
327 && reduce 186
247 CharacterLiteral shift 11
322 IntegerLiteral shift 47
218 ; reduce 192
264 CastExpression shift 104
218 . reduce 192
218 / reduce 192
218 , reduce 192
218 - reduce 192
40 Assignment shift 60
218 & reduce 192
185 MethodInvocation shift 61
247 MethodInvocation shift 70
218 % reduce 192
177 && reduce 24
218 * reduce 192
218 + reduce 192
218 ) reduce 192
76 || reduce 202
69 WhileStatement shift 48
87 while reduce 131
328 ] reduce 234
362 ArrayCreationExpression shift 13
430 ; shift 180
275 Statement shift 181
206 LEXEME(StringLiteral) shift 27
385 LEXEME(CharacterLiteral) shift 32
387 false shift 15
380 BooleanLiteral shift 2
370 if shift 81
74 Name shift 86
412 ArrayCreationExpression shift 13
408 ] reduce 218
141 LEXEME(CharacterLiteral) shift 32
430 , shift 182
28 LEXEME(StringLiteral) reduce 130
224 ArrayCreationExpression shift 13
188 true reduce 130
410 ForStatementNoShortIf shift 151
83 this shift 23
233 LEXEME(StringLiteral) reduce 151
140 CharacterLiteral shift 11
206 LEXEME(CharacterLiteral) shift 32
83 InclusiveOrExpression shift 29
328 < shift 183
431 ] shift 184
328 > shift 185
328 ; reduce 234
157 NullLiteral shift 43
376 native reduce 66
41 this shift 23
266 super shift 12
328 , reduce 234
408 | reduce 218
328 ) reduce 234
205 abstract shift 186
139 return reduce 174
408 % reduce 218
26 ) reduce 184
73 private reduce 56
26 * reduce 184
138 abstract reduce 112
140 AndExpression shift 80
26 - reduce 184
26 . reduce 184
370 for shift 91
380 ClassInstanceCreationExpression shift 37
26 + reduce 184
52 UnaryExpressionNotPlusMinus shift 64
26 , reduce 184
118 NullLiteral shift 43
408 - reduce 218
331 CharacterLiteral shift 11
408 , reduce 218
408 + reduce 218
364 true shift 62
408 * reduce 218
309 Literal shift 24
408 ) reduce 218
26 % reduce 184
26 & reduce 184
407 Primary shift 5
408 & reduce 218
88 FieldAccess shift 1
302 byte shift 7
365 { shift 72
116 PrimaryNoNewArray shift 85
327 != reduce 186
287 || reduce 226
190 UnaryExpression shift 20
173 super reduce 144
392 { reduce 69
221 && reduce 193
284 LEXEME(Identifier) reduce 123
408 > reduce 218
232 ( shift 39
232 ) shift 187
187 StatementWithoutTrailingSubstatement shift 188
322 SimpleName shift 36
26 = reduce 249
26 > reduce 184
314 EOF reduce 50
408 / reduce 218
26 ; reduce 184
26 < reduce 184
354 public shift 73
141 LEXEME(StringLiteral) shift 27
408 < reduce 218
408 ; reduce 218
26 / reduce 184
326 StringLiteral shift 53
39 MultiplicativeExpression shift 112
177 != reduce 24
205 private shift 127
346 ReturnStatement shift 98
239 LEXEME(StringLiteral) reduce 149
30 boolean reduce 139
365 ; shift 189
275 ArrayAccess shift 26
346 LeftHandSide shift 55
20 && reduce 220
204 StringLiteral shift 53
108 this shift 23
326 false shift 15
370 MethodInvocation shift 70
48 for reduce 133
305 InclusiveOrExpression shift 29
29 && reduce 240
289 TypeDeclaration shift 121
96 FieldAccess shift 1
118 LEXEME(NumberLiteral) shift 8
409 LEXEME(Identifier) shift 34
417 ; shift 190
264 BooleanLiteral shift 2
68 EOF reduce 47
98 super reduce 142
190 QualifiedName shift 9
16 IfThenStatement shift 87
298 LEXEME(Identifier) shift 34
319 abstract reduce 77
223 LEXEME(Identifier) shift 34
385 LEXEME(StringLiteral) shift 27
121 static reduce 45
107 PrimaryNoNewArray shift 85
330 >= reduce 225
5 && reduce 208
239 false reduce 149
346 Primary shift 63
113 super shift 12
222 } reduce 157
335 SimpleName shift 36
222 { reduce 157
380 ArrayAccess shift 120
196 AssignmentExpression shift 131
46 ! shift 117
417 ( shift 39
46 ( shift 116
46 ) shift 191
46 - shift 113
130 LEXEME(Identifier) reduce 57
218 Dims shift 192
271 QualifiedName shift 9
181 LEXEME(Identifier) reduce 159
47 & reduce 8
322 super shift 12
47 % reduce 8
47 , reduce 8
47 + reduce 8
47 . reduce 8
47 - reduce 8
46 ~ shift 103
47 * reduce 8
47 ) reduce 8
298 new shift 49
392 , reduce 69
215 native reduce 76
334 for reduce 175
35 LEXEME(StringLiteral) reduce 140
281 AbstractMethodDeclaration shift 193
20 != reduce 220
419 Statement shift 99
265 TypeImportOnDemandDeclaration shift 94
224 IntegerLiteral shift 47
360 LEXEME(StringLiteral) shift 27
330 <= reduce 225
39 AdditiveExpression shift 82
72 ExpressionStatement shift 10
305 RelationalExpression shift 106
171 false shift 15
251 ClassInstanceCreationExpression shift 37
108 ForStatement shift 79
4 != reduce 209
432 Name shift 38
72 this shift 23
330 == reduce 225
407 ArgumentList shift 194
263 QualifiedName shift 9
46 FieldAccess shift 1
396 this shift 23
206 ConditionalAndExpression shift 58
117 BooleanLiteral shift 2
72 StatementExpression shift 17
69 MethodInvocation shift 70
103 ( shift 116
47 [ reduce 8
91 ( shift 195
5 != reduce 208
181 new reduce 159
103 ! shift 117
47 ] reduce 8
13 ] reduce 177
165 false shift 15
191 * reduce 201
191 + reduce 201
191 ) reduce 201
191 & reduce 201
334 if reduce 175
191 % reduce 201
117 CastExpression shift 104
13 / reduce 177
13 . reduce 177
167 SimpleName shift 36
13 - reduce 177
13 , reduce 177
13 + reduce 177
13 * reduce 177
103 - shift 113
13 ) reduce 177
251 BooleanLiteral shift 2
47 / reduce 8
47 < reduce 8
47 ; reduce 8
47 > reduce 8
13 > reduce 177
346 NullLiteral shift 43
300 private reduce 101
13 < reduce 177
224 super shift 12
13 ; reduce 177
186 int reduce 60
419 ArrayAccess shift 26
218 ] reduce 192
230 super reduce 155
134 , reduce 187
74 EqualityExpression shift 22
117 ArrayAccess shift 120
40 Primary shift 63
191 > reduce 201
218 [ shift 196
191 < reduce 201
134 ) reduce 187
320 Literal shift 24
196 ArrayCreationExpression shift 13
157 PrimaryNoNewArray shift 85
135 abstract shift 186
191 ; reduce 201
313 native reduce 53
191 . reduce 201
191 / reduce 201
191 , reduce 201
191 - reduce 201
218 | reduce 192
346 while shift 170
4 && reduce 209
191 ] reduce 201
191 [ reduce 201
196 LEXEME(NumberLiteral) shift 8
334 else reduce 175
96 ArrayAccess shift 26
320 CharacterLiteral shift 11
185 Literal shift 24
47 | reduce 8
396 QualifiedName shift 9
13 | reduce 177
103 ~ shift 103
370 WhileStatement shift 48
152 / reduce 216
152 , reduce 216
152 - reduce 216
322 IfThenElseStatementNoShortIf shift 164
311 { reduce 89
417 Type shift 197
417 StringLiteral shift 53
79 null reduce 134
109 ( reduce 127
169 static reduce 111
152 ; reduce 216
289 ClassDeclaration shift 122
417 LocalVariableDeclaration shift 198
190 InclusiveOrExpression shift 29
152 & reduce 216
152 % reduce 216
152 * reduce 216
220 LEXEME(Identifier) reduce 124
152 + reduce 216
152 ) reduce 216
187 return shift 140
48 short reduce 133
361 LEXEME(StringLiteral) shift 27
409 CharacterLiteral shift 11
346 LEXEME(NumberLiteral) shift 8
74 MethodInvocation shift 61
109 ; reduce 127
260 if reduce 125
362 AssignmentExpression shift 131
159 > reduce 195
311 ; reduce 89
52 ClassInstanceCreationExpression shift 37
159 < reduce 195
159 ; reduce 195
13 & reduce 177
152 ] reduce 216
13 % reduce 177
379 abstract reduce 46
113 SimpleName shift 36
167 super shift 12
195 Name shift 199
159 % reduce 195
49 int shift 51
152 > reduce 216
88 MultiplicativeExpression shift 112
152 < reduce 216
213 LEXEME(Identifier) reduce 54
271 MethodInvocation shift 61
241 FieldAccess shift 1
159 . reduce 195
159 / reduce 195
121 abstract reduce 45
159 , reduce 195
159 - reduce 195
159 * reduce 195
159 + reduce 195
109 { reduce 127
159 ) reduce 195
109 } reduce 127
159 & reduce 195
10 true reduce 141
390 LEXEME(Identifier) shift 34
205 SimpleName shift 200
107 super shift 12
284 new reduce 123
159 | reduce 195
335 FormalParameter shift 201
232 false shift 15
390 ClassInstanceCreationExpression shift 66
262 else reduce 168
108 EmptyStatement shift 35
122 native reduce 51
87 char reduce 131
372 private shift 127
228 InclusiveOrExpression shift 29
40 ReturnStatement shift 98
80 && reduce 238
259 false reduce 122
107 NullLiteral shift 43
286 MethodHeader shift 202
41 QualifiedName shift 9
159 ] reduce 195
108 if shift 65
379 public reduce 46
159 [ reduce 195
101 PostfixExpression shift 84
339 { shift 203
171 LEXEME(CharacterLiteral) shift 32
275 LEXEME(CharacterLiteral) shift 32
178 LEXEME(StringLiteral) shift 27
129 static reduce 49
39 IntegerLiteral shift 47
140 UnaryExpressionNotPlusMinus shift 64
167 true shift 62
223 BooleanLiteral shift 2
108 for shift 78
322 Assignment shift 60
243 char shift 25
236 { reduce 67
390 BooleanLiteral shift 2
426 ; shift 204
213 final reduce 54
14 PostfixExpression shift 84
165 LEXEME(StringLiteral) shift 27
271 UnaryExpression shift 20
183 Literal shift 24
223 new shift 49
361 false shift 15
149 AdditiveExpression shift 82
248 } reduce 100
157 LeftHandSide shift 55
203 Modifiers shift 205
107 Primary shift 63
409 ClassInstanceCreationExpression shift 37
305 Name shift 86
141 false shift 15
95 } reduce 158
41 EmptyStatement shift 35
95 { reduce 158
266 NullLiteral shift 43
172 + reduce 209
298 ClassInstanceCreationExpression shift 66
327 == reduce 186
172 * reduce 209
172 ) reduce 209
300 native reduce 101
145 QualifiedName shift 9
252 static reduce 73
172 / reduce 209
172 . shift 56
172 - reduce 209
228 RelationalExpression shift 106
172 ( shift 46
172 & reduce 209
172 % reduce 209
322 IfThenElseStatement shift 3
177 == reduce 24
251 new shift 49
419 CharacterLiteral shift 11
64 instanceof reduce 211
41 if shift 81
425 InclusiveOrExpression shift 29
251 LEXEME(Identifier) shift 34
94 protected reduce 48
357 instanceof reduce 200
51 LEXEME(Identifier) reduce 20
419 Literal shift 24
118 LeftHandSide shift 55
162 ( shift 39
327 >= reduce 186
99 LEXEME(CharacterLiteral) reduce 154
387 LEXEME(StringLiteral) shift 27
49 IntegralType shift 44
206 false shift 15
298 BooleanLiteral shift 2
140 BooleanLiteral shift 2
177 >= reduce 24
332 true reduce 160
162 ; shift 75
41 for shift 91
95 ; reduce 158
267 , reduce 243
302 ArrayType shift 119
247 new shift 49
267 ) reduce 243
407 AssignmentExpression shift 131
62 != reduce 0
417 PrimitiveType shift 125
26 ] reduce 184
360 false shift 15
26 [ reduce 184
99 byte reduce 154
185 ClassInstanceCreationExpression shift 37
172 [ shift 206
339 implements shift 115
264 LEXEME(Identifier) shift 34
69 new shift 49
193 protected reduce 114
326 LEXEME(CharacterLiteral) shift 32
193 final reduce 114
153 boolean reduce 148
363 native reduce 104
16 ForStatement shift 79
327 <= reduce 186
264 new shift 49
127 byte reduce 58
26 | reduce 184
267 ; reduce 243
172 < reduce 209
407 ArrayCreationExpression shift 13
247 LEXEME(Identifier) shift 34
10 LEXEME(NumberLiteral) reduce 141
95 ( reduce 158
172 > reduce 209
162 { shift 72
172 = reduce 247
75 return reduce 143
259 } reduce 122
337 char shift 25
241 LEXEME(CharacterLiteral) shift 32
190 RelationalExpression shift 106
259 { reduce 122
272 ArrayCreationExpression shift 13
179 ArrayCreationExpression shift 13
187 StringLiteral shift 53
385 false shift 15
130 short reduce 57
83 UnaryExpression shift 20
69 LEXEME(Identifier) shift 34
331 BooleanLiteral shift 2
135 static shift 161
180 native reduce 80
267 ] reduce 243
183 null shift 6
334 short reduce 175
396 PostfixExpression shift 84
107 Assignment shift 60
331 ClassInstanceCreationExpression shift 66
266 Primary shift 5
308 final reduce 59
261 private reduce 74
328 | reduce 234
388 Name shift 38
308 protected reduce 59
152 | reduce 216
425 AndExpression shift 80
113 PrimaryNoNewArray shift 85
169 abstract reduce 111
332 LEXEME(NumberLiteral) reduce 160
178 false shift 15
259 ; reduce 122
74 ConditionalOrExpression shift 19
388 QualifiedName shift 9
291 class reduce 55
39 Expression shift 207
107 ReturnStatement shift 98
62 && reduce 0
432 WhileStatement shift 48
373 protected reduce 107
41 WhileStatement shift 48
249 private reduce 110
83 RelationalExpression shift 106
263 PostfixExpression shift 84
31 ] shift 208
156 ] shift 209
364 Assignment shift 89
260 this reduce 125
302 ReferenceType shift 33
177 <= reduce 24
259 ( reduce 122
409 BooleanLiteral shift 2
389 private shift 127
308 private reduce 59
157 EqualityExpression shift 22
157 ConditionalOrExpression shift 19
432 LEXEME(StringLiteral) shift 27
94 native reduce 48
223 MethodInvocation shift 70
298 LeftHandSide shift 55
409 Identifier shift 42
73 final reduce 56
178 Literal shift 24
113 QualifiedName shift 9
101 ArrayAccess shift 120
251 Identifier shift 42
195 byte shift 7
209 || reduce 28
27 | reduce 5
240 LEXEME(Identifier) shift 34
389 ImportDeclaration shift 210
417 true shift 62
133 | reduce 217
122 ; reduce 51
145 Name shift 211
205 public shift 73
74 UnaryExpressionNotPlusMinus shift 64
30 while reduce 139
96 ~ shift 103
172 Dims shift 212
27 [ reduce 5
3 null reduce 132
27 ] reduce 5
331 Block shift 30
133 ] reduce 217
412 LeftHandSide shift 55
387 ClassInstanceCreationExpression shift 37
417 Primary shift 63
337 int shift 51
252 abstract reduce 73
133 ; reduce 217
165 Primary shift 63
27 < reduce 5
27 ; reduce 5
27 > reduce 5
115 Identifier shift 42
133 > reduce 217
133 < reduce 217
376 final reduce 66
133 + reduce 217
133 * reduce 217
133 ) reduce 217
133 & reduce 217
139 super reduce 174
133 % reduce 217
388 Identifier shift 42
27 , reduce 5
27 + reduce 5
27 . reduce 5
27 - reduce 5
57 ) reduce 16
133 / reduce 217
27 / reduce 5
363 protected reduce 104
133 - reduce 217
133 , reduce 217
27 & reduce 5
27 % reduce 5
108 SimpleName shift 36
27 * reduce 5
27 ) reduce 5
157 ArrayCreationExpression shift 13
165 true shift 62
220 short reduce 124
326 ExpressionStatement shift 10
113 false shift 15
88 new shift 49
57 [ reduce 16
228 MethodInvocation shift 61
306 && reduce 229
362 CharacterLiteral shift 11
247 StatementExpression shift 17
72 Type shift 197
101 null shift 6
322 ReturnStatement shift 98
432 QualifiedName shift 9
0 protected shift 130
172 | reduce 209
183 UnaryExpression shift 20
385 IntegerLiteral shift 47
53 instanceof reduce 11
309 UnaryExpression shift 20
139 new reduce 174
228 CharacterLiteral shift 11
210 public reduce 42
196 LeftHandSide shift 55
245 LEXEME(Identifier) shift 34
168 <= reduce 222
0 native shift 147
233 boolean reduce 151
432 NullLiteral shift 43
286 Modifier shift 213
49 PrimitiveType shift 214
72 StringLiteral shift 53
223 LEXEME(CharacterLiteral) shift 32
275 IntegerLiteral shift 47
403 StaticInitializer shift 215
173 LEXEME(CharacterLiteral) reduce 144
243 ArrayType shift 119
157 LEXEME(Identifier) shift 34
352 || reduce 221
168 == reduce 222
346 ExpressionStatement shift 10
232 CharacterLiteral shift 11
208 | reduce 206
140 ClassInstanceCreationExpression shift 37
368 < reduce 27
215 } reduce 76
368 ; reduce 27
371 ~ reduce 250
196 NullLiteral shift 43
178 new shift 49
412 false shift 15
179 MethodInvocation shift 61
298 Primary shift 63
69 SimpleName shift 36
168 >= reduce 222
213 native reduce 54
23 [ reduce 179
217 ] reduce 197
23 ] reduce 179
9 ; reduce 31
368 > reduce 27
9 < reduce 31
9 = reduce 31
322 LEXEME(CharacterLiteral) shift 32
9 > reduce 31
68 abstract reduce 47
272 MethodInvocation shift 61
217 [ reduce 197
260 LEXEME(NumberLiteral) reduce 125
380 NullLiteral shift 43
410 Block shift 30
196 QualifiedName shift 9
313 static reduce 53
368 [ reduce 27
52 Name shift 86
264 StringLiteral shift 53
331 ArrayCreationExpression shift 13
306 != reduce 229
23 | reduce 179
217 | reduce 197
370 LEXEME(NumberLiteral) shift 8
71 if reduce 156
183 MultiplicativeExpression shift 112
9 [ reduce 31
298 true shift 62
368 ] reduce 27
9 ] reduce 31
44 LEXEME(Identifier) reduce 17
206 IntegerLiteral shift 47
23 * reduce 179
217 . reduce 197
326 { shift 72
23 ) reduce 179
217 / reduce 197
23 , reduce 179
217 , reduce 197
23 + reduce 179
217 - reduce 197
232 ForUpdate shift 216
23 . reduce 179
23 - reduce 179
326 EmptyStatement shift 35
23 / reduce 179
222 LEXEME(CharacterLiteral) reduce 157
217 & reduce 197
217 % reduce 197
23 & reduce 179
217 * reduce 197
40 LEXEME(StringLiteral) shift 27
23 % reduce 179
217 + reduce 197
251 false shift 15
335 ReferenceType shift 33
217 ) reduce 197
282 , reduce 87
360 null shift 6
298 QualifiedName shift 9
412 QualifiedName shift 9
32 || reduce 3
324 int reduce 153
28 { reduce 130
335 boolean shift 57
28 } reduce 130
296 protected reduce 113
9 % reduce 31
221 || reduce 193
196 Primary shift 5
9 & reduce 31
9 ( reduce 31
16 Primary shift 63
9 ) reduce 31
9 * reduce 31
247 BooleanLiteral shift 2
9 + reduce 31
282 ; reduce 87
9 , reduce 31
9 - reduce 31
162 LEXEME(CharacterLiteral) shift 32
9 . reduce 31
71 for reduce 156
9 / reduce 31
83 UnaryExpressionNotPlusMinus shift 64
299 } reduce 105
241 ClassInstanceCreationExpression shift 37
368 & reduce 27
217 > reduce 197
39 - shift 113
23 < reduce 179
217 < reduce 197
380 QualifiedName shift 9
162 CharacterLiteral shift 11
23 ; reduce 179
23 > reduce 179
368 ) reduce 27
368 , reduce 27
39 ( shift 116
432 LeftHandSide shift 55
217 ; reduce 197
39 ! shift 117
412 true shift 62
424 protected reduce 115
412 NullLiteral shift 43
326 ; shift 75
361 IfThenStatement shift 87
309 ClassInstanceCreationExpression shift 37
38 [ shift 52
159 || reduce 195
10 false reduce 141
298 LEXEME(StringLiteral) shift 27
326 ( shift 39
354 InterfaceDeclaration shift 175
190 UnaryExpressionNotPlusMinus shift 64
28 ; reduce 130
298 NullLiteral shift 43
38 = reduce 247
295 CharacterLiteral shift 11
195 LEXEME(NumberLiteral) shift 8
370 byte shift 7
314 native reduce 50
149 IntegerLiteral shift 47
96 ( shift 116
96 - shift 113
403 Modifiers shift 205
390 Identifier shift 42
96 ! shift 117
69 BooleanLiteral shift 2
226 ] shift 217
39 ~ shift 103
408 instanceof reduce 218
368 | reduce 27
223 CharacterLiteral shift 11
88 Literal shift 24
24 instanceof reduce 178
111 { reduce 25
283 DimExprs shift 218
38 ( shift 46
9 { reduce 31
9 | reduce 31
38 . shift 56
145 LEXEME(Identifier) shift 34
390 false shift 15
28 ( reduce 130
371 ! reduce 250
227 ] shift 219
412 Primary shift 63
72 BlockStatement shift 220
371 ( reduce 250
232 LEXEME(CharacterLiteral) shift 32
144 implements reduce 24
371 - reduce 250
228 LEXEME(CharacterLiteral) shift 32
165 LeftHandSide shift 55
196 true shift 62
14 StringLiteral shift 53
428 final reduce 88
158 LEXEME(Identifier) shift 34
95 new reduce 158
283 DimExpr shift 221
118 true shift 62
108 LeftHandSide shift 55
203 StaticInitializer shift 215
167 LEXEME(CharacterLiteral) shift 32
241 UnaryExpressionNotPlusMinus shift 64
168 && reduce 222
412 Identifier shift 42
34 instanceof reduce 6
195 ArrayType shift 119
129 ; reduce 49
118 Primary shift 5
52 ConditionalOrExpression shift 19
206 ArrayAccess shift 26
94 EOF reduce 48
157 FieldAccess shift 1
321 && reduce 214
181 short reduce 159
72 PrimaryNoNewArray shift 85
247 Statement shift 222
410 ArrayCreationExpression shift 13
360 while shift 93
186 protected reduce 60
112 instanceof reduce 224
187 super shift 12
205 native shift 147
40 return shift 140
35 return reduce 140
72 null shift 6
247 Name shift 38
259 private reduce 122
334 false reduce 175
92 instanceof reduce 219
204 PrimaryNoNewArray shift 85
86 || reduce 209
71 this reduce 156
36 ; reduce 30
36 < reduce 30
36 = reduce 30
36 > reduce 30
69 Name shift 199
213 interface reduce 54
108 StatementExpression shift 17
295 ; shift 75
295 ( shift 39
36 * reduce 30
36 + reduce 30
36 , reduce 30
36 - reduce 30
36 . reduce 30
36 / reduce 30
413 ) shift 223
147 boolean reduce 62
150 boolean shift 57
14 ArrayAccess shift 120
309 false shift 15
320 LEXEME(NumberLiteral) shift 8
417 NullLiteral shift 43
36 % reduce 30
36 & reduce 30
36 ( reduce 30
16 return shift 140
36 ) reduce 30
179 RelationalExpression shift 106
40 WhileStatement shift 48
165 ClassInstanceCreationExpression shift 66
417 LEXEME(StringLiteral) shift 27
161 static reduce 59
321 != reduce 214
113 Identifier shift 42
409 UnaryExpression shift 20
69 LocalVariableDeclaration shift 21
74 ClassInstanceCreationExpression shift 37
277 || reduce 232
196 SimpleName shift 36
16 true shift 62
241 Primary shift 5
35 int reduce 140
275 IfThenStatement shift 87
312 static shift 161
417 ClassInstanceCreationExpression shift 66
233 super reduce 151
16 LEXEME(StringLiteral) shift 27
79 short reduce 134
222 ; reduce 157
141 IntegerLiteral shift 47
185 LEXEME(NumberLiteral) shift 8
260 while reduce 125
240 FieldAccess shift 1
298 SimpleName shift 36
147 public reduce 62
281 Modifier shift 213
141 ArrayAccess shift 120
222 ( reduce 157
302 boolean shift 57
101 super shift 12
264 null shift 6
157 Name shift 86
203 private shift 127
69 LEXEME(StringLiteral) shift 27
157 Identifier shift 42
228 ! shift 117
228 ( shift 116
39 CharacterLiteral shift 11
39 LEXEME(NumberLiteral) shift 8
171 PrimaryNoNewArray shift 85
228 - shift 113
14 PrimaryNoNewArray shift 85
388 ArrayCreationExpression shift 13
412 ClassInstanceCreationExpression shift 66
332 LEXEME(Identifier) reduce 160
385 ArrayAccess shift 120
48 return reduce 133
69 NullLiteral shift 43
241 true shift 62
90 ) shift 224
281 abstract shift 186
295 LEXEME(CharacterLiteral) shift 32
208 != reduce 206
280 ; reduce 83
46 Literal shift 24
179 UnaryExpressionNotPlusMinus shift 64
295 { shift 72
280 , reduce 83
3 LEXEME(NumberLiteral) reduce 132
196 MultiplicativeExpression shift 112
272 UnaryExpressionNotPlusMinus shift 64
130 class reduce 57
16 WhileStatement shift 48
69 QualifiedName shift 9
83 ClassInstanceCreationExpression shift 37
370 IfThenElseStatement shift 3
360 ArrayAccess shift 26
188 LEXEME(CharacterLiteral) reduce 130
256 && reduce 223
158 Identifier shift 225
14 null shift 6
424 native reduce 115
243 byte shift 7
101 PrimaryNoNewArray shift 85
90 [ shift 226
334 this reduce 175
425 LEXEME(NumberLiteral) shift 8
305 ConditionalAndExpression shift 58
72 StatementWithoutTrailingSubstatement shift 188
139 boolean reduce 174
172 != reduce 209
204 Literal shift 24
409 MultiplicativeExpression shift 112
234 = reduce 85
234 ; reduce 85
72 ArrayAccess shift 26
361 IntegerLiteral shift 47
210 protected reduce 42
242 { reduce 102
360 StringLiteral shift 53
28 LEXEME(NumberLiteral) reduce 130
234 , reduce 85
234 ) reduce 85
271 CastExpression shift 104
204 super shift 12
173 short reduce 144
121 private reduce 45
280 [ shift 227
387 LeftHandSide shift 55
41 LEXEME(CharacterLiteral) shift 32
234 [ reduce 85
247 SimpleName shift 36
113 ClassInstanceCreationExpression shift 37
83 CastExpression shift 104
157 Assignment shift 89
417 QualifiedName shift 9
316 protected reduce 75
33 LEXEME(Identifier) reduce 14
99 if reduce 154
280 = shift 228
109 super reduce 127
240 Name shift 38
46 super shift 12
396 UnaryExpression shift 20
99 for reduce 154
324 return reduce 153
36 instanceof reduce 30
190 ClassInstanceCreationExpression shift 37
263 MethodInvocation shift 61
240 Identifier shift 42
346 IfThenElseStatement shift 3
256 != reduce 223
103 CharacterLiteral shift 11
75 while reduce 143
116 true shift 62
48 true reduce 133
419 IntegerLiteral shift 47
140 MethodInvocation shift 61
337 QualifiedName shift 9
217 instanceof reduce 197
360 IfThenElseStatement shift 3
107 this shift 23
24 , reduce 178
24 - reduce 178
24 * reduce 178
24 + reduce 178
95 LEXEME(Identifier) reduce 158
24 . reduce 178
24 / reduce 178
140 LeftHandSide shift 55
432 StatementExpression shift 17
39 StringLiteral shift 53
173 } reduce 144
223 { shift 72
331 for shift 78
173 { reduce 144
24 < reduce 178
259 short reduce 122
24 ; reduce 178
300 protected reduce 101
24 > reduce 178
247 LeftHandSide shift 55
284 private reduce 123
18 return reduce 126
9 instanceof reduce 31
388 Assignment shift 60
419 if shift 65
24 % reduce 178
24 ) reduce 178
24 & reduce 178
381 LEXEME(CharacterLiteral) shift 32
96 MethodInvocation shift 61
130 boolean reduce 57
50 LEXEME(Identifier) reduce 61
338 DimExpr shift 229
171 Literal shift 24
46 ConditionalOrExpression shift 19
40 this shift 23
223 ExpressionStatement shift 10
186 void reduce 60
113 LEXEME(Identifier) shift 34
251 this shift 23
223 ; shift 75
287 >= reduce 226
173 ; reduce 144
163 ; reduce 63
360 LEXEME(NumberLiteral) shift 8
331 if shift 65
24 | reduce 178
403 native shift 147
173 ( reduce 144
69 return shift 140
361 Statement shift 181
223 ( shift 39
108 Statement shift 230
346 MethodInvocation shift 70
213 void reduce 54
98 boolean reduce 142
133 != reduce 217
10 LEXEME(Identifier) reduce 141
113 ArrayCreationExpression shift 13
370 ReturnStatement shift 98
428 private reduce 88
298 StatementExpression shift 231
140 LEXEME(CharacterLiteral) shift 32
247 LEXEME(StringLiteral) shift 27
24 ] reduce 178
24 [ reduce 178
362 - shift 113
380 LEXEME(Identifier) shift 34
240 NullLiteral shift 43
116 Primary shift 5
419 for shift 78
140 LEXEME(StringLiteral) shift 27
69 LeftHandSide shift 55
362 ( shift 116
52 AdditiveExpression shift 82
309 Identifier shift 42
287 <= reduce 226
411 else reduce 167
157 MultiplicativeExpression shift 112
396 true shift 62
362 ; shift 232
410 Statement shift 233
385 null shift 6
116 CharacterLiteral shift 11
331 ForStatement shift 79
428 } reduce 88
241 NullLiteral shift 43
362 ! shift 117
206 AndExpression shift 80
171 new shift 49
287 == reduce 226
75 byte reduce 143
14 super shift 12
208 && reduce 206
312 abstract shift 186
105 instanceof reduce 196
160 super reduce 128
149 StringLiteral shift 53
122 final reduce 51
251 PostfixExpression shift 84
241 MethodInvocation shift 61
74 CastExpression shift 104
362 ~ shift 103
87 LEXEME(StringLiteral) reduce 131
390 FieldAccess shift 1
99 null reduce 154
220 byte reduce 124
388 LEXEME(Identifier) shift 34
353 native reduce 72
46 InclusiveOrExpression shift 29
228 ~ shift 103
116 UnaryExpression shift 20
409 this shift 23
23 && reduce 179
361 Assignment shift 60
41 Primary shift 63
275 BooleanLiteral shift 2
172 && reduce 209
363 public reduce 104
326 WhileStatementNoShortIf shift 110
263 UnaryExpressionNotPlusMinus shift 64
30 new reduce 139
264 PrimaryNoNewArray shift 85
206 null shift 6
3 ( reduce 132
9 != reduce 31
259 return reduce 122
281 native shift 147
116 short shift 77
98 byte reduce 142
141 null shift 6
178 LEXEME(Identifier) shift 34
107 ForStatement shift 79
171 super shift 12
284 byte reduce 123
321 ; reduce 214
247 QualifiedName shift 9
332 false reduce 160
326 MethodInvocation shift 70
203 protected shift 130
320 while shift 170
321 / reduce 214
321 - reduce 214
196 ConditionalOrExpression shift 19
321 , reduce 214
410 Assignment shift 60
403 protected shift 130
275 if shift 81
113 Name shift 4
16 NullLiteral shift 43
178 PrimaryNoNewArray shift 85
432 BooleanLiteral shift 2
321 & reduce 214
321 % reduce 214
321 + reduce 214
321 * reduce 214
321 ) reduce 214
289 EOF reduce 34
118 AdditiveExpression shift 82
387 SimpleName shift 36
396 NullLiteral shift 43
149 null shift 6
96 RelationalExpression shift 106
107 WhileStatement shift 48
388 ClassInstanceCreationExpression shift 66
69 Statement shift 109
263 LEXEME(NumberLiteral) shift 8
182 Identifier shift 234
23 != reduce 179
360 IntegerLiteral shift 47
251 FieldAccess shift 54
370 while shift 170
381 true shift 62
364 ConditionalAndExpression shift 58
41 LeftHandSide shift 55
295 ExpressionStatement shift 10
306 == reduce 229
396 Primary shift 5
295 StringLiteral shift 53
305 ArrayAccess shift 26
324 char reduce 153
271 LEXEME(NumberLiteral) shift 8
337 IntegralType shift 44
360 StatementWithoutTrailingSubstatement shift 28
410 BooleanLiteral shift 2
153 LEXEME(NumberLiteral) reduce 148
188 short reduce 130
168 != reduce 222
9 && reduce 31
95 super reduce 158
419 FieldAccess shift 1
3 } reduce 132
3 { reduce 132
306 >= reduce 229
396 CharacterLiteral shift 11
72 super shift 12
118 LEXEME(StringLiteral) shift 27
380 Name shift 4
412 StatementExpression shift 231
266 PostfixExpression shift 84
232 LEXEME(NumberLiteral) shift 8
107 for shift 91
331 WhileStatement shift 48
381 CharacterLiteral shift 11
108 BooleanLiteral shift 2
152 instanceof reduce 216
264 ArrayAccess shift 120
381 NullLiteral shift 43
107 if shift 81
240 SimpleName shift 36
288 protected reduce 64
305 BooleanLiteral shift 2
361 BooleanLiteral shift 2
306 <= reduce 229
381 Primary shift 5
3 ; reduce 132
187 new shift 49
264 - shift 113
264 ( shift 116
403 private shift 127
291 static reduce 55
181 byte reduce 159
271 UnaryExpressionNotPlusMinus shift 64
390 this shift 23
264 ! shift 117
361 ArrayAccess shift 26
275 for shift 91
251 || reduce 180
157 IntegerLiteral shift 47
141 LEXEME(NumberLiteral) shift 8
372 abstract shift 186
52 QualifiedName shift 9
165 NullLiteral shift 43
35 LEXEME(CharacterLiteral) reduce 140
269 protected reduce 44
432 SimpleName shift 36
265 private shift 127
373 ; reduce 107
49 boolean shift 57
167 ~ shift 103
118 UnaryExpression shift 20
128 LEXEME(Identifier) shift 34
298 Name shift 38
259 int reduce 122
291 abstract reduce 55
348 LEXEME(Identifier) shift 34
387 true shift 62
305 PrimaryNoNewArray shift 85
228 StringLiteral shift 53
178 WhileStatementNoShortIf shift 110
419 IfThenStatement shift 87
149 ArrayAccess shift 120
417 LEXEME(Identifier) shift 34
30 LEXEME(NumberLiteral) reduce 139
241 CastExpression shift 104
252 native reduce 73
96 Expression shift 235
264 ~ shift 103
52 EqualityExpression shift 22
96 CastExpression shift 104
183 Identifier shift 42
208 instanceof reduce 206
204 new shift 49
206 LEXEME(NumberLiteral) shift 8
149 LEXEME(NumberLiteral) shift 8
108 return shift 140
331 Identifier shift 42
188 LEXEME(StringLiteral) reduce 130
13 instanceof reduce 177
167 ( shift 116
224 Name shift 4
264 LEXEME(CharacterLiteral) shift 32
167 - shift 113
290 ClassType shift 236
167 ! shift 117
138 native reduce 112
331 false shift 15
186 char reduce 60
107 LEXEME(StringLiteral) shift 27
305 SimpleName shift 36
364 PostfixExpression shift 84
183 false shift 15
381 SimpleName shift 36
49 byte shift 7
321 ] reduce 214
385 LEXEME(NumberLiteral) shift 8
331 this shift 23
196 false shift 15
385 BooleanLiteral shift 2
161 final reduce 59
207 ) shift 237
196 Identifier shift 42
417 ForInit shift 238
203 final shift 50
412 SimpleName shift 36
183 this shift 23
321 > reduce 214
321 < reduce 214
187 EmptyStatement shift 35
88 super shift 12
172 instanceof reduce 209
432 Statement shift 239
41 NullLiteral shift 43
41 CharacterLiteral shift 11
73 short reduce 56
224 Identifier shift 42
259 final reduce 122
239 true reduce 149
275 ArrayCreationExpression shift 13
157 new shift 49
269 public reduce 44
178 super shift 12
419 this shift 23
162 ReturnStatement shift 98
39 LEXEME(CharacterLiteral) shift 32
96 InclusiveOrExpression shift 29
196 Name shift 86
432 Primary shift 63
321 | reduce 214
69 StatementExpression shift 17
380 LEXEME(StringLiteral) shift 27
387 UnaryExpressionNotPlusMinus shift 64
220 while reduce 124
64 || reduce 211
206 BooleanLiteral shift 2
432 return shift 140
52 ConditionalAndExpression shift 58
41 return shift 140
409 false shift 15
191 instanceof reduce 201
88 PrimaryNoNewArray shift 85
266 LEXEME(StringLiteral) shift 27
141 BooleanLiteral shift 2
331 FieldAccess shift 1
196 FieldAccess shift 1
362 LEXEME(CharacterLiteral) shift 32
333 ; shift 240
322 { shift 72
186 native reduce 60
41 LocalVariableDeclaration shift 21
196 EqualityExpression shift 22
108 NullLiteral shift 43
370 ReferenceType shift 33
287 && reduce 226
87 short reduce 131
300 public reduce 101
3 while reduce 132
140 QualifiedName shift 9
107 IfThenStatement shift 87
409 PostfixExpression shift 84
108 Primary shift 63
432 true shift 62
41 true shift 62
355 TypeDeclaration shift 121
346 EmptyStatement shift 35
28 LEXEME(CharacterLiteral) reduce 130
40 IfThenStatement shift 87
322 ; shift 75
240 StatementExpression shift 231
153 int reduce 148
180 static reduce 80
35 char reduce 140
71 while reduce 156
416 ( shift 241
322 ( shift 39
109 new reduce 127
314 abstract reduce 50
295 StatementWithoutTrailingSubstatement shift 188
119 instanceof reduce 23
172 == reduce 209
305 super shift 12
266 this shift 23
295 PrimaryNoNewArray shift 85
46 new shift 49
28 while reduce 130
256 | reduce 223
162 IfThenElseStatementNoShortIf shift 164
387 NullLiteral shift 43
206 Assignment shift 89
172 <= reduce 209
40 ForStatement shift 79
48 LEXEME(CharacterLiteral) reduce 133
224 FieldAccess shift 54
175 ; reduce 52
263 ClassInstanceCreationExpression shift 37
208 >= reduce 206
351 ) shift 242
407 LEXEME(CharacterLiteral) shift 32
131 ; reduce 251
263 CastExpression shift 104
351 , shift 243
409 FieldAccess shift 1
310 implements reduce 33
46 LEXEME(Identifier) shift 34
372 static shift 161
331 IfThenStatement shift 87
305 null shift 6
256 ] reduce 223
240 LeftHandSide shift 55
361 null shift 6
108 true shift 62
361 LEXEME(NumberLiteral) shift 8
131 , reduce 251
165 SimpleName shift 36
387 Primary shift 5
131 ) reduce 251
208 == reduce 206
370 ArrayType shift 119
88 SimpleName shift 36
287 != reduce 226
410 return shift 140
334 char reduce 175
131 ] reduce 251
370 PrimitiveType shift 125
355 ClassDeclaration shift 122
18 true reduce 126
61 instanceof reduce 183
162 IfThenElseStatement shift 3
256 > reduce 223
380 AdditiveExpression shift 244
256 < reduce 223
256 ; reduce 223
256 ) reduce 223
256 & reduce 223
256 % reduce 223
208 <= reduce 206
312 Modifier shift 213
256 / reduce 223
364 this shift 23
177 || reduce 24
256 - reduce 223
256 , reduce 223
172 >= reduce 209
256 + reduce 223
324 LEXEME(CharacterLiteral) reduce 153
256 * reduce 223
275 LEXEME(NumberLiteral) shift 8
3 if reduce 132
243 ReferenceType shift 33
223 LeftHandSide shift 55
105 % reduce 196
105 & reduce 196
157 ClassInstanceCreationExpression shift 37
222 true reduce 157
48 ( reduce 133
175 EOF reduce 52
395 QualifiedName shift 9
412 MethodInvocation shift 70
209 <= reduce 28
193 public reduce 114
272 QualifiedName shift 9
130 public reduce 57
14 CharacterLiteral shift 11
381 ~ shift 103
300 final reduce 101
425 FieldAccess shift 1
243 PrimitiveType shift 125
217 <= reduce 197
135 class shift 245
14 LEXEME(CharacterLiteral) shift 32
118 BooleanLiteral shift 2
339 Interfaces shift 246
35 this reduce 140
49 Name shift 144
309 FieldAccess shift 1
181 while reduce 159
370 IntegerLiteral shift 47
305 NullLiteral shift 43
105 [ reduce 196
105 ] reduce 196
360 Assignment shift 60
317 ) shift 247
18 super reduce 126
308 Block shift 248
305 StringLiteral shift 53
196 MethodInvocation shift 61
74 LEXEME(NumberLiteral) shift 8
41 StatementWithoutTrailingSubstatement shift 188
286 } shift 249
259 LEXEME(NumberLiteral) reduce 122
105 ; reduce 196
48 ; reduce 133
105 < reduce 196
233 LEXEME(Identifier) reduce 151
105 > reduce 196
79 char reduce 134
171 Name shift 38
295 Primary shift 63
105 ) reduce 196
105 * reduce 196
105 + reduce 196
3 for reduce 132
360 this shift 23
105 , reduce 196
105 - reduce 196
105 . reduce 196
105 / reduce 196
266 null shift 6
247 super shift 12
223 LEXEME(StringLiteral) shift 27
387 EqualityExpression shift 22
387 ConditionalOrExpression shift 19
61 % reduce 183
61 ) reduce 183
312 EOF reduce 38
116 ~ shift 103
48 { reduce 133
105 | reduce 196
61 & reduce 183
61 - reduce 183
228 Primary shift 5
61 , reduce 183
61 + reduce 183
83 Identifier shift 42
61 * reduce 183
352 >= reduce 221
275 IfThenElseStatement shift 3
83 LEXEME(NumberLiteral) shift 8
182 VariableDeclarator shift 250
387 LEXEME(Identifier) shift 34
48 } reduce 133
46 QualifiedName shift 9
52 true shift 62
167 ArrayAccess shift 120
77 [ reduce 19
284 static reduce 123
239 LEXEME(Identifier) reduce 149
228 PrimaryNoNewArray shift 85
209 == reduce 28
179 QualifiedName shift 9
315 } reduce 98
335 LEXEME(Identifier) shift 34
352 == reduce 221
173 null reduce 144
187 Name shift 38
372 TypeDeclaration shift 121
424 private reduce 115
173 return reduce 144
230 false reduce 155
99 LEXEME(NumberLiteral) reduce 154
295 ArrayAccess shift 26
295 true shift 62
126 ) shift 251
335 ArrayType shift 119
209 >= reduce 28
76 instanceof reduce 202
240 ClassInstanceCreationExpression shift 66
27 >= reduce 5
284 char reduce 123
352 <= reduce 221
16 BooleanLiteral shift 2
390 IntegerLiteral shift 47
36 && reduce 30
409 IntegerLiteral shift 47
344 LEXEME(Identifier) shift 34
403 final shift 50
309 Assignment shift 89
141 PostfixExpression shift 84
50 public reduce 61
203 ClassBodyDeclaration shift 252
206 PostfixExpression shift 84
32 >= reduce 3
61 | reduce 183
387 RelationalExpression shift 106
74 false shift 15
162 LEXEME(NumberLiteral) shift 8
228 LEXEME(StringLiteral) shift 27
308 void reduce 59
72 LEXEME(CharacterLiteral) shift 32
39 ArrayAccess shift 26
223 true shift 62
322 return shift 140
223 Primary shift 63
115 InterfaceTypeList shift 253
228 NullLiteral shift 43
116 ( shift 116
61 > reduce 183
116 ! shift 117
417 MethodInvocation shift 70
171 LEXEME(Identifier) shift 34
195 IntegerLiteral shift 47
265 static shift 161
372 ClassDeclaration shift 122
337 byte shift 7
364 ~ shift 103
61 / reduce 183
205 Type shift 254
223 NullLiteral shift 43
61 . reduce 183
366 public reduce 79
49 LEXEME(Identifier) shift 34
346 new shift 49
116 - shift 113
252 protected reduce 73
419 Block shift 30
32 <= reduce 3
266 ArrayAccess shift 120
52 LeftHandSide shift 55
61 < reduce 183
61 ; reduce 183
323 abstract reduce 65
168 / reduce 222
241 EqualityExpression shift 22
168 - reduce 222
168 , reduce 222
168 & reduce 222
168 % reduce 222
0 private shift 127
168 + reduce 222
168 * reduce 222
168 ) reduce 222
83 false shift 15
424 abstract reduce 115
77 ) reduce 19
87 ( reduce 131
32 == reduce 3
61 ] reduce 183
61 [ reduce 183
87 ; reduce 131
277 && reduce 232
88 QualifiedName shift 9
362 StringLiteral shift 53
168 > reduce 222
224 QualifiedName shift 9
168 < reduce 222
40 CharacterLiteral shift 11
168 ; reduce 222
407 BooleanLiteral shift 2
35 else reduce 140
103 UnaryExpression shift 255
150 Name shift 177
190 ArrayCreationExpression shift 13
419 IfThenElseStatement shift 3
167 UnaryExpression shift 20
266 UnaryExpression shift 256
360 if shift 65
168 ] reduce 222
308 native reduce 59
113 Literal shift 24
228 true shift 62
387 CastExpression shift 104
322 WhileStatement shift 48
87 { reduce 131
74 MultiplicativeExpression shift 112
52 Primary shift 5
87 } reduce 131
162 while shift 93
41 StringLiteral shift 53
337 LEXEME(Identifier) shift 34
331 IntegerLiteral shift 47
168 | reduce 222
289 native shift 147
41 Type shift 197
23 == reduce 179
217 == reduce 197
72 CharacterLiteral shift 11
95 true reduce 158
140 AdditiveExpression shift 82
116 BooleanLiteral shift 2
288 final reduce 64
322 null shift 6
0 Modifier shift 213
140 SimpleName shift 36
121 EOF reduce 45
291 byte reduce 55
217 >= reduce 197
410 IfThenStatement shift 87
74 Identifier shift 42
23 >= reduce 179
165 Name shift 38
35 if reduce 140
178 SimpleName shift 36
36 >= reduce 30
23 instanceof reduce 179
39 UnaryExpression shift 20
241 RelationalExpression shift 106
113 FieldAccess shift 54
40 for shift 91
39 null shift 6
178 LeftHandSide shift 55
171 ExpressionStatement shift 10
108 LEXEME(CharacterLiteral) shift 32
46 PrimaryNoNewArray shift 85
46 true shift 62
36 == reduce 30
41 ( shift 39
215 final reduce 76
346 Literal shift 24
23 <= reduce 179
171 StatementExpression shift 17
165 StatementExpression shift 231
52 NullLiteral shift 43
113 new shift 49
281 protected shift 130
354 import shift 257
74 ArrayCreationExpression shift 13
275 Block shift 30
324 this reduce 153
284 LEXEME(NumberLiteral) reduce 123
396 StringLiteral shift 53
36 <= reduce 30
46 Primary shift 5
412 Name shift 38
16 CharacterLiteral shift 11
190 Assignment shift 89
326 Primary shift 63
10 new reduce 141
306 instanceof reduce 229
362 null shift 6
362 ArrayAccess shift 26
101 CharacterLiteral shift 11
412 Literal shift 24
178 EmptyStatement shift 35
220 false reduce 124
241 SimpleName shift 36
360 for shift 78
334 int reduce 175
162 WhileStatement shift 48
362 UnaryExpression shift 20
140 Expression shift 258
107 LEXEME(CharacterLiteral) shift 32
204 SimpleName shift 36
41 } shift 259
366 } reduce 79
277 >= reduce 232
183 PostfixExpression shift 84
407 this shift 23
213 private reduce 54
354 TypeImportOnDemandDeclaration shift 94
149 this shift 23
99 char reduce 154
41 { shift 72
326 PrimaryNoNewArray shift 85
72 LocalVariableDeclarationStatement shift 18
241 Name shift 86
223 ForStatementNoShortIf shift 151
312 native shift 147
213 char reduce 54
388 IntegerLiteral shift 47
277 == reduce 232
203 native shift 147
129 final reduce 49
425 Assignment shift 89
52 LEXEME(StringLiteral) shift 27
266 StringLiteral shift 53
68 static reduce 47
277 <= reduce 232
302 Name shift 177
188 ; reduce 130
41 BlockStatement shift 260
190 Identifier shift 42
157 UnaryExpressionNotPlusMinus shift 64
299 public reduce 105
165 LEXEME(Identifier) shift 34
41 ; shift 75
88 LEXEME(Identifier) shift 34
112 || reduce 224
403 ClassBodyDeclaration shift 261
335 ClassOrInterfaceType shift 45
40 if shift 81
118 ~ shift 103
46 SimpleName shift 36
217 && reduce 197
188 ( reduce 130
150 public shift 73
178 StatementNoShortIf shift 262
204 Name shift 38
188 } reduce 130
247 true shift 62
188 { reduce 130
157 Literal shift 24
71 return reduce 156
116 LEXEME(StringLiteral) shift 27
190 AssignmentExpression shift 131
28 return reduce 130
222 boolean reduce 157
142 | reduce 237
332 new reduce 160
83 AssignmentExpression shift 131
335 NumericType shift 67
183 ArrayCreationExpression shift 13
181 char reduce 159
190 FieldAccess shift 1
345 { reduce 92
161 private reduce 59
103 LEXEME(NumberLiteral) shift 8
160 boolean reduce 128
284 false reduce 123
118 ! shift 117
337 Identifier shift 42
0 ImportDeclaration shift 210
376 protected reduce 66
118 ( shift 116
149 BooleanLiteral shift 2
353 private reduce 72
116 AdditiveExpression shift 82
142 ; reduce 237
195 ReferenceType shift 33
118 - shift 113
240 Literal shift 24
259 char reduce 122
305 Expression shift 134
209 != reduce 28
71 null reduce 156
34 extends reduce 6
220 LEXEME(NumberLiteral) reduce 124
389 static shift 161
364 AndExpression shift 80
196 RelationalExpression shift 106
364 StringLiteral shift 53
247 PrimaryNoNewArray shift 85
96 Primary shift 5
389 native shift 147
396 AdditiveExpression shift 82
345 ; reduce 92
3 this reduce 132
142 ] reduce 237
370 int shift 51
335 Identifier shift 42
322 StringLiteral shift 53
223 SimpleName shift 36
74 AssignmentExpression shift 131
324 if reduce 153
371 super reduce 250
94 private reduce 48
40 Statement shift 95
178 StatementExpression shift 17
72 Statement shift 109
381 ! shift 117
16 StatementWithoutTrailingSubstatement shift 188
287 | reduce 226
96 true shift 62
28 null reduce 130
381 ( shift 116
275 Assignment shift 60
322 ArrayAccess shift 26
241 ConditionalOrExpression shift 19
52 PrimaryNoNewArray shift 85
69 Primary shift 63
16 Statement shift 239
142 , reduce 237
142 & reduce 237
46 NullLiteral shift 43
142 ) reduce 237
117 IntegerLiteral shift 47
432 LEXEME(CharacterLiteral) shift 32
69 true shift 62
183 IntegerLiteral shift 47
316 abstract reduce 75
337 NumericType shift 67
326 true shift 62
287 / shift 263
287 - reduce 226
287 + reduce 226
287 , reduce 226
287 ) reduce 226
287 * shift 264
171 EmptyStatement shift 35
171 MethodInvocation shift 70
0 ImportDeclarations shift 265
195 PrimitiveType shift 125
417 Name shift 199
223 PrimaryNoNewArray shift 85
346 ClassInstanceCreationExpression shift 66
287 > reduce 226
287 ; reduce 226
287 < reduce 226
63 . shift 158
96 super shift 12
264 super shift 12
178 ExpressionStatement shift 10
113 CastExpression shift 104
381 - shift 113
337 ClassOrInterfaceType shift 45
149 PostfixExpression shift 84
209 && reduce 28
308 char reduce 59
79 while reduce 134
48 LEXEME(StringLiteral) reduce 133
419 while shift 93
419 ArrayCreationExpression shift 13
275 this shift 23
287 ] reduce 226
147 class reduce 62
361 while shift 93
69 super shift 12
326 super shift 12
179 ClassInstanceCreationExpression shift 37
179 LEXEME(Identifier) shift 34
14 ~ shift 103
425 IntegerLiteral shift 47
178 Name shift 38
160 new reduce 128
272 LEXEME(Identifier) shift 34
370 IntegralType shift 44
127 class reduce 58
32 && reduce 3
18 LEXEME(CharacterLiteral) reduce 126
326 QualifiedName shift 9
428 protected reduce 88
324 for reduce 153
157 false shift 15
287 % shift 266
287 & reduce 226
432 ( shift 39
209 instanceof reduce 28
139 true reduce 174
118 StringLiteral shift 53
272 ClassInstanceCreationExpression shift 37
396 ConditionalAndExpression shift 267
424 static reduce 115
107 Statement shift 233
185 MultiplicativeExpression shift 112
188 null reduce 130
181 int reduce 159
309 AssignmentExpression shift 268
263 false shift 15
240 QualifiedName shift 9
27 != reduce 5
223 super shift 12
362 BooleanLiteral shift 2
116 ConditionalAndExpression shift 58
407 UnaryExpression shift 20
371 true reduce 250
145 Identifier shift 42
88 RelationalExpression shift 106
284 int reduce 123
52 SimpleName shift 36
204 QualifiedName shift 9
73 protected reduce 56
153 false reduce 148
74 FieldAccess shift 1
241 QualifiedName shift 9
322 StatementWithoutTrailingSubstatement shift 28
315 public reduce 98
407 CharacterLiteral shift 11
87 null reduce 131
364 null shift 6
257 LEXEME(Identifier) shift 34
409 Assignment shift 89
432 { shift 72
32 != reduce 3
222 super reduce 157
140 NullLiteral shift 43
108 ForStatementNoShortIf shift 151
167 StringLiteral shift 53
14 ! shift 117
241 LeftHandSide shift 55
259 this reduce 122
410 ForStatement shift 79
46 EqualityExpression shift 22
271 Identifier shift 42
410 this shift 23
96 PrimaryNoNewArray shift 85
378 else reduce 163
187 SimpleName shift 36
138 protected reduce 112
364 ArrayAccess shift 26
96 LeftHandSide shift 55
417 super shift 12
326 LeftHandSide shift 55
306 ] reduce 229
263 Identifier shift 42
331 ReturnStatement shift 98
284 abstract reduce 123
302 SimpleName shift 36
165 new shift 49
395 LEXEME(Identifier) shift 34
396 LEXEME(CharacterLiteral) shift 32
14 ( shift 116
162 this shift 23
190 MultiplicativeExpression shift 112
425 AssignmentExpression shift 131
46 Name shift 86
14 - shift 113
107 ArrayAccess shift 26
432 ; shift 75
87 return reduce 131
361 this shift 23
259 if reduce 122
87 LEXEME(CharacterLiteral) reduce 131
417 boolean shift 57
306 | reduce 229
161 short reduce 59
407 AndExpression shift 80
247 NullLiteral shift 43
118 CharacterLiteral shift 11
419 ReturnStatement shift 98
271 false shift 15
288 ; reduce 64
28 for reduce 130
354 TypeDeclaration shift 269
149 AndExpression shift 270
396 LEXEME(StringLiteral) shift 27
306 & reduce 229
179 CastExpression shift 104
206 UnaryExpression shift 20
390 Assignment shift 60
191 || reduce 201
305 ~ shift 103
247 Primary shift 63
306 ) reduce 229
376 ; reduce 66
306 - shift 271
306 + shift 272
228 AdditiveExpression shift 82
306 , reduce 229
107 null shift 6
259 native reduce 122
306 > reduce 229
306 ; reduce 229
306 < reduce 229
252 final reduce 73
259 else reduce 122
140 true shift 62
36 { reduce 30
52 super shift 12
36 | reduce 30
190 false shift 15
179 InclusiveOrExpression shift 273
83 ArrayCreationExpression shift 13
224 LEXEME(Identifier) shift 34
275 ForStatement shift 79
230 byte reduce 155
240 MethodInvocation shift 70
412 new shift 49
308 static reduce 59
129 EOF reduce 49
36 [ reduce 30
147 LEXEME(Identifier) reduce 62
140 PrimaryNoNewArray shift 85
388 FieldAccess shift 1
36 ] reduce 30
16 StringLiteral shift 53
361 ForStatement shift 79
40 null shift 6
408 || reduce 218
320 ReturnStatement shift 98
381 LEXEME(StringLiteral) shift 27
412 LEXEME(Identifier) shift 34
205 protected shift 130
217 != reduce 197
324 short reduce 153
187 NullLiteral shift 43
298 super shift 12
409 ArrayCreationExpression shift 13
260 byte reduce 125
88 InclusiveOrExpression shift 29
107 return shift 140
259 while reduce 122
171 QualifiedName shift 9
220 int reduce 124
316 native reduce 75
79 int reduce 134
305 ) shift 274
108 ( shift 39
305 - shift 113
88 EqualityExpression shift 22
118 ConditionalAndExpression shift 58
108 ; shift 75
296 public reduce 113
305 ! shift 117
98 LEXEME(Identifier) reduce 142
305 ( shift 116
30 byte reduce 139
101 StringLiteral shift 53
32 instanceof reduce 3
52 Expression shift 31
103 PostfixExpression shift 84
92 || reduce 219
98 new reduce 142
53 || reduce 11
94 static reduce 48
196 new shift 49
196 LEXEME(Identifier) shift 34
116 ArrayAccess shift 26
141 UnaryExpression shift 20
271 IntegerLiteral shift 47
289 static shift 161
196 UnaryExpressionNotPlusMinus shift 64
109 boolean reduce 127
272 CastExpression shift 104
99 this reduce 154
27 && reduce 5
387 MethodInvocation shift 61
216 ) shift 275
50 boolean reduce 61
75 int reduce 143
88 Name shift 86
118 LEXEME(CharacterLiteral) shift 32
417 SimpleName shift 36
309 MultiplicativeExpression shift 112
309 ArrayCreationExpression shift 13
390 ArrayCreationExpression shift 13
380 super shift 12
71 short reduce 156
354 ClassDeclaration shift 122
432 ForStatementNoShortIf shift 151
162 ForStatement shift 79
94 abstract reduce 48
275 while shift 170
41 LEXEME(StringLiteral) shift 27
141 this shift 23
35 for reduce 140
331 Assignment shift 60
165 QualifiedName shift 9
206 this shift 23
272 new shift 49
16 { shift 72
153 byte reduce 148
75 LEXEME(NumberLiteral) reduce 143
213 int reduce 54
16 LEXEME(CharacterLiteral) shift 32
224 Literal shift 24
320 IntegerLiteral shift 47
228 VariableInitializer shift 276
195 Identifier shift 42
335 byte shift 7
240 new shift 49
331 IfThenElseStatement shift 3
88 MethodInvocation shift 61
380 PrimaryNoNewArray shift 85
181 LEXEME(NumberLiteral) reduce 159
107 CharacterLiteral shift 11
196 CastExpression shift 104
16 ; shift 75
160 LEXEME(Identifier) reduce 128
337 ReferenceType shift 277
116 StringLiteral shift 53
233 new reduce 151
113 UnaryExpressionNotPlusMinus shift 64
395 ClassOrInterfaceType shift 278
36 != reduce 30
266 BooleanLiteral shift 2
310 LEXEME(Identifier) reduce 33
360 ForStatement shift 79
364 BooleanLiteral shift 2
385 PostfixExpression shift 84
425 MultiplicativeExpression shift 112
101 ~ shift 103
232 this shift 23
224 new shift 49
16 ( shift 39
381 AdditiveExpression shift 279
254 VariableDeclaratorId shift 280
322 CharacterLiteral shift 11
380 true shift 62
373 public reduce 107
152 || reduce 216
380 Primary shift 5
187 ExpressionStatement shift 10
305 AdditiveExpression shift 82
362 AndExpression shift 80
101 - shift 113
167 null shift 6
295 LEXEME(StringLiteral) shift 27
269 ; reduce 44
101 ( shift 116
187 StatementExpression shift 17
185 IntegerLiteral shift 47
83 MultiplicativeExpression shift 112
28 short reduce 130
196 Literal shift 24
46 LeftHandSide shift 55
187 LeftHandSide shift 55
361 for shift 78
353 abstract reduce 72
419 Assignment shift 60
99 while reduce 154
186 interface reduce 60
187 PrimaryNoNewArray shift 85
101 ! shift 117
69 LocalVariableDeclarationStatement shift 18
13 || reduce 177
59 { shift 281
228 Expression shift 282
213 static reduce 54
49 ClassOrInterfaceType shift 283
316 private reduce 75
79 LEXEME(NumberLiteral) reduce 134
410 for shift 78
27 == reduce 5
195 FieldAccess shift 1
140 Primary shift 5
204 LeftHandSide shift 55
251 IntegerLiteral shift 47
380 SimpleName shift 36
320 IfThenElseStatement shift 3
72 } shift 284
419 LEXEME(NumberLiteral) shift 8
121 final reduce 45
72 { shift 72
320 Block shift 30
360 IfThenStatement shift 87
3 short reduce 132
150 SimpleName shift 36
361 if shift 65
27 <= reduce 5
178 QualifiedName shift 9
213 abstract reduce 54
175 final reduce 52
286 final shift 50
107 BooleanLiteral shift 2
27 instanceof reduce 5
30 false reduce 139
335 PrimitiveType shift 125
396 - shift 113
149 UnaryExpression shift 20
361 WhileStatement shift 48
0 EOF reduce 41
417 StatementExpression shift 285
286 protected shift 130
165 MethodInvocation shift 70
76 | reduce 202
118 ArrayAccess shift 26
281 InterfaceMemberDeclarations shift 286
95 boolean reduce 158
175 protected reduce 52
197 VariableDeclaratorId shift 280
88 ConditionalOrExpression shift 19
396 ! shift 117
101 LEXEME(CharacterLiteral) shift 32
396 ( shift 116
121 protected reduce 45
271 MultiplicativeExpression shift 287
195 false shift 15
76 [ reduce 202
410 if shift 65
76 ] reduce 202
364 CharacterLiteral shift 11
119 || reduce 23
387 QualifiedName shift 9
385 this shift 23
388 false shift 15
266 CharacterLiteral shift 11
425 ArrayCreationExpression shift 13
263 FieldAccess shift 54
76 / reduce 202
396 ~ shift 103
40 BooleanLiteral shift 2
183 LEXEME(NumberLiteral) shift 8
410 WhileStatement shift 48
251 ArrayCreationExpression shift 13
117 LEXEME(NumberLiteral) shift 8
309 IntegerLiteral shift 47
76 < reduce 202
195 NumericType shift 67
76 ; reduce 202
204 StatementExpression shift 231
76 > reduce 202
188 return reduce 130
76 & reduce 202
76 % reduce 202
339 ClassBody shift 288
76 * reduce 202
76 ) reduce 202
308 int reduce 59
76 , reduce 202
387 Name shift 86
76 + reduce 202
308 abstract reduce 59
76 . reduce 202
305 LEXEME(StringLiteral) shift 27
76 - reduce 202
72 ( shift 39
39 AndExpression shift 80
196 ClassInstanceCreationExpression shift 37
108 LEXEME(StringLiteral) shift 27
172 || reduce 209
69 BlockStatement shift 220
354 TypeDeclarations shift 289
116 LEXEME(CharacterLiteral) shift 32
224 ClassInstanceCreationExpression shift 37
383 extends shift 290
205 Modifier shift 291
18 LEXEME(StringLiteral) reduce 126
337 PrimitiveType shift 292
289 abstract shift 186
417 LeftHandSide shift 55
167 CharacterLiteral shift 11
72 ; shift 75
35 short reduce 140
300 } reduce 101
337 ArrayType shift 119
331 IfThenElseStatementNoShortIf shift 164
322 BooleanLiteral shift 2
302 FormalParameter shift 201
179 new shift 49
208 || reduce 206
224 CastExpression shift 104
396 super shift 12
8 || reduce 4
88 UnaryExpressionNotPlusMinus shift 64
204 ClassInstanceCreationExpression shift 66
308 boolean reduce 59
42 || reduce 32
39 PostfixExpression shift 84
407 super shift 12
331 EmptyStatement shift 35
247 { shift 72
309 ArrayAccess shift 26
417 PrimaryNoNewArray shift 85
167 this shift 23
107 LEXEME(NumberLiteral) shift 8
239 boolean reduce 149
251 LEXEME(NumberLiteral) shift 8
98 LEXEME(StringLiteral) reduce 142
357 | reduce 200
48 boolean reduce 133
197 VariableDeclarator shift 293
289 private shift 127
74 Literal shift 24
324 super reduce 153
425 true shift 62
326 LEXEME(Identifier) shift 34
28 LEXEME(Identifier) reduce 130
44 [ reduce 17
162 IfThenStatement shift 87
87 super reduce 131
0 InterfaceDeclaration shift 175
263 LEXEME(Identifier) shift 34
196 AndExpression shift 80
259 new reduce 122
40 LEXEME(NumberLiteral) shift 8
324 boolean reduce 153
263 BooleanLiteral shift 2
69 EmptyStatement shift 35
173 else reduce 144
432 while shift 93
153 this reduce 148
388 LEXEME(NumberLiteral) shift 8
183 PrimaryNoNewArray shift 85
41 IntegerLiteral shift 47
146 else reduce 164
117 false shift 15
320 BooleanLiteral shift 2
18 ; reduce 126
322 if shift 65
87 boolean reduce 131
113 StringLiteral shift 53
196 PrimaryNoNewArray shift 85
380 LEXEME(NumberLiteral) shift 8
247 EmptyStatement shift 35
40 StringLiteral shift 53
390 LEXEME(NumberLiteral) shift 8
220 if reduce 124
135 public shift 73
254 Identifier shift 294
132 ) shift 295
388 StringLiteral shift 53
101 true shift 62
396 IntegerLiteral shift 47
71 LEXEME(CharacterLiteral) reduce 156
322 Statement shift 153
22 || reduce 236
239 super reduce 149
331 { shift 72
320 LEXEME(Identifier) shift 34
40 StatementWithoutTrailingSubstatement shift 188
286 InterfaceMemberDeclaration shift 296
18 } reduce 126
165 ArrayAccess shift 26
247 ( shift 39
34 implements reduce 6
189 abstract reduce 99
9 LEXEME(Identifier) reduce 31
18 { reduce 126
195 StatementExpression shift 285
326 Assignment shift 60
353 static reduce 72
186 short reduce 60
322 this shift 23
68 import reduce 47
364 UnaryExpressionNotPlusMinus shift 64
271 Name shift 4
322 for shift 78
250 , reduce 82
309 PrimaryNoNewArray shift 85
247 ; shift 75
50 class reduce 61
284 else reduce 123
11 != reduce 10
417 ArrayAccess shift 26
250 ; reduce 82
163 EOF reduce 63
185 LEXEME(Identifier) shift 34
230 for reduce 155
87 new reduce 131
396 new shift 49
284 if reduce 123
190 new shift 49
230 if reduce 155
259 super reduce 122
127 abstract reduce 58
190 IntegerLiteral shift 47
69 StatementWithoutTrailingSubstatement shift 188
181 if reduce 159
298 null shift 6
72 Identifier shift 42
160 LEXEME(CharacterLiteral) reduce 128
83 new shift 49
133 || reduce 217
244 || reduce 230
59 ExtendsInterfaces shift 297
346 LEXEME(Identifier) shift 34
157 ~ shift 103
46 MethodInvocation shift 61
183 ArrayAccess shift 120
390 StringLiteral shift 53
195 ArrayCreationExpression shift 13
409 AssignmentExpression shift 131
83 IntegerLiteral shift 47
75 char reduce 143
220 for reduce 124
335 int shift 51
320 Assignment shift 60
187 Primary shift 63
2 <= reduce 9
320 Name shift 38
97 ] shift 105
167 PostfixExpression shift 84
120 + reduce 184
120 , reduce 184
120 - reduce 184
120 . reduce 184
120 / reduce 184
171 true shift 62
157 ! shift 117
157 CastExpression shift 104
296 } reduce 113
157 - shift 113
120 % reduce 184
360 true shift 62
120 & reduce 184
424 } reduce 115
410 IfThenElseStatement shift 3
157 ( shift 116
387 ArrayAccess shift 26
120 ) reduce 184
120 * reduce 184
181 for reduce 159
305 MethodInvocation shift 61
2 == reduce 9
173 if reduce 144
157 ; shift 298
370 SimpleName shift 36
30 LEXEME(StringLiteral) reduce 139
263 Name shift 4
18 ( reduce 126
107 EmptyStatement shift 35
36 implements reduce 30
69 { shift 72
331 LEXEME(NumberLiteral) shift 8
69 } shift 299
120 ; reduce 184
120 < reduce 184
120 > reduce 184
243 Name shift 177
389 abstract shift 186
2 >= reduce 9
310 instanceof reduce 33
150 private shift 127
96 PostfixExpression shift 84
162 new shift 49
251 StringLiteral shift 53
334 byte reduce 175
157 RelationalExpression shift 106
266 CastExpression shift 104
271 LEXEME(Identifier) shift 34
284 for reduce 123
120 [ reduce 184
120 ] reduce 184
190 super shift 12
41 IfThenStatement shift 87
290 Name shift 144
56 LEXEME(Identifier) shift 34
326 BooleanLiteral shift 2
187 WhileStatement shift 48
380 StringLiteral shift 53
432 StringLiteral shift 53
109 int reduce 127
40 while shift 170
162 IntegerLiteral shift 47
173 for reduce 144
69 ; shift 75
387 PrimaryNoNewArray shift 85
120 | reduce 184
432 WhileStatementNoShortIf shift 110
360 return shift 140
185 Name shift 4
360 ForStatementNoShortIf shift 151
107 StatementWithoutTrailingSubstatement shift 188
357 ] reduce 200
357 [ reduce 200
69 ( shift 39
108 IfThenElseStatement shift 3
357 & reduce 200
95 LEXEME(CharacterLiteral) reduce 158
357 % reduce 200
409 LEXEME(NumberLiteral) shift 8
357 . reduce 200
357 - reduce 200
357 , reduce 200
357 + reduce 200
357 * reduce 200
419 IfThenElseStatementNoShortIf shift 164
357 ) reduce 200
295 this shift 23
354 native shift 147
57 LEXEME(Identifier) reduce 16
357 / reduce 200
357 > reduce 200
357 < reduce 200
357 ; reduce 200
201 ) reduce 93
414 ConstructorBody shift 300
326 FieldAccess shift 1
370 BooleanLiteral shift 2
294 [ reduce 85
186 final reduce 60
249 EOF reduce 110
101 MultiplicativeExpression shift 112
34 || reduce 6
102 [ reduce 199
247 LEXEME(NumberLiteral) shift 8
299 protected reduce 105
102 ] reduce 199
205 ArrayType shift 119
14 Identifier shift 42
107 while shift 170
381 Literal shift 24
201 , reduce 93
196 Expression shift 301
346 Identifier shift 42
153 for reduce 148
294 ; reduce 85
294 = reduce 85
371 false reduce 250
323 ; reduce 65
204 Primary shift 63
102 | reduce 199
161 LEXEME(Identifier) reduce 59
294 ( shift 302
403 } shift 303
285 ; reduce 169
294 , reduce 85
298 LEXEME(NumberLiteral) shift 8
249 abstract reduce 110
228 BooleanLiteral shift 2
251 && reduce 180
40 EmptyStatement shift 35
247 StatementWithoutTrailingSubstatement shift 188
185 SimpleName shift 36
109 LEXEME(StringLiteral) reduce 127
72 true shift 62
241 ArgumentList shift 304
36 || reduce 30
79 new reduce 134
272 FieldAccess shift 54
153 if reduce 148
332 byte reduce 160
41 boolean shift 57
284 this reduce 123
102 % reduce 199
102 & reduce 199
254 LEXEME(Identifier) shift 34
102 ( shift 305
233 true reduce 151
102 ) reduce 199
264 LEXEME(StringLiteral) shift 27
102 * reduce 199
3 false reduce 132
37 == reduce 181
102 + reduce 199
102 , reduce 199
228 Assignment shift 89
185 AdditiveExpression shift 306
102 - reduce 199
102 . reduce 199
387 IntegerLiteral shift 47
102 / reduce 199
103 FieldAccess shift 54
331 StringLiteral shift 53
370 Assignment shift 60
102 ; reduce 199
102 < reduce 199
102 = reduce 199
102 > reduce 199
163 native reduce 63
37 >= reduce 181
118 super shift 12
395 InterfaceType shift 307
371 LEXEME(StringLiteral) reduce 250
320 SimpleName shift 36
243 LEXEME(Identifier) shift 34
323 static reduce 65
72 SimpleName shift 36
116 Literal shift 24
380 ~ shift 103
410 ExpressionStatement shift 10
139 int reduce 174
387 new shift 49
112 >= reduce 224
68 private reduce 47
159 instanceof reduce 195
203 static shift 308
239 new reduce 149
376 public reduce 66
228 Name shift 86
88 LEXEME(CharacterLiteral) shift 32
251 != reduce 180
167 ArrayCreationExpression shift 13
88 ClassInstanceCreationExpression shift 37
37 <= reduce 181
230 this reduce 155
295 ArrayCreationExpression shift 13
326 SimpleName shift 36
380 - shift 113
346 Name shift 38
380 ( shift 116
16 null shift 6
55 AssignmentOperator shift 309
331 StatementWithoutTrailingSubstatement shift 28
56 Identifier shift 310
241 Literal shift 24
171 return shift 140
322 StatementExpression shift 17
35 super reduce 140
326 Identifier shift 42
112 <= reduce 224
72 return shift 140
35 boolean reduce 140
302 Identifier shift 42
96 false shift 15
109 false reduce 127
96 this shift 23
346 Assignment shift 60
108 ExpressionStatement shift 10
380 ! shift 117
157 LEXEME(NumberLiteral) shift 8
369 ; reduce 43
366 private reduce 79
112 == reduce 224
46 UnaryExpressionNotPlusMinus shift 64
240 CharacterLiteral shift 11
346 BooleanLiteral shift 2
11 ] reduce 10
309 super shift 12
254 MethodDeclarator shift 311
83 FieldAccess shift 1
10 byte reduce 141
11 [ reduce 10
264 false shift 15
96 NullLiteral shift 43
371 this reduce 250
396 ArrayAccess shift 120
305 LEXEME(CharacterLiteral) shift 32
39 this shift 23
103 Name shift 4
117 ArrayCreationExpression shift 13
147 int reduce 62
11 | reduce 10
370 Identifier shift 42
241 null shift 6
326 Name shift 38
96 QualifiedName shift 9
107 StringLiteral shift 53
298 StringLiteral shift 53
264 Primary shift 5
48 super reduce 133
319 public reduce 77
370 Name shift 199
291 private reduce 55
362 super shift 12
312 private shift 127
277 instanceof reduce 232
3 LEXEME(StringLiteral) reduce 132
187 ClassInstanceCreationExpression shift 66
263 SimpleName shift 36
295 Block shift 30
303 public reduce 71
337 boolean shift 57
14 true shift 62
264 QualifiedName shift 9
223 if shift 65
46 CharacterLiteral shift 11
103 super shift 12
228 FieldAccess shift 1
403 static shift 308
73 abstract reduce 56
409 StringLiteral shift 53
272 Name shift 4
220 this reduce 124
130 int reduce 57
74 ConditionalAndExpression shift 58
179 super shift 12
149 ClassInstanceCreationExpression shift 37
335 QualifiedName shift 9
264 NullLiteral shift 43
369 final reduce 43
14 SimpleName shift 36
30 char reduce 139
195 char shift 25
52 RelationalExpression shift 106
228 EqualityExpression shift 22
45 LEXEME(Identifier) reduce 22
271 BooleanLiteral shift 2
113 - shift 113
41 new shift 49
113 ( shift 116
315 final reduce 98
69 LEXEME(NumberLiteral) shift 8
272 super shift 12
18 while reduce 126
286 private shift 127
265 abstract shift 186
113 ! shift 117
251 null shift 6
223 for shift 78
210 final reduce 42
96 LEXEME(StringLiteral) shift 27
98 char reduce 142
204 NullLiteral shift 43
387 AndExpression shift 80
290 SimpleName shift 36
101 AdditiveExpression shift 82
362 ConditionalOrExpression shift 19
140 InclusiveOrExpression shift 29
113 ~ shift 103
196 ArrayAccess shift 26
223 Statement shift 222
271 FieldAccess shift 54
116 null shift 6
265 TypeDeclarations shift 312
0 ; shift 313
346 FieldAccess shift 1
332 LEXEME(CharacterLiteral) reduce 160
396 PrimaryNoNewArray shift 85
0 final shift 50
396 AndExpression shift 80
352 instanceof reduce 221
224 - shift 113
162 BooleanLiteral shift 2
370 true shift 62
2 != reduce 9
41 ArrayAccess shift 26
224 ( shift 116
305 ClassInstanceCreationExpression shift 37
16 Literal shift 24
224 ! shift 117
184 | reduce 207
260 LEXEME(Identifier) reduce 125
72 LEXEME(Identifier) shift 34
103 LEXEME(Identifier) shift 34
39 false shift 15
369 import reduce 43
362 EqualityExpression shift 22
264 this shift 23
49 Identifier shift 42
162 LEXEME(Identifier) shift 34
184 ] reduce 207
247 while shift 170
184 [ reduce 207
222 new reduce 157
122 public reduce 51
184 . reduce 207
140 ConditionalAndExpression shift 58
184 - reduce 207
184 / reduce 207
184 * reduce 207
184 ) reduce 207
184 , reduce 207
184 + reduce 207
72 BooleanLiteral shift 2
171 SimpleName shift 36
184 > reduce 207
184 = reduce 207
184 < reduce 207
184 ; reduce 207
228 super shift 12
232 super shift 12
210 private reduce 42
83 Assignment shift 89
409 RelationalExpression shift 106
105 != reduce 196
204 LEXEME(StringLiteral) shift 27
184 & reduce 207
184 % reduce 207
370 FieldAccess shift 1
179 EqualityExpression shift 22
127 static reduce 58
243 Identifier shift 42
419 ForStatement shift 79
83 BooleanLiteral shift 2
358 ; shift 314
73 interface reduce 56
365 Block shift 315
96 UnaryExpression shift 20
2 && reduce 9
385 true shift 62
419 ForStatementNoShortIf shift 151
410 ReturnStatement shift 98
203 abstract shift 186
203 ClassMemberDeclaration shift 316
187 false shift 15
103 BooleanLiteral shift 2
417 new shift 49
407 PrimaryNoNewArray shift 85
41 PrimaryNoNewArray shift 85
205 byte shift 7
10 boolean reduce 141
117 this shift 23
425 SimpleName shift 36
30 int reduce 139
338 || reduce 190
11 & reduce 10
11 % reduce 10
417 IntegerLiteral shift 47
221 instanceof reduce 193
16 LEXEME(NumberLiteral) shift 8
162 Assignment shift 60
240 ForUpdate shift 317
195 Primary shift 63
320 IfThenStatement shift 87
11 . reduce 10
11 - reduce 10
99 true reduce 154
11 / reduce 10
11 * reduce 10
11 ) reduce 10
11 , reduce 10
11 + reduce 10
370 ForStatement shift 79
389 EOF reduce 37
11 > reduce 10
187 QualifiedName shift 9
425 Identifier shift 42
11 < reduce 10
271 SimpleName shift 36
105 && reduce 196
11 ; reduce 10
118 Expression shift 318
410 PrimaryNoNewArray shift 85
213 byte reduce 54
210 ; reduce 42
189 static reduce 99
53 >= reduce 11
228 SimpleName shift 36
264 PostfixExpression shift 84
141 true shift 62
155 >= reduce 203
41 Assignment shift 60
71 byte reduce 156
206 true shift 62
69 PrimitiveType shift 125
130 void reduce 57
165 super shift 12
364 LEXEME(CharacterLiteral) shift 32
334 LEXEME(CharacterLiteral) reduce 175
179 Name shift 4
215 public reduce 76
195 NullLiteral shift 43
188 this reduce 130
288 abstract reduce 64
204 MethodInvocation shift 70
299 native reduce 105
124 else reduce 166
374 protected reduce 106
88 Primary shift 5
108 PrimaryNoNewArray shift 85
381 null shift 6
155 <= reduce 203
41 BooleanLiteral shift 2
232 IntegerLiteral shift 47
233 return reduce 151
320 Identifier shift 42
43 || reduce 12
407 FieldAccess shift 1
24 || reduce 178
360 SimpleName shift 36
149 LEXEME(CharacterLiteral) shift 32
266 ( shift 116
403 Modifier shift 213
266 ! shift 117
364 MethodInvocation shift 61
72 Assignment shift 60
155 == reduce 203
195 LocalVariableDeclaration shift 198
232 SimpleName shift 36
14 BooleanLiteral shift 2
362 Name shift 86
240 LEXEME(CharacterLiteral) shift 32
354 EOF reduce 35
407 ArrayAccess shift 26
265 native shift 147
117 PostfixExpression shift 84
195 IntegralType shift 44
149 Primary shift 5
223 StatementExpression shift 17
265 Modifier shift 213
259 LEXEME(Identifier) reduce 122
99 short reduce 154
266 - shift 113
272 ArrayAccess shift 120
331 while shift 93
412 super shift 12
161 public reduce 59
232 LEXEME(Identifier) shift 34
179 ArrayAccess shift 120
149 CharacterLiteral shift 11
410 ArrayAccess shift 26
203 ConstructorDeclaration shift 319
295 StatementExpression shift 17
46 ClassInstanceCreationExpression shift 37
295 Literal shift 24
118 new shift 49
353 ; reduce 72
92 <= reduce 219
6 || reduce 2
266 ~ shift 103
53 <= reduce 11
160 byte reduce 128
35 byte reduce 140
232 new shift 49
130 native reduce 57
247 StringLiteral shift 53
361 IfThenElseStatementNoShortIf shift 164
355 Modifier shift 213
149 NullLiteral shift 43
370 return shift 140
53 == reduce 11
150 Identifier shift 42
162 super shift 12
364 UnaryExpression shift 20
369 static reduce 43
94 import reduce 48
79 boolean reduce 134
88 LeftHandSide shift 55
69 ReferenceType shift 33
108 ArrayAccess shift 26
187 LEXEME(StringLiteral) shift 27
321 || reduce 214
320 FieldAccess shift 1
103 new shift 49
260 true reduce 125
147 byte reduce 62
3 char reduce 132
140 this shift 23
322 QualifiedName shift 9
53 && reduce 11
409 ~ shift 103
155 && reduce 203
107 { shift 72
136 ; reduce 90
213 class reduce 54
362 FieldAccess shift 1
240 PrimaryNoNewArray shift 85
92 >= reduce 219
75 this reduce 143
103 IntegerLiteral shift 47
326 new shift 49
175 native reduce 52
340 == reduce 29
64 | reduce 211
173 this reduce 144
223 this shift 23
88 CharacterLiteral shift 11
92 == reduce 219
118 IntegerLiteral shift 47
364 QualifiedName shift 9
141 CastExpression shift 104
390 ( shift 39
84 || reduce 212
390 ) shift 320
129 private reduce 49
289 Modifiers shift 135
69 StringLiteral shift 53
340 >= reduce 29
64 ] reduce 211
180 public reduce 80
149 UnaryExpressionNotPlusMinus shift 64
40 { shift 72
412 ArrayAccess shift 26
187 MethodInvocation shift 70
391 || reduce 189
108 CharacterLiteral shift 11
409 ( shift 116
157 AssignmentExpression shift 131
179 FieldAccess shift 54
409 - shift 113
104 instanceof reduce 215
232 Assignment shift 60
432 LEXEME(NumberLiteral) shift 8
83 super shift 12
88 NullLiteral shift 43
409 ] shift 209
222 LEXEME(Identifier) reduce 157
263 IntegerLiteral shift 47
295 NullLiteral shift 43
257 Identifier shift 42
305 Primary shift 5
185 Identifier shift 42
366 final reduce 79
181 this reduce 159
241 AssignmentExpression shift 131
381 LEXEME(NumberLiteral) shift 8
178 return shift 140
432 StatementWithoutTrailingSubstatement shift 28
69 Type shift 197
335 IntegralType shift 44
387 super shift 12
286 Modifiers shift 150
53 != reduce 11
323 final reduce 65
241 InclusiveOrExpression shift 29
432 Literal shift 24
385 CastExpression shift 104
396 LEXEME(Identifier) shift 34
82 || reduce 227
185 FieldAccess shift 54
263 new shift 49
251 ! shift 117
410 CharacterLiteral shift 11
139 LEXEME(StringLiteral) reduce 174
251 & reduce 180
186 private reduce 60
251 % reduce 180
251 ( shift 116
94 ; reduce 48
118 AndExpression shift 80
260 return reduce 125
355 abstract shift 186
98 this reduce 142
101 LEXEME(Identifier) shift 34
388 null shift 6
251 * reduce 180
248 public reduce 100
251 ) reduce 180
256 || reduce 223
251 , reduce 180
251 + reduce 180
251 . reduce 180
251 - reduce 180
220 char reduce 124
251 / reduce 180
101 BooleanLiteral shift 2
117 UnaryExpression shift 321
39 ConditionalAndExpression shift 58
322 false shift 15
251 < reduce 180
251 ; reduce 180
251 > reduce 180
116 InclusiveOrExpression shift 29
240 ArrayAccess shift 26
107 ( shift 39
87 LEXEME(Identifier) reduce 131
195 Literal shift 24
401 ) shift 322
68 final reduce 47
355 static shift 161
178 true shift 62
107 ; shift 75
64 ; reduce 211
396 BooleanLiteral shift 2
368 || reduce 27
206 CastExpression shift 104
251 [ reduce 180
64 > reduce 211
312 final shift 50
251 ] reduce 180
364 LEXEME(StringLiteral) shift 27
284 native reduce 123
64 < reduce 211
64 * reduce 211
64 + reduce 211
64 ) reduce 211
64 & reduce 211
64 % reduce 211
167 LEXEME(StringLiteral) shift 27
64 / reduce 211
64 , reduce 211
64 - reduce 211
108 ReturnStatement shift 98
42 implements reduce 32
251 | reduce 180
251 ~ shift 103
340 <= reduce 29
381 StringLiteral shift 53
14 LEXEME(Identifier) shift 34
209 ] reduce 28
394 >= reduce 210
412 PrimaryNoNewArray shift 85
428 native reduce 88
209 [ reduce 28
228 ArrayAccess shift 26
360 IfThenElseStatementNoShortIf shift 164
75 false reduce 143
41 super shift 12
85 <= reduce 176
116 ArrayCreationExpression shift 13
178 IfThenElseStatementNoShortIf shift 164
209 | reduce 28
181 false reduce 159
157 InclusiveOrExpression shift 29
27 || reduce 5
116 AssignmentExpression shift 131
173 false reduce 144
315 private reduce 98
355 final shift 50
394 == reduce 210
195 ClassInstanceCreationExpression shift 66
167 false shift 15
188 for reduce 130
83 ArrayAccess shift 26
305 CharacterLiteral shift 11
48 byte reduce 133
190 PrimaryNoNewArray shift 85
410 super shift 12
85 >= reduce 176
290 LEXEME(Identifier) shift 34
432 null shift 6
117 LEXEME(StringLiteral) shift 27
209 < reduce 28
209 ; reduce 28
209 > reduce 28
75 else reduce 143
361 return shift 140
331 ( shift 39
117 QualifiedName shift 9
171 BooleanLiteral shift 2
74 null shift 6
360 BooleanLiteral shift 2
209 , reduce 28
98 false reduce 142
218 instanceof reduce 192
85 == reduce 176
195 int shift 51
331 ; shift 75
83 SimpleName shift 36
209 ) reduce 28
37 && reduce 181
209 & reduce 28
386 ClassBody shift 323
52 - shift 113
44 ) reduce 17
165 PrimaryNoNewArray shift 85
40 ; shift 75
52 ( shift 116
83 PrimaryNoNewArray shift 85
105 == reduce 196
69 while shift 170
295 Statement shift 324
364 false shift 15
52 ! shift 117
320 ForStatement shift 79
105 <= reduce 196
409 ! shift 117
95 int reduce 158
190 ArrayAccess shift 26
195 ClassOrInterfaceType shift 45
75 LEXEME(StringLiteral) reduce 143
232 BooleanLiteral shift 2
204 ArrayCreationExpression shift 13
224 ~ shift 103
257 Name shift 325
96 ArrayCreationExpression shift 13
39 LeftHandSide shift 55
361 true shift 62
136 { reduce 90
298 ( shift 39
298 ) shift 326
326 IntegerLiteral shift 47
394 <= reduce 210
18 LEXEME(NumberLiteral) reduce 126
291 final reduce 55
108 super shift 12
188 if reduce 130
388 Literal shift 24
130 char reduce 57
105 >= reduce 196
203 Modifier shift 213
18 null reduce 126
52 ~ shift 103
40 ( shift 39
259 public reduce 122
167 QualifiedName shift 9
37 != reduce 181
305 UnaryExpressionNotPlusMinus shift 64
288 static reduce 64
241 ( shift 116
409 Literal shift 24
241 ! shift 117
276 ; reduce 84
389 ; shift 313
149 ArrayCreationExpression shift 13
8 <= reduce 4
2 < reduce 9
276 , reduce 84
2 ; reduce 9
2 > reduce 9
275 Identifier shift 42
24 != reduce 178
241 - shift 113
127 protected reduce 58
241 ) shift 327
41 SimpleName shift 36
71 LEXEME(StringLiteral) reduce 156
403 ConstructorDeclaration shift 319
264 UnaryExpressionNotPlusMinus shift 64
73 static reduce 56
251 Literal shift 24
206 ] shift 105
118 ConditionalOrExpression shift 19
178 Identifier shift 42
173 while reduce 144
165 FieldAccess shift 1
101 RelationalExpression shift 328
2 ] reduce 9
313 public reduce 53
141 ( shift 116
2 [ reduce 9
72 IfThenStatement shift 87
95 false reduce 158
141 - shift 113
410 IntegerLiteral shift 47
122 private reduce 51
334 new reduce 175
305 QualifiedName shift 9
322 Primary shift 63
75 LEXEME(CharacterLiteral) reduce 143
265 ClassDeclaration shift 122
206 ~ shift 103
8 >= reduce 4
2 | reduce 9
147 char reduce 62
389 protected shift 130
387 Assignment shift 89
241 ArrayCreationExpression shift 13
356 VariableDeclaratorId shift 329
46 Expression shift 134
30 for reduce 139
324 byte reduce 153
220 null reduce 124
223 WhileStatementNoShortIf shift 110
141 ~ shift 103
284 while reduce 123
8 == reduce 4
264 Literal shift 24
118 EqualityExpression shift 22
117 Literal shift 24
229 != reduce 194
140 ~ shift 103
291 LEXEME(Identifier) reduce 55
183 CharacterLiteral shift 11
417 FieldAccess shift 1
139 byte reduce 174
272 MultiplicativeExpression shift 330
6 != reduce 2
321 instanceof reduce 214
295 WhileStatement shift 48
309 Name shift 86
385 ~ shift 103
417 LEXEME(CharacterLiteral) shift 32
118 Assignment shift 89
361 Identifier shift 42
419 EmptyStatement shift 35
183 MethodInvocation shift 61
338 instanceof reduce 190
75 for reduce 143
265 TypeDeclaration shift 269
176 ) shift 331
412 LEXEME(CharacterLiteral) shift 32
266 true shift 62
187 Statement shift 332
3 LEXEME(CharacterLiteral) reduce 132
52 null shift 6
385 ( shift 116
140 - shift 113
289 ; shift 313
362 Expression shift 333
140 ; shift 334
71 char reduce 156
141 ! shift 117
205 IntegralType shift 44
140 ! shift 117
353 final reduce 72
223 null shift 6
162 Identifier shift 42
168 || reduce 222
75 if reduce 143
223 WhileStatement shift 48
140 ( shift 116
206 ! shift 117
228 AndExpression shift 80
241 ~ shift 103
233 ; reduce 151
173 LEXEME(StringLiteral) reduce 144
133 >= reduce 217
295 null shift 6
206 - shift 113
419 StatementWithoutTrailingSubstatement shift 28
302 short shift 77
361 StatementWithoutTrailingSubstatement shift 28
385 ! shift 117
46 false shift 15
229 && reduce 194
273 | shift 149
206 ( shift 116
233 ( reduce 151
112 % shift 266
112 & reduce 224
112 ) reduce 224
112 * shift 264
357 <= reduce 200
200 ( shift 335
179 Identifier shift 42
112 - reduce 224
112 + reduce 224
133 == reduce 217
112 , reduce 224
112 / shift 263
52 InclusiveOrExpression shift 29
108 IfThenStatement shift 87
419 ; shift 75
183 FieldAccess shift 54
150 short shift 77
112 > reduce 224
112 ; reduce 224
112 < reduce 224
273 ] reduce 241
419 Identifier shift 42
419 ( shift 39
233 { reduce 151
233 } reduce 151
133 <= reduce 217
112 ] reduce 224
322 while shift 93
200 . reduce 30
273 ; reduce 241
88 Expression shift 336
328 instanceof shift 337
357 >= reduce 200
273 ) reduce 241
34 && reduce 6
249 static reduce 110
273 , reduce 241
197 LEXEME(Identifier) shift 34
419 { shift 72
361 StringLiteral shift 53
353 EOF reduce 72
205 char shift 25
357 == reduce 200
332 int reduce 160
214 DimExprs shift 338
181 null reduce 159
383 Super shift 339
74 QualifiedName shift 9
190 LEXEME(Identifier) shift 34
289 InterfaceDeclaration shift 175
387 FieldAccess shift 1
382 Identifier shift 42
396 EqualityExpression shift 22
224 true shift 62
390 Literal shift 24
380 Literal shift 24
30 if reduce 139
222 return reduce 157
155 != reduce 203
178 StatementWithoutTrailingSubstatement shift 28
206 AssignmentExpression shift 131
95 LEXEME(StringLiteral) reduce 158
308 byte reduce 59
425 RelationalExpression shift 106
117 MethodInvocation shift 61
370 new shift 49
30 else reduce 139
179 MultiplicativeExpression shift 112
101 Name shift 4
407 Identifier shift 42
16 StatementExpression shift 17
362 Identifier shift 42
141 AdditiveExpression shift 82
362 MultiplicativeExpression shift 112
295 LeftHandSide shift 55
96 ClassInstanceCreationExpression shift 37
309 BooleanLiteral shift 2
34 != reduce 6
88 false shift 15
346 IntegerLiteral shift 47
308 LEXEME(Identifier) reduce 59
326 ArrayAccess shift 26
275 StatementWithoutTrailingSubstatement shift 188
230 while reduce 155
112 | reduce 224
389 ClassDeclaration shift 122
2 , reduce 9
223 QualifiedName shift 9
189 } reduce 99
2 - reduce 9
165 Assignment shift 60
346 super shift 12
2 * reduce 9
2 + reduce 9
2 . reduce 9
2 / reduce 9
425 CastExpression shift 104
230 LEXEME(NumberLiteral) reduce 155
16 this shift 23
2 % reduce 9
322 LEXEME(StringLiteral) shift 27
206 AdditiveExpression shift 82
2 ) reduce 9
2 & reduce 9
312 public shift 73
1 instanceof reduce 182
425 EqualityExpression shift 22
264 CharacterLiteral shift 11
329 , reduce 95
329 ) reduce 95
34 <= reduce 6
425 ConditionalOrExpression shift 19
417 BooleanLiteral shift 2
139 false reduce 174
394 && reduce 210
240 Primary shift 63
361 ( shift 39
264 MethodInvocation shift 61
179 true shift 62
187 LEXEME(CharacterLiteral) shift 32
323 private reduce 65
419 LEXEME(Identifier) shift 34
34 == reduce 6
263 PrimaryNoNewArray shift 85
275 { shift 72
403 abstract shift 186
185 ArrayAccess shift 120
224 SimpleName shift 36
355 private shift 127
326 ForStatementNoShortIf shift 151
39 Primary shift 5
374 abstract reduce 106
286 AbstractMethodDeclaration shift 193
295 ClassInstanceCreationExpression shift 66
4 instanceof reduce 209
425 BooleanLiteral shift 2
263 super shift 12
367 else reduce 161
74 LeftHandSide shift 55
34 >= reduce 6
155 | reduce 203
361 ; shift 75
261 public reduce 74
140 RelationalExpression shift 106
272 PrimaryNoNewArray shift 85
275 ( shift 39
302 LEXEME(Identifier) shift 34
160 false reduce 128
329 [ shift 227
64 && reduce 211
243 boolean shift 57
41 ExpressionStatement shift 10
362 SimpleName shift 36
190 Name shift 86
419 StringLiteral shift 53
160 LEXEME(StringLiteral) reduce 128
362 true shift 62
381 this shift 23
263 true shift 62
275 ; shift 75
117 LEXEME(CharacterLiteral) shift 32
320 ArrayAccess shift 26
403 ClassMemberDeclaration shift 316
14 Name shift 4
272 true shift 62
247 Literal shift 24
309 ConditionalOrExpression shift 19
332 boolean reduce 160
224 LEXEME(NumberLiteral) shift 8
407 Assignment shift 89
162 return shift 140
153 while reduce 148
272 SimpleName shift 36
53 < reduce 11
79 byte reduce 134
53 > reduce 11
394 != reduce 210
116 this shift 23
53 ; reduce 11
275 return shift 140
309 MethodInvocation shift 61
52 StringLiteral shift 53
387 LEXEME(CharacterLiteral) shift 32
361 { shift 72
355 EOF reduce 36
179 SimpleName shift 36
296 final reduce 113
309 EqualityExpression shift 22
92 != reduce 219
69 Literal shift 24
72 short shift 77
53 ] reduce 11
362 PrimaryNoNewArray shift 85
160 int reduce 128
412 Assignment shift 60
53 [ reduce 11
199 LEXEME(Identifier) reduce 24
154 ] shift 340
20 instanceof reduce 220
382 SimpleName shift 36
187 CharacterLiteral shift 11
309 CharacterLiteral shift 11
223 StringLiteral shift 53
162 ForStatementNoShortIf shift 151
96 Literal shift 24
260 new reduce 125
53 | reduce 11
116 QualifiedName shift 9
86 instanceof reduce 209
200 [ reduce 30
88 ArrayCreationExpression shift 13
322 LeftHandSide shift 55
295 while shift 170
64 != reduce 211
190 EqualityExpression shift 22
173 char reduce 144
429 ) shift 341
429 , shift 243
74 PostfixExpression shift 84
179 PrimaryNoNewArray shift 85
115 ClassOrInterfaceType shift 278
182 VariableDeclaratorId shift 280
364 ArrayCreationExpression shift 13
157 true shift 62
320 return shift 140
148 InterfaceType shift 342
240 super shift 12
425 Name shift 86
92 && reduce 219
305 LeftHandSide shift 55
6 && reduce 2
370 boolean shift 57
396 SimpleName shift 36
291 short reduce 55
272 Identifier shift 42
288 EOF reduce 64
206 StringLiteral shift 53
364 Expression shift 343
141 StringLiteral shift 53
108 new shift 49
0 abstract shift 186
118 Name shift 86
102 <= reduce 199
188 while reduce 130
284 null reduce 123
407 AdditiveExpression shift 82
140 StringLiteral shift 53
165 LEXEME(CharacterLiteral) shift 32
337 Name shift 177
346 IfThenStatement shift 87
8 && reduce 4
232 ArrayAccess shift 26
103 Identifier shift 42
204 CharacterLiteral shift 11
334 boolean reduce 175
99 return reduce 154
239 byte reduce 149
346 ForStatement shift 79
71 false reduce 156
116 NullLiteral shift 43
179 AdditiveExpression shift 82
190 BooleanLiteral shift 2
150 LEXEME(Identifier) shift 34
407 SimpleName shift 36
417 CharacterLiteral shift 11
247 null shift 6
305 AndExpression shift 80
326 return shift 140
247 return shift 140
37 [ reduce 181
116 LEXEME(NumberLiteral) shift 8
16 if shift 81
28 true reduce 130
377 else reduce 152
41 LEXEME(Identifier) shift 34
113 PostfixExpression shift 84
37 ] reduce 181
229 == reduce 194
24 && reduce 178
39 NullLiteral shift 43
260 short reduce 125
265 protected shift 130
178 StringLiteral shift 53
223 StatementWithoutTrailingSubstatement shift 28
168 instanceof reduce 222
96 null shift 6
369 abstract reduce 43
362 AdditiveExpression shift 82
69 null shift 6
16 EmptyStatement shift 35
412 FieldAccess shift 1
200 LEXEME(Identifier) reduce 30
37 | reduce 181
229 <= reduce 194
370 IfThenStatement shift 87
230 int reduce 155
153 char reduce 148
46 LEXEME(StringLiteral) shift 27
206 MultiplicativeExpression shift 112
37 & reduce 181
385 StringLiteral shift 53
241 LEXEME(StringLiteral) shift 27
37 % reduce 181
102 == reduce 199
37 * reduce 181
37 + reduce 181
309 UnaryExpressionNotPlusMinus shift 64
37 ) reduce 181
183 LEXEME(Identifier) shift 34
205 void shift 344
302 ) shift 345
381 CastExpression shift 104
37 ; reduce 181
410 LEXEME(CharacterLiteral) shift 32
28 super reduce 130
37 . reduce 181
37 / reduce 181
37 , reduce 181
133 && reduce 217
37 - reduce 181
130 protected reduce 57
162 ArrayAccess shift 26
223 EmptyStatement shift 35
102 >= reduce 199
229 >= reduce 194
183 LEXEME(CharacterLiteral) shift 32
183 new shift 49
381 PostfixExpression shift 84
387 Expression shift 301
16 for shift 91
37 > reduce 181
37 < reduce 181
404 ) shift 346
96 UnaryExpressionNotPlusMinus shift 64
364 LeftHandSide shift 55
149 LEXEME(StringLiteral) shift 27
410 FieldAccess shift 1
229 , reduce 194
108 Name shift 38
229 - reduce 194
335 char shift 25
229 . reduce 194
229 / reduce 194
71 int reduce 156
96 ConditionalAndExpression shift 58
229 ) reduce 194
229 * reduce 194
229 + reduce 194
175 abstract reduce 52
372 native shift 147
281 MethodHeader shift 202
0 static shift 161
243 SimpleName shift 36
268 ] reduce 246
6 >= reduce 2
286 public shift 73
249 native reduce 110
101 SimpleName shift 36
240 false shift 15
229 % reduce 194
229 & reduce 194
419 null shift 6
18 for reduce 126
8 instanceof reduce 4
361 ForStatementNoShortIf shift 151
79 LEXEME(Identifier) reduce 134
196 super shift 12
11 <= reduce 10
96 LEXEME(CharacterLiteral) shift 32
6 == reduce 2
74 RelationalExpression shift 106
10 int reduce 141
190 MethodInvocation shift 61
204 false shift 15
331 return shift 140
251 CastExpression shift 104
69 for shift 91
69 ClassOrInterfaceType shift 45
83 Name shift 86
424 final reduce 115
49 SimpleName shift 36
357 && reduce 200
11 == reduce 10
5 instanceof reduce 208
313 private reduce 53
229 ] reduce 194
195 LeftHandSide shift 55
223 StatementNoShortIf shift 347
74 this shift 23
229 [ reduce 194
150 Type shift 348
305 PostfixExpression shift 84
338 == reduce 190
364 Primary shift 5
141 MultiplicativeExpression shift 112
18 if reduce 126
425 new shift 49
11 >= reduce 10
229 < reduce 194
229 > reduce 194
409 CastExpression shift 104
229 ; reduce 194
0 CompilationUnit shift 349
371 null reduce 250
331 WhileStatementNoShortIf shift 110
98 int reduce 142
338 >= reduce 190
41 Name shift 199
353 protected reduce 72
419 WhileStatementNoShortIf shift 110
380 CastExpression shift 104
432 StatementNoShortIf shift 350
24 >= reduce 178
275 FieldAccess shift 1
273 && reduce 241
390 null shift 6
87 true reduce 131
355 native shift 147
173 int reduce 144
240 LEXEME(StringLiteral) shift 27
83 LEXEME(Identifier) shift 34
229 | reduce 194
323 native reduce 65
335 FormalParameterList shift 351
24 == reduce 178
338 <= reduce 190
149 false shift 15
195 MethodInvocation shift 70
268 , reduce 246
268 ) reduce 246
167 LEXEME(NumberLiteral) shift 8
171 Identifier shift 42
254 VariableDeclarator shift 293
187 Literal shift 24
83 ConditionalOrExpression shift 19
165 IntegerLiteral shift 47
137 [ reduce 185
268 ; reduce 246
137 > reduce 185
39 LEXEME(StringLiteral) shift 27
387 MultiplicativeExpression shift 112
385 FieldAccess shift 54
409 InclusiveOrExpression shift 29
284 protected reduce 123
69 if shift 81
178 FieldAccess shift 1
116 LeftHandSide shift 55
137 | reduce 185
137 ] reduce 185
41 ForStatement shift 79
69 short shift 77
139 LEXEME(CharacterLiteral) reduce 174
171 StringLiteral shift 53
387 AdditiveExpression shift 82
286 static shift 161
368 != reduce 27
346 true shift 62
34 | reduce 6
275 null shift 6
34 { reduce 6
43 >= reduce 12
260 boolean reduce 125
16 QualifiedName shift 9
381 QualifiedName shift 9
112 != reduce 224
428 abstract reduce 88
251 == reduce 180
137 . reduce 185
137 - reduce 185
140 null shift 6
137 / reduce 185
269 EOF reduce 44
137 < reduce 185
186 abstract reduce 60
137 ; reduce 185
241 StringLiteral shift 53
133 instanceof reduce 217
107 true shift 62
269 native reduce 44
137 & reduce 185
321 >= reduce 214
137 % reduce 185
137 * reduce 185
137 ) reduce 185
137 , reduce 185
355 InterfaceDeclaration shift 175
264 UnaryExpression shift 352
137 + reduce 185
251 >= reduce 180
389 TypeDeclaration shift 269
203 } shift 353
362 Assignment shift 89
271 new shift 49
18 short reduce 126
266 SimpleName shift 36
83 EqualityExpression shift 22
389 ImportDeclarations shift 354
3 int reduce 132
412 IntegerLiteral shift 47
241 false shift 15
43 <= reduce 12
24 <= reduce 178
40 true shift 62
54 instanceof reduce 182
183 ClassInstanceCreationExpression shift 37
118 SimpleName shift 36
53 % reduce 11
259 LEXEME(CharacterLiteral) reduce 122
53 & reduce 11
95 byte reduce 158
163 protected reduce 63
73 native reduce 56
389 final shift 50
53 , reduce 11
111 implements reduce 25
53 - reduce 11
53 . reduce 11
72 Name shift 199
53 / reduce 11
53 ) reduce 11
43 == reduce 12
53 * reduce 11
53 + reduce 11
157 SimpleName shift 36
331 null shift 6
288 private reduce 64
155 > reduce 203
155 < reduce 203
364 PrimaryNoNewArray shift 85
155 ; reduce 203
389 TypeDeclarations shift 355
183 BooleanLiteral shift 2
222 byte reduce 157
228 new shift 49
368 && reduce 27
112 && reduce 224
165 Identifier shift 42
417 byte shift 7
34 ) reduce 6
129 public reduce 49
34 ( reduce 6
34 & reduce 6
34 % reduce 6
354 static shift 161
228 LEXEME(Identifier) shift 34
155 ] reduce 203
396 Name shift 4
155 [ reduce 203
0 Modifiers shift 135
190 AndExpression shift 80
178 ForStatementNoShortIf shift 151
228 ConditionalOrExpression shift 19
74 InclusiveOrExpression shift 29
40 ArrayCreationExpression shift 13
290 Identifier shift 42
52 Literal shift 24
6 <= reduce 2
312 ; shift 313
196 IntegerLiteral shift 47
34 > reduce 6
322 ArrayCreationExpression shift 13
34 = reduce 6
34 < reduce 6
34 ; reduce 6
361 FieldAccess shift 1
34 / reduce 6
34 . reduce 6
34 - reduce 6
34 , reduce 6
34 + reduce 6
150 final shift 50
321 == reduce 214
34 * reduce 6
265 InterfaceDeclaration shift 175
306 || reduce 229
117 ClassInstanceCreationExpression shift 37
73 void reduce 56
62 instanceof reduce 0
319 private reduce 77
322 LEXEME(NumberLiteral) shift 8
34 ] reduce 6
409 null shift 6
34 [ reduce 6
155 & reduce 203
251 <= reduce 180
155 % reduce 203
16 LeftHandSide shift 55
155 * reduce 203
155 ) reduce 203
83 AndExpression shift 80
155 . reduce 203
46 ArrayAccess shift 26
407 MultiplicativeExpression shift 112
155 - reduce 203
264 ClassInstanceCreationExpression shift 37
357 != reduce 200
155 , reduce 203
155 + reduce 203
205 int shift 51
332 char reduce 160
321 <= reduce 214
155 / reduce 203
121 public reduce 45
272 IntegerLiteral shift 47
419 BooleanLiteral shift 2
171 ( shift 39
334 LEXEME(Identifier) reduce 175
295 QualifiedName shift 9
223 Literal shift 24
257 SimpleName shift 36
407 Expression shift 134
118 PrimaryNoNewArray shift 85
364 NullLiteral shift 43
298 Literal shift 24
16 while shift 170
186 static reduce 60
140 Literal shift 24
171 ; shift 75
320 new shift 49
210 import reduce 42
141 Identifier shift 42
213 protected reduce 54
179 IntegerLiteral shift 47
368 instanceof reduce 27
107 Block shift 30
52 LEXEME(Identifier) shift 34
140 CastExpression shift 104
370 LEXEME(Identifier) shift 34
116 char shift 25
192 [ shift 226
192 ] reduce 191
195 this shift 23
185 CastExpression shift 104
188 char reduce 130
30 this reduce 139
380 null shift 6
322 NullLiteral shift 43
178 { shift 72
302 Type shift 356
337 SimpleName shift 36
284 short reduce 123
256 >= reduce 223
214 DimExpr shift 221
102 != reduce 199
192 | reduce 191
362 IntegerLiteral shift 47
108 MethodInvocation shift 70
369 private reduce 43
39 AssignmentExpression shift 131
432 this shift 23
116 PostfixExpression shift 84
332 super reduce 160
425 LEXEME(Identifier) shift 34
394 > reduce 210
394 < reduce 210
46 ConditionalAndExpression shift 58
394 ; reduce 210
206 FieldAccess shift 1
79 return reduce 134
256 == reduce 223
41 MethodInvocation shift 70
360 ( shift 39
265 EOF reduce 39
103 ArrayAccess shift 120
360 ; shift 75
113 true shift 62
144 [ reduce 24
384 ) shift 357
384 , shift 74
96 StringLiteral shift 53
92 > reduce 219
92 < reduce 219
368 >= reduce 27
279 ] reduce 231
92 ; reduce 219
113 LEXEME(NumberLiteral) shift 8
92 & reduce 219
92 % reduce 219
178 ; shift 75
43 instanceof reduce 12
256 <= reduce 223
52 BooleanLiteral shift 2
92 / reduce 219
99 ( reduce 154
92 , reduce 219
92 - reduce 219
410 false shift 15
92 * reduce 219
92 + reduce 219
92 ) reduce 219
256 instanceof reduce 223
394 / reduce 210
178 ( shift 39
394 - reduce 210
266 LEXEME(NumberLiteral) shift 8
144 { reduce 24
394 , reduce 210
394 + reduce 210
109 byte reduce 127
394 * reduce 210
394 ) reduce 210
394 & reduce 210
394 % reduce 210
279 | reduce 231
144 . shift 56
144 , reduce 24
394 | reduce 210
279 & reduce 231
291 boolean reduce 55
144 ( reduce 24
279 ) reduce 231
279 - shift 271
323 EOF reduce 65
279 + shift 272
279 , reduce 231
360 { shift 72
305 UnaryExpression shift 20
173 LEXEME(NumberLiteral) reduce 144
240 IntegerLiteral shift 47
18 this reduce 126
92 | reduce 219
88 LEXEME(StringLiteral) shift 27
196 Assignment shift 89
368 <= reduce 27
185 new shift 49
190 ConditionalOrExpression shift 19
305 this shift 23
331 Literal shift 24
394 ] reduce 210
141 FieldAccess shift 54
259 byte reduce 122
102 && reduce 199
368 == reduce 27
180 private reduce 80
92 ] reduce 219
346 SimpleName shift 36
279 > reduce 231
279 ; reduce 231
340 || reduce 29
279 < reduce 231
74 UnaryExpression shift 20
230 char reduce 155
103 LEXEME(CharacterLiteral) shift 32
309 AndExpression shift 80
346 PrimaryNoNewArray shift 85
432 EmptyStatement shift 35
376 private reduce 66
288 native reduce 64
208 [ reduce 206
85 || reduce 176
169 public reduce 111
360 FieldAccess shift 1
185 BooleanLiteral shift 2
64 <= reduce 211
99 { reduce 154
208 ] reduce 206
99 } reduce 154
208 ) reduce 206
108 QualifiedName shift 9
208 + reduce 206
208 * reduce 206
208 % reduce 206
371 LEXEME(CharacterLiteral) reduce 250
208 & reduce 206
94 final reduce 48
167 Primary shift 5
50 byte reduce 61
148 QualifiedName shift 9
208 - reduce 206
364 super shift 12
208 , reduce 206
208 / reduce 206
208 . reduce 206
75 null reduce 143
208 ; reduce 206
195 QualifiedName shift 9
432 if shift 65
208 = reduce 206
10 super reduce 141
208 < reduce 206
208 > reduce 206
295 EmptyStatement shift 35
130 interface reduce 57
108 WhileStatement shift 48
39 ArrayCreationExpression shift 13
167 NullLiteral shift 43
312 Modifiers shift 135
387 Identifier shift 42
188 LEXEME(NumberLiteral) reduce 130
72 boolean shift 57
417 ArrayType shift 119
99 ; reduce 154
64 >= reduce 211
295 MethodInvocation shift 70
128 * shift 358
204 LEXEME(CharacterLiteral) shift 32
177 instanceof reduce 24
407 IntegerLiteral shift 47
243 FormalParameter shift 359
11 && reduce 10
381 UnaryExpression shift 20
370 short shift 77
322 Block shift 30
432 for shift 78
223 ClassInstanceCreationExpression shift 66
236 implements reduce 67
232 FieldAccess shift 1
275 StringLiteral shift 53
64 == reduce 211
343 ) shift 360
164 else reduce 136
307 { reduce 109
117 CharacterLiteral shift 11
309 LEXEME(Identifier) shift 34
162 FieldAccess shift 1
192 & reduce 191
192 % reduce 191
389 Modifier shift 213
109 LEXEME(CharacterLiteral) reduce 127
48 new reduce 133
171 FieldAccess shift 1
73 char reduce 56
117 null shift 6
46 LEXEME(CharacterLiteral) shift 32
419 return shift 140
117 UnaryExpressionNotPlusMinus shift 64
183 UnaryExpressionNotPlusMinus shift 64
232 Identifier shift 42
400 ) shift 361
192 ; reduce 191
192 > reduce 191
241 ConditionalAndExpression shift 58
295 if shift 81
105 || reduce 196
192 < reduce 191
187 ArrayAccess shift 26
388 this shift 23
192 + reduce 191
192 * reduce 191
192 ) reduce 191
192 / reduce 191
192 . reduce 191
192 - reduce 191
192 , reduce 191
360 Identifier shift 42
327 instanceof reduce 186
52 CastExpression shift 104
215 private reduce 76
307 , reduce 109
410 LEXEME(StringLiteral) shift 27
171 { shift 72
40 Block shift 30
373 final reduce 107
309 new shift 49
48 LEXEME(Identifier) reduce 133
295 for shift 91
206 Identifier shift 42
428 static reduce 88
83 MethodInvocation shift 61
354 abstract shift 186
385 Identifier shift 42
72 ForStatement shift 79
289 final shift 50
106 > shift 185
106 < shift 183
243 short shift 77
106 ; reduce 233
107 Identifier shift 42
264 LEXEME(NumberLiteral) shift 8
127 int reduce 58
106 , reduce 233
390 SimpleName shift 36
43 && reduce 12
265 import shift 257
385 super shift 12
113 NullLiteral shift 43
417 IntegralType shift 44
275 Literal shift 24
48 int reduce 133
113 LEXEME(StringLiteral) shift 27
106 & reduce 233
108 Identifier shift 42
346 ( shift 39
106 ) reduce 233
332 this reduce 160
99 new reduce 154
364 new shift 49
240 BooleanLiteral shift 2
346 ; shift 75
106 | reduce 233
319 final reduce 77
286 abstract shift 186
425 PrimaryNoNewArray shift 85
6 instanceof reduce 2
137 && reduce 185
410 SimpleName shift 36
409 AdditiveExpression shift 82
167 CastExpression shift 104
106 ] reduce 233
10 LEXEME(StringLiteral) reduce 141
412 LEXEME(StringLiteral) shift 27
118 ClassInstanceCreationExpression shift 37
328 != reduce 234
185 ! shift 117
171 ArrayAccess shift 26
185 - shift 113
355 Modifiers shift 135
425 null shift 6
52 FieldAccess shift 1
157 PostfixExpression shift 84
185 ( shift 116
346 { shift 72
320 ExpressionStatement shift 10
195 ; shift 362
409 SimpleName shift 36
284 LEXEME(CharacterLiteral) reduce 123
309 Primary shift 5
348 MethodDeclarator shift 311
182 LEXEME(Identifier) shift 34
40 false shift 15
99 super reduce 154
302 PrimitiveType shift 125
247 ArrayCreationExpression shift 13
117 StringLiteral shift 53
361 Literal shift 24
284 final reduce 123
161 byte reduce 59
195 ( shift 39
183 Primary shift 5
155 instanceof reduce 203
362 MethodInvocation shift 61
275 new shift 49
354 ; shift 313
247 Block shift 30
40 SimpleName shift 36
8 ; reduce 4
157 BooleanLiteral shift 2
8 < reduce 4
8 > reduce 4
331 StatementExpression shift 17
206 super shift 12
120 || reduce 184
239 int reduce 149
370 EmptyStatement shift 35
179 CharacterLiteral shift 11
289 Modifier shift 213
240 ArrayCreationExpression shift 13
8 ) reduce 4
8 * reduce 4
8 % reduce 4
8 & reduce 4
150 ReferenceType shift 33
232 MethodInvocation shift 70
141 super shift 12
88 IntegerLiteral shift 47
209 LEXEME(Identifier) reduce 28
108 false shift 15
150 Modifier shift 291
370 } shift 363
370 { shift 72
196 UnaryExpression shift 20
364 IntegerLiteral shift 47
8 / reduce 4
127 private reduce 58
8 + reduce 4
8 , reduce 4
40 Identifier shift 42
8 - reduce 4
8 . reduce 4
393 == reduce 228
186 public reduce 60
357 || reduce 200
150 PrimitiveType shift 125
356 LEXEME(Identifier) shift 34
149 super shift 12
251 QualifiedName shift 9
128 Identifier shift 310
81 ( shift 364
116 int shift 51
42 | reduce 32
42 { reduce 32
39 RelationalExpression shift 106
130 static reduce 57
393 <= reduce 228
348 Identifier shift 100
248 private reduce 100
137 != reduce 185
175 static reduce 52
331 SimpleName shift 36
225 && reduce 198
380 MultiplicativeExpression shift 112
203 MethodHeader shift 365
42 ] reduce 32
42 [ reduce 32
396 UnaryExpressionNotPlusMinus shift 64
205 ClassOrInterfaceType shift 45
160 for reduce 128
69 NumericType shift 67
52 this shift 23
30 null reduce 139
169 EOF reduce 111
141 new shift 49
52 Assignment shift 89
87 int reduce 131
35 true reduce 140
369 EOF reduce 43
72 LEXEME(NumberLiteral) shift 8
39 CastExpression shift 104
388 SimpleName shift 36
171 null shift 6
393 >= reduce 228
72 while shift 170
432 false shift 15
206 new shift 49
203 MethodDeclaration shift 366
370 StatementWithoutTrailingSubstatement shift 188
409 NullLiteral shift 43
163 final reduce 63
40 QualifiedName shift 9
266 FieldAccess shift 54
410 Identifier shift 42
98 while reduce 142
50 char reduce 61
385 new shift 49
22 ] reduce 236
425 ArrayAccess shift 26
380 Identifier shift 42
432 Identifier shift 42
409 LEXEME(StringLiteral) shift 27
83 CharacterLiteral shift 11
43 != reduce 12
223 ReturnStatement shift 98
160 if reduce 128
20 || reduce 220
210 EOF reduce 42
255 && reduce 213
22 | reduce 236
98 null reduce 142
380 false shift 15
116 ClassInstanceCreationExpression shift 37
390 QualifiedName shift 9
247 Assignment shift 60
98 LEXEME(NumberLiteral) reduce 142
69 Block shift 30
225 != reduce 198
181 LEXEME(CharacterLiteral) reduce 159
230 LEXEME(CharacterLiteral) reduce 155
115 SimpleName shift 36
167 RelationalExpression shift 106
331 StatementNoShortIf shift 367
204 ArrayAccess shift 26
10 char reduce 141
169 native reduce 111
67 LEXEME(Identifier) reduce 15
26 instanceof reduce 184
123 ] shift 368
299 static reduce 105
330 instanceof reduce 225
244 + shift 272
22 ) reduce 236
244 , reduce 230
244 - shift 271
22 , reduce 236
244 & reduce 230
244 ) reduce 230
383 { shift 203
42 > reduce 32
42 < reduce 32
42 = reduce 32
22 & reduce 236
369 native reduce 43
42 ; reduce 32
42 ( reduce 32
295 ReturnStatement shift 98
42 ) reduce 32
244 ; reduce 230
135 final shift 50
42 & reduce 32
244 < reduce 230
22 ; reduce 236
42 % reduce 32
40 NullLiteral shift 43
113 Primary shift 5
196 LEXEME(StringLiteral) shift 27
379 EOF reduce 46
42 . reduce 32
373 static reduce 107
107 SimpleName shift 36
42 / reduce 32
42 , reduce 32
244 > reduce 230
42 - reduce 32
103 MethodInvocation shift 61
42 * reduce 32
42 + reduce 32
382 ClassOrInterfaceType shift 278
1 || reduce 182
187 null shift 6
331 LEXEME(Identifier) shift 34
303 private reduce 71
138 public reduce 112
372 EOF reduce 40
147 abstract reduce 62
390 LEXEME(StringLiteral) shift 27
150 abstract shift 186
409 LeftHandSide shift 55
265 ImportDeclaration shift 369
69 BlockStatements shift 370
41 int shift 51
247 this shift 23
69 Assignment shift 60
192 && reduce 191
167 MethodInvocation shift 61
107 LeftHandSide shift 55
108 Block shift 30
225 >= reduce 198
375 native reduce 78
305 new shift 49
55 = shift 371
233 null reduce 151
271 LEXEME(CharacterLiteral) shift 32
405 instanceof shift 337
231 ) reduce 171
40 LeftHandSide shift 55
204 null shift 6
117 ~ shift 103
390 NullLiteral shift 43
14 LEXEME(NumberLiteral) shift 8
271 ~ shift 103
95 if reduce 158
320 StatementWithoutTrailingSubstatement shift 188
149 new shift 49
0 TypeDeclarations shift 372
309 NullLiteral shift 43
366 static reduce 79
246 { shift 203
107 StatementExpression shift 17
303 final reduce 71
362 UnaryExpressionNotPlusMinus shift 64
255 == reduce 213
369 public reduce 43
107 ArrayCreationExpression shift 13
271 CharacterLiteral shift 11
103 UnaryExpressionNotPlusMinus shift 64
326 StatementWithoutTrailingSubstatement shift 28
69 Identifier shift 42
255 >= reduce 213
69 this shift 23
114 instanceof reduce 204
188 int reduce 130
360 PrimaryNoNewArray shift 85
4 || reduce 209
25 LEXEME(Identifier) reduce 21
59 InterfaceBody shift 373
331 Statement shift 324
41 ClassInstanceCreationExpression shift 66
322 ExpressionStatement shift 10
228 CastExpression shift 104
275 super shift 12
95 for reduce 158
374 ; reduce 106
410 StatementExpression shift 17
403 MethodDeclaration shift 366
225 == reduce 198
297 InterfaceBody shift 374
69 false shift 15
266 LEXEME(Identifier) shift 34
326 ReturnStatement shift 98
83 LEXEME(CharacterLiteral) shift 32
7 LEXEME(Identifier) reduce 18
178 IntegerLiteral shift 47
309 QualifiedName shift 9
72 PrimitiveType shift 125
362 RelationalExpression shift 106
281 public shift 73
432 ForStatement shift 79
417 int shift 51
225 <= reduce 198
279 != reduce 231
71 super reduce 156
0 public shift 73
380 ArrayCreationExpression shift 13
115 QualifiedName shift 9
153 short reduce 148
403 FieldDeclaration shift 375
184 || reduce 207
244 instanceof reduce 230
383 ClassBody shift 376
370 ( shift 39
2 instanceof reduce 9
251 Primary shift 5
381 ClassInstanceCreationExpression shift 37
240 this shift 23
108 LEXEME(Identifier) shift 34
375 protected reduce 78
372 Modifier shift 213
102 || reduce 199
270 && reduce 239
205 LEXEME(Identifier) shift 34
241 UnaryExpression shift 20
370 ; shift 75
322 MethodInvocation shift 70
109 null reduce 127
251 NullLiteral shift 43
195 short shift 77
249 final reduce 110
251 true shift 62
266 IntegerLiteral shift 47
162 MethodInvocation shift 70
265 final shift 50
266 ArrayCreationExpression shift 13
255 <= reduce 213
371 LEXEME(NumberLiteral) reduce 250
15 instanceof reduce 1
160 this reduce 128
251 SimpleName shift 36
407 UnaryExpressionNotPlusMinus shift 64
88 ConditionalAndExpression shift 58
326 CharacterLiteral shift 11
79 LEXEME(CharacterLiteral) reduce 134
338 && reduce 190
396 MethodInvocation shift 61
195 StringLiteral shift 53
114 | reduce 204
195 Type shift 197
247 for shift 91
74 LEXEME(CharacterLiteral) shift 32
407 true shift 62
326 LEXEME(NumberLiteral) shift 8
410 StatementNoShortIf shift 377
0 TypeDeclaration shift 269
96 LEXEME(NumberLiteral) shift 8
72 ReferenceType shift 33
189 private reduce 99
251 LEXEME(StringLiteral) shift 27
114 ] reduce 204
425 super shift 12
114 [ reduce 204
72 EmptyStatement shift 35
210 abstract reduce 42
192 != reduce 191
419 new shift 49
35 false reduce 140
324 true reduce 153
271 - shift 113
361 new shift 49
388 LeftHandSide shift 55
229 || reduce 194
0 ClassDeclaration shift 122
206 InclusiveOrExpression shift 29
271 ( shift 116
271 ! shift 117
320 EmptyStatement shift 35
410 LEXEME(Identifier) shift 34
18 LEXEME(Identifier) reduce 126
150 static shift 161
114 < reduce 204
320 MethodInvocation shift 70
114 > reduce 204
193 private reduce 114
247 if shift 81
114 ; reduce 204
272 CharacterLiteral shift 11
417 Identifier shift 42
369 protected reduce 43
116 UnaryExpressionNotPlusMinus shift 64
114 % reduce 204
417 false shift 15
315 abstract reduce 98
240 Assignment shift 60
114 & reduce 204
309 true shift 62
157 this shift 23
328 && reduce 234
374 static reduce 106
364 InclusiveOrExpression shift 29
388 StatementExpression shift 231
338 != reduce 190
108 ArrayCreationExpression shift 13
108 StatementNoShortIf shift 378
73 int reduce 56
309 LEXEME(StringLiteral) shift 27
114 - reduce 204
305 IntegerLiteral shift 47
114 , reduce 204
114 / reduce 204
114 . reduce 204
114 ) reduce 204
114 + reduce 204
114 * reduce 204
118 false shift 15
181 ; reduce 159
190 LEXEME(CharacterLiteral) shift 32
147 native reduce 62
251 Name shift 4
284 ( reduce 123
370 PrimaryNoNewArray shift 85
46 BooleanLiteral shift 2
181 ( reduce 159
364 FieldAccess shift 1
211 . shift 56
187 IfThenElseStatement shift 3
284 ; reduce 123
69 ForStatement shift 79
211 ; shift 379
11 || reduce 10
151 else reduce 138
305 LEXEME(Identifier) shift 34
370 null shift 6
3 super reduce 132
309 SimpleName shift 36
75 ; reduce 143
107 Name shift 38
98 ( reduce 142
135 private shift 127
375 public reduce 78
116 IntegralType shift 44
58 ; reduce 242
360 Literal shift 24
432 IfThenElseStatementNoShortIf shift 164
314 public reduce 50
139 if reduce 174
43 | reduce 12
40 Name shift 38
173 byte reduce 144
171 LEXEME(NumberLiteral) shift 8
58 , reduce 242
330 | reduce 225
50 protected reduce 61
271 StringLiteral shift 53
205 NumericType shift 67
334 true reduce 175
58 ) reduce 242
190 LeftHandSide shift 55
103 ClassInstanceCreationExpression shift 37
58 ] reduce 242
101 new shift 49
407 LeftHandSide shift 55
171 StatementWithoutTrailingSubstatement shift 188
379 native reduce 46
178 Statement shift 332
96 AndExpression shift 80
385 PrimaryNoNewArray shift 85
75 { reduce 143
75 } reduce 143
127 final reduce 58
432 ClassInstanceCreationExpression shift 66
6 ; reduce 2
328 == reduce 234
218 == reduce 192
330 + reduce 225
330 * shift 264
330 - reduce 225
330 , reduce 225
330 / shift 263
6 < reduce 2
6 > reduce 2
320 StringLiteral shift 53
116 MethodInvocation shift 61
6 ) reduce 2
96 CharacterLiteral shift 11
6 * reduce 2
6 + reduce 2
6 % reduce 2
6 & reduce 2
330 ; reduce 225
145 SimpleName shift 36
330 < reduce 225
50 interface reduce 61
6 , reduce 2
6 - reduce 2
330 > reduce 225
6 . reduce 2
185 LEXEME(CharacterLiteral) shift 32
6 / reduce 2
218 >= reduce 192
195 PrimaryNoNewArray shift 85
328 <= shift 380
380 PostfixExpression shift 84
388 BooleanLiteral shift 2
239 return reduce 149
30 super reduce 139
101 LEXEME(NumberLiteral) shift 8
101 IntegerLiteral shift 47
98 ; reduce 142
410 Primary shift 63
239 LEXEME(CharacterLiteral) reduce 149
361 PrimaryNoNewArray shift 85
330 ] reduce 225
181 { reduce 159
181 } reduce 159
3 byte reduce 132
6 | reduce 2
8 != reduce 4
247 ForStatement shift 79
293 , reduce 81
74 Primary shift 5
118 QualifiedName shift 9
178 BooleanLiteral shift 2
331 LeftHandSide shift 55
382 Name shift 144
106 instanceof shift 337
322 EmptyStatement shift 35
48 false reduce 133
139 else reduce 174
403 MethodHeader shift 365
293 ; reduce 81
88 ArrayAccess shift 26
295 LEXEME(NumberLiteral) shift 8
6 [ reduce 2
432 Block shift 30
88 null shift 6
218 <= reduce 192
195 CharacterLiteral shift 11
320 LEXEME(CharacterLiteral) shift 32
328 >= shift 381
241 CharacterLiteral shift 11
6 ] reduce 2
107 FieldAccess shift 1
157 LEXEME(StringLiteral) shift 27
98 { reduce 142
330 % shift 266
98 } reduce 142
409 Name shift 86
330 & reduce 225
330 ) reduce 225
178 ArrayAccess shift 26
108 Assignment shift 60
305 Assignment shift 89
46 Assignment shift 89
115 LEXEME(Identifier) shift 34
220 } reduce 124
220 { reduce 124
139 this reduce 174
141 PrimaryNoNewArray shift 85
409 ConditionalOrExpression shift 19
272 ~ shift 103
432 Assignment shift 60
253 , shift 382
116 MultiplicativeExpression shift 112
185 StringLiteral shift 53
179 ~ shift 103
108 ClassInstanceCreationExpression shift 66
366 abstract reduce 79
82 & reduce 227
228 UnaryExpressionNotPlusMinus shift 64
263 CharacterLiteral shift 11
233 while reduce 151
79 ; reduce 134
82 ) reduce 227
108 IfThenElseStatementNoShortIf shift 164
82 + shift 272
82 , reduce 227
82 - shift 271
239 char reduce 149
3 boolean reduce 132
103 CastExpression shift 104
425 ~ shift 103
360 new shift 49
247 false shift 15
84 | reduce 212
410 LeftHandSide shift 55
48 char reduce 133
122 static reduce 51
396 MultiplicativeExpression shift 112
407 QualifiedName shift 9
52 Identifier shift 42
180 final reduce 80
245 Identifier shift 383
361 WhileStatementNoShortIf shift 110
233 LEXEME(NumberLiteral) reduce 151
82 > reduce 227
179 ( shift 116
179 - shift 113
116 RelationalExpression shift 106
137 >= reduce 185
40 StatementExpression shift 17
82 ; reduce 227
350 else reduce 150
82 < reduce 227
42 && reduce 32
196 AdditiveExpression shift 82
259 true reduce 122
324 false reduce 153
79 { reduce 134
113 this shift 23
279 && reduce 231
79 } reduce 134
80 || reduce 238
41 ReturnStatement shift 98
157 AdditiveExpression shift 82
247 IfThenStatement shift 87
10 this reduce 141
179 ! shift 117
171 IntegerLiteral shift 47
331 ForStatementNoShortIf shift 151
206 PrimaryNoNewArray shift 85
190 true shift 62
82 ] reduce 227
310 || reduce 33
149 Literal shift 24
323 public reduce 65
69 IfThenStatement shift 87
116 CastExpression shift 104
101 Literal shift 24
390 Name shift 38
43 < reduce 12
43 > reduce 12
18 char reduce 126
137 <= reduce 185
82 | reduce 227
45 | reduce 22
334 return reduce 175
210 native reduce 42
43 ; reduce 12
272 ! shift 117
195 null shift 6
71 boolean reduce 156
212 [ shift 226
272 ( shift 116
315 native reduce 98
220 ( reduce 124
248 final reduce 100
43 ] reduce 12
41 ArrayType shift 119
137 == reduce 185
380 this shift 23
228 LEXEME(NumberLiteral) shift 8
190 CharacterLiteral shift 11
130 byte reduce 57
43 [ reduce 12
45 ] reduce 22
220 ; reduce 124
88 Assignment shift 89
187 IntegerLiteral shift 47
140 UnaryExpression shift 20
68 public reduce 47
205 boolean shift 57
75 ( reduce 143
50 int reduce 61
46 ArgumentList shift 384
241 MultiplicativeExpression shift 112
212 ) shift 385
45 < reduce 22
45 ; reduce 22
370 LEXEME(CharacterLiteral) shift 32
190 Primary shift 5
157 UnaryExpression shift 20
83 Primary shift 5
42 != reduce 32
272 - shift 113
45 > reduce 22
79 ( reduce 134
425 ( shift 116
284 { reduce 123
43 - reduce 12
331 LEXEME(StringLiteral) shift 27
186 boolean reduce 60
43 , reduce 12
284 } reduce 123
43 / reduce 12
43 . reduce 12
45 & reduce 22
425 - shift 113
45 , reduce 22
43 % reduce 12
117 ( shift 116
425 ! shift 117
45 ) reduce 22
43 & reduce 12
117 - shift 113
43 ) reduce 12
43 + reduce 12
43 * reduce 12
117 ! shift 117
190 NullLiteral shift 43
247 Identifier shift 42
326 IfThenElseStatement shift 3
75 boolean reduce 143
390 LeftHandSide shift 55
69 FieldAccess shift 1
372 protected shift 130
298 Identifier shift 42
389 import shift 257
178 Block shift 30
140 Identifier shift 42
204 IntegerLiteral shift 47
389 Modifiers shift 135
356 Identifier shift 234
298 this shift 23
187 for shift 91
16 Block shift 30
74 CharacterLiteral shift 11
360 WhileStatementNoShortIf shift 110
390 StatementExpression shift 231
68 protected reduce 47
260 null reduce 125
205 Name shift 177
410 NullLiteral shift 43
255 != reduce 213
215 static reduce 76
99 LEXEME(Identifier) reduce 154
370 StringLiteral shift 53
141 Literal shift 24
372 public shift 73
332 for reduce 160
205 Identifier shift 42
188 false reduce 130
72 new shift 49
127 short reduce 58
409 ConditionalAndExpression shift 58
296 native reduce 113
46 AndExpression shift 80
266 Name shift 4
279 == reduce 231
380 UnaryExpression shift 20
337 short shift 77
360 super shift 12
51 [ reduce 20
224 this shift 23
162 Primary shift 63
323 protected reduce 65
383 Interfaces shift 386
297 { shift 281
283 [ shift 387
364 ConditionalOrExpression shift 19
83 LeftHandSide shift 55
279 >= reduce 231
69 char shift 25
381 UnaryExpressionNotPlusMinus shift 64
266 Identifier shift 42
283 ( reduce 25
187 if shift 81
52 false shift 15
340 instanceof reduce 29
385 Literal shift 24
72 IntegerLiteral shift 47
143 ; shift 388
206 Literal shift 24
72 ReturnStatement shift 98
147 void reduce 62
84 / reduce 212
388 true shift 62
84 - reduce 212
84 + reduce 212
84 , reduce 212
84 ) reduce 212
84 * reduce 212
396 ClassInstanceCreationExpression shift 37
84 % reduce 212
84 & reduce 212
83 true shift 62
260 super reduce 125
16 ArrayCreationExpression shift 13
51 ) reduce 20
355 protected shift 130
309 LeftHandSide shift 55
190 SimpleName shift 36
253 { reduce 68
405 > shift 185
405 ; reduce 235
405 < shift 183
0 PackageDeclaration shift 389
247 FieldAccess shift 1
271 PrimaryNoNewArray shift 85
405 , reduce 235
405 & reduce 235
405 ) reduce 235
417 ArrayCreationExpression shift 13
178 null shift 6
419 Name shift 38
183 Name shift 4
118 RelationalExpression shift 106
230 short reduce 155
405 ] reduce 235
336 ; shift 390
331 Name shift 38
409 QualifiedName shift 9
84 ] reduce 212
338 Dims shift 391
275 LEXEME(Identifier) shift 34
291 public reduce 55
196 this shift 23
298 false shift 15
183 QualifiedName shift 9
74 NullLiteral shift 43
405 | reduce 235
425 StringLiteral shift 53
331 QualifiedName shift 9
14 CastExpression shift 104
84 > reduce 212
84 ; reduce 212
84 < reduce 212
40 FieldAccess shift 1
192 == reduce 191
96 AssignmentExpression shift 131
409 EqualityExpression shift 22
14 IntegerLiteral shift 47
8 | reduce 4
28 byte reduce 130
16 LEXEME(Identifier) shift 34
115 InterfaceType shift 392
140 false shift 15
361 super shift 12
118 MethodInvocation shift 61
107 false shift 15
388 NullLiteral shift 43
205 QualifiedName shift 9
220 LEXEME(CharacterLiteral) reduce 124
14 new shift 49
8 [ reduce 4
192 >= reduce 191
8 ] reduce 4
72 IfThenElseStatement shift 3
85 instanceof reduce 176
189 final reduce 99
16 ClassInstanceCreationExpression shift 66
305 Literal shift 24
272 LEXEME(CharacterLiteral) shift 32
370 ArrayAccess shift 26
107 QualifiedName shift 9
114 && reduce 204
183 AdditiveExpression shift 393
269 abstract reduce 44
270 ] reduce 239
149 PrimaryNoNewArray shift 85
192 <= reduce 191
232 ClassInstanceCreationExpression shift 66
74 true shift 62
394 instanceof reduce 210
270 | reduce 239
113 UnaryExpression shift 394
370 ExpressionStatement shift 10
10 for reduce 141
196 PostfixExpression shift 84
320 ; shift 75
47 instanceof reduce 8
148 ClassOrInterfaceType shift 278
332 if reduce 160
279 instanceof reduce 231
213 boolean reduce 54
266 false shift 15
314 protected reduce 50
338 ] reduce 190
338 [ shift 196
222 short reduce 157
396 CastExpression shift 104
270 & shift 167
279 <= reduce 231
270 , reduce 239
118 MultiplicativeExpression shift 112
297 , shift 395
270 ) reduce 239
410 true shift 62
52 PostfixExpression shift 84
309 LEXEME(CharacterLiteral) shift 32
332 LEXEME(StringLiteral) reduce 160
223 ForStatement shift 79
79 LEXEME(StringLiteral) reduce 134
320 ( shift 39
270 ; reduce 239
338 | reduce 190
388 Primary shift 63
171 IfThenElseStatement shift 3
364 EqualityExpression shift 22
160 char reduce 128
139 for reduce 174
185 ~ shift 103
320 { shift 72
355 public shift 73
46 ArrayCreationExpression shift 13
364 Name shift 86
162 ClassInstanceCreationExpression shift 66
389 InterfaceDeclaration shift 175
114 != reduce 204
46 IntegerLiteral shift 47
10 if reduce 141
338 & reduce 190
338 % reduce 190
10 else reduce 141
183 LEXEME(StringLiteral) shift 27
338 . reduce 190
338 - reduce 190
266 QualifiedName shift 9
338 , reduce 190
338 + reduce 190
338 * reduce 190
338 ) reduce 190
370 Type shift 197
178 Assignment shift 60
338 / reduce 190
338 > reduce 190
179 LEXEME(CharacterLiteral) shift 32
338 < reduce 190
338 ; reduce 190
271 ArrayAccess shift 120
125 LEXEME(Identifier) reduce 13
298 FieldAccess shift 1
387 CharacterLiteral shift 11
224 PostfixExpression shift 84
150 native shift 147
361 SimpleName shift 36
362 QualifiedName shift 9
223 while shift 93
107 Literal shift 24
116 byte shift 7
103 QualifiedName shift 9
42 <= reduce 32
30 LEXEME(CharacterLiteral) reduce 139
387 BooleanLiteral shift 2
118 LEXEME(Identifier) shift 34
265 Modifiers shift 135
393 | reduce 228
331 super shift 12
187 Assignment shift 60
387 PostfixExpression shift 84
326 IfThenElseStatementNoShortIf shift 164
284 LEXEME(StringLiteral) reduce 123
354 Modifier shift 213
196 LEXEME(CharacterLiteral) shift 32
412 CharacterLiteral shift 11
190 ~ shift 103
103 NullLiteral shift 43
89 ] reduce 245
179 StringLiteral shift 53
40 Literal shift 24
39 ClassInstanceCreationExpression shift 37
129 import reduce 49
160 null reduce 128
181 LEXEME(StringLiteral) reduce 159
232 LeftHandSide shift 55
49 short shift 77
22 == shift 101
42 >= reduce 32
45 && reduce 22
184 != reduce 207
19 || shift 396
41 LEXEME(NumberLiteral) shift 8
360 Name shift 38
87 byte reduce 131
89 ; reduce 245
274 instanceof reduce 205
370 super shift 12
220 true reduce 124
305 MultiplicativeExpression shift 112
196 ConditionalAndExpression shift 58
270 || reduce 239
171 this shift 23
42 == reduce 32
296 abstract reduce 113
196 CharacterLiteral shift 11
232 PrimaryNoNewArray shift 85
101 CastExpression shift 104
62 || reduce 0
393 - shift 271
83 StringLiteral shift 53
140 ArrayCreationExpression shift 13
393 & reduce 228
354 ImportDeclaration shift 369
393 , reduce 228
393 + shift 272
334 super reduce 175
393 ) reduce 228
232 Primary shift 63
41 IfThenElseStatement shift 3
83 AdditiveExpression shift 82
162 QualifiedName shift 9
204 Assignment shift 60
393 ] reduce 228
178 LEXEME(NumberLiteral) shift 8
410 Literal shift 24
58 && shift 179
109 this reduce 127
101 FieldAccess shift 54
425 ConditionalAndExpression shift 58
296 private reduce 113
419 SimpleName shift 36
120 <= reduce 184
189 protected reduce 99
184 && reduce 207
187 this shift 23
5 || reduce 208
372 Modifiers shift 135
393 > reduce 228
393 < reduce 228
393 ; reduce 228
272 StringLiteral shift 53
149 EqualityExpression shift 22
120 == reduce 184
305 false shift 15
109 short reduce 127
382 QualifiedName shift 9
335 ) shift 397
139 LEXEME(NumberLiteral) reduce 174
391 < reduce 189
391 ; reduce 189
391 > reduce 189
361 EmptyStatement shift 35
120 >= reduce 184
69 int shift 51
160 while reduce 128
390 super shift 12
419 ExpressionStatement shift 10
12 . shift 398
74 StringLiteral shift 53
391 % reduce 189
72 Literal shift 24
385 SimpleName shift 36
391 ) reduce 189
391 & reduce 189
98 for reduce 142
113 LEXEME(CharacterLiteral) shift 32
244 <= reduce 230
241 PostfixExpression shift 84
95 while reduce 158
18 int reduce 126
353 public reduce 72
83 NullLiteral shift 43
222 while reduce 157
391 , reduce 189
391 - reduce 189
396 ArrayCreationExpression shift 13
391 * reduce 189
140 PostfixExpression shift 84
305 Identifier shift 42
83 LEXEME(StringLiteral) shift 27
391 + reduce 189
29 || reduce 240
391 . reduce 189
141 LEXEME(Identifier) shift 34
232 NullLiteral shift 43
391 / reduce 189
14 FieldAccess shift 54
399 , reduce 188
106 <= shift 380
399 ) reduce 188
391 | reduce 189
206 LEXEME(Identifier) shift 34
320 super shift 12
260 LEXEME(CharacterLiteral) reduce 125
244 == reduce 230
230 return reduce 155
171 Assignment shift 60
35 LEXEME(Identifier) reduce 140
74 Expression shift 399
223 false shift 15
98 if reduce 142
107 new shift 49
2 || reduce 9
82 != reduce 227
185 super shift 12
360 LEXEME(Identifier) shift 34
241 Assignment shift 89
167 ClassInstanceCreationExpression shift 37
181 true reduce 159
432 ReturnStatement shift 98
224 null shift 6
41 false shift 15
391 ] reduce 189
391 [ shift 226
171 ReturnStatement shift 98
127 interface reduce 58
205 PrimitiveType shift 125
244 >= reduce 230
84 && reduce 212
116 NumericType shift 67
40 new shift 49
396 Identifier shift 42
149 LEXEME(Identifier) shift 34
232 true shift 62
106 >= shift 381
28 boolean reduce 130
271 Primary shift 5
165 CharacterLiteral shift 11
381 ArrayCreationExpression shift 13
261 } reduce 74
205 ReferenceType shift 33
271 true shift 62
113 CharacterLiteral shift 11
407 EqualityExpression shift 22
269 static reduce 44
106 == reduce 233
68 ; reduce 47
275 SimpleName shift 36
41 Identifier shift 42
153 null reduce 148
160 return reduce 128
409 super shift 12
162 NullLiteral shift 43
275 EmptyStatement shift 35
41 NumericType shift 67
206 ConditionalOrExpression shift 19
230 LEXEME(StringLiteral) reduce 155
82 && reduce 227
412 ForUpdate shift 400
140 AssignmentExpression shift 131
206 SimpleName shift 36
187 ArrayCreationExpression shift 13
103 PrimaryNoNewArray shift 85
45 != reduce 22
98 LEXEME(CharacterLiteral) reduce 142
95 LEXEME(NumberLiteral) reduce 158
386 { shift 203
98 else reduce 142
273 || reduce 241
405 <= shift 380
374 final reduce 106
230 null reduce 155
83 Expression shift 401
298 ForUpdate shift 402
239 this reduce 149
15 | reduce 1
203 ClassBodyDeclarations shift 403
141 SimpleName shift 36
165 this shift 23
161 boolean reduce 59
210 static reduce 42
14 Literal shift 24
46 UnaryExpression shift 20
41 ArrayCreationExpression shift 13
240 null shift 6
104 >= reduce 215
98 short reduce 142
373 private reduce 107
188 LEXEME(Identifier) reduce 130
15 [ reduce 1
15 ] reduce 1
162 PrimaryNoNewArray shift 85
100 ( shift 302
361 StatementExpression shift 17
271 super shift 12
179 null shift 6
107 MethodInvocation shift 70
15 ) reduce 1
381 Identifier shift 42
206 RelationalExpression shift 106
15 * reduce 1
15 + reduce 1
10 short reduce 141
15 , reduce 1
15 - reduce 1
15 . reduce 1
162 true shift 62
15 / reduce 1
224 ArrayAccess shift 120
104 == reduce 215
223 LEXEME(NumberLiteral) shift 8
15 % reduce 1
15 & reduce 1
305 AssignmentExpression shift 131
15 ; reduce 1
15 < reduce 1
241 LEXEME(NumberLiteral) shift 8
15 > reduce 1
179 UnaryExpression shift 20
165 ForUpdate shift 404
225 . reduce 198
225 - reduce 198
225 / reduce 198
103 true shift 62
225 * reduce 198
225 ) reduce 198
141 RelationalExpression shift 405
241 this shift 23
14 UnaryExpressionNotPlusMinus shift 64
40 MethodInvocation shift 70
225 , reduce 198
225 + reduce 198
193 native reduce 114
410 ClassInstanceCreationExpression shift 66
114 >= reduce 204
74 ~ shift 103
162 EmptyStatement shift 35
360 StatementNoShortIf shift 406
272 null shift 6
85 && reduce 176
228 false shift 15
303 protected reduce 71
225 & reduce 198
225 % reduce 198
225 ( shift 407
432 FieldAccess shift 1
118 FieldAccess shift 1
114 == reduce 204
407 Name shift 86
251 super shift 12
263 null shift 6
265 ; shift 313
187 Block shift 30
412 this shift 23
244 && reduce 230
303 ; reduce 71
432 IntegerLiteral shift 47
272 UnaryExpression shift 20
103 SimpleName shift 36
114 <= reduce 204
150 void shift 344
275 NullLiteral shift 43
361 LeftHandSide shift 55
326 WhileStatement shift 48
385 LEXEME(Identifier) shift 34
119 LEXEME(Identifier) reduce 23
116 Identifier shift 42
116 false shift 15
149 Name shift 4
220 LEXEME(StringLiteral) reduce 124
320 true shift 62
360 StatementExpression shift 17
109 for reduce 127
405 != reduce 235
187 ReturnStatement shift 98
37 instanceof reduce 181
380 IntegerLiteral shift 47
222 int reduce 157
203 FieldDeclaration shift 375
37 || reduce 181
407 RelationalExpression shift 106
85 != reduce 176
388 LEXEME(CharacterLiteral) shift 32
360 EmptyStatement shift 35
360 MethodInvocation shift 70
310 != reduce 33
52 MultiplicativeExpression shift 112
189 native reduce 99
364 LEXEME(Identifier) shift 34
162 LeftHandSide shift 55
178 while shift 93
41 Block shift 30
185 true shift 62
74 ! shift 117
88 BooleanLiteral shift 2
74 ( shift 116
361 ExpressionStatement shift 10
214 [ shift 387
165 BooleanLiteral shift 2
84 != reduce 212
162 SimpleName shift 36
186 class reduce 60
74 - shift 113
157 null shift 6
224 StringLiteral shift 53
199 ( shift 46
261 protected reduce 74
224 UnaryExpression shift 408
199 . shift 56
108 IntegerLiteral shift 47
184 <= reduce 207
118 Identifier shift 42
163 static reduce 63
299 abstract reduce 105
109 if reduce 127
147 protected reduce 62
405 && reduce 235
204 this shift 23
233 this reduce 151
46 LEXEME(NumberLiteral) shift 8
313 final reduce 53
118 CastExpression shift 104
295 IfThenElseStatement shift 3
10 LEXEME(CharacterLiteral) reduce 141
249 protected reduce 110
39 UnaryExpressionNotPlusMinus shift 64
381 FieldAccess shift 54
72 ArrayType shift 119
171 if shift 81
340 && reduce 29
41 IntegralType shift 44
199 = reduce 247
310 && reduce 33
284 true reduce 123
375 final reduce 78
419 StatementExpression shift 17
261 final reduce 74
204 LEXEME(NumberLiteral) shift 8
199 [ shift 409
255 || reduce 213
228 Identifier shift 42
263 ArrayAccess shift 120
88 PostfixExpression shift 84
171 for shift 91
275 Primary shift 63
316 public reduce 75
412 BooleanLiteral shift 2
195 ArrayAccess shift 26
190 ! shift 117
149 CastExpression shift 104
190 ( shift 116
225 instanceof reduce 198
313 protected reduce 53
190 - shift 113
220 super reduce 124
318 ) shift 410
89 ) reduce 245
89 , reduce 245
140 MultiplicativeExpression shift 112
319 } reduce 77
360 ExpressionStatement shift 10
83 ( shift 116
83 - shift 113
407 ConditionalOrExpression shift 19
320 PrimaryNoNewArray shift 85
83 ! shift 117
87 false reduce 131
361 LEXEME(Identifier) shift 34
340 != reduce 29
77 LEXEME(Identifier) reduce 19
255 instanceof reduce 213
83 ~ shift 103
103 Primary shift 5
275 QualifiedName shift 9
187 IfThenStatement shift 87
374 native reduce 106
41 byte shift 7
184 >= reduce 207
95 char reduce 158
417 this shift 23
410 new shift 49
39 QualifiedName shift 9
188 byte reduce 130
305 ArrayCreationExpression shift 13
275 Name shift 38
361 StatementNoShortIf shift 411
185 PrimaryNoNewArray shift 85
130 abstract reduce 57
417 Assignment shift 60
39 Literal shift 24
48 LEXEME(NumberLiteral) reduce 133
184 == reduce 207
190 ; shift 412
346 CharacterLiteral shift 11
106 != reduce 233
230 ( reduce 155
432 ArrayCreationExpression shift 13
419 PrimaryNoNewArray shift 85
263 StringLiteral shift 53
204 ForUpdate shift 413
319 protected reduce 77
322 new shift 49
195 LEXEME(CharacterLiteral) shift 32
274 || reduce 205
230 ; reduce 155
115 Name shift 144
335 Type shift 356
419 true shift 62
52 AssignmentExpression shift 131
69 ReturnStatement shift 98
42 instanceof reduce 32
46 PostfixExpression shift 84
16 Identifier shift 42
30 } reduce 139
30 { reduce 139
179 BooleanLiteral shift 2
223 Block shift 30
206 MethodInvocation shift 61
320 NullLiteral shift 43
109 LEXEME(NumberLiteral) reduce 127
206 LeftHandSide shift 55
362 ClassInstanceCreationExpression shift 37
272 BooleanLiteral shift 2
41 FieldAccess shift 1
230 { reduce 155
326 IfThenStatement shift 87
52 IntegerLiteral shift 47
205 ConstructorDeclarator shift 414
163 abstract reduce 63
362 LEXEME(Identifier) shift 34
193 abstract reduce 114
349 EOF shift 415
150 char shift 25
183 super shift 12
393 && reduce 228
419 Primary shift 63
141 MethodInvocation shift 61
346 LEXEME(CharacterLiteral) shift 32
26 || reduce 184
309 AdditiveExpression shift 82
185 NullLiteral shift 43
157 StringLiteral shift 53
149 QualifiedName shift 9
218 DimExpr shift 229
308 public reduce 59
3 new reduce 132
361 Name shift 38
50 private reduce 61
113 BooleanLiteral shift 2
106 && reduce 233
223 ArrayCreationExpression shift 13
331 PrimaryNoNewArray shift 85
370 BlockStatement shift 260
381 MultiplicativeExpression shift 112
331 Primary shift 63
71 LEXEME(Identifier) reduce 156
328 || reduce 234
230 } reduce 155
385 MethodInvocation shift 61
49 ClassType shift 416
52 LEXEME(NumberLiteral) shift 8
167 UnaryExpressionNotPlusMinus shift 64
181 super reduce 159
313 ; reduce 53
135 Modifier shift 291
322 Literal shift 24
162 Name shift 38
410 Name shift 38
295 IntegerLiteral shift 47
163 private reduce 63
46 this shift 23
266 new shift 49
289 public shift 73
78 ( shift 417
390 true shift 62
218 || reduce 192
30 ; reduce 139
72 NumericType shift 67
425 AdditiveExpression shift 82
393 != reduce 228
69 IntegralType shift 44
407 MethodInvocation shift 61
30 ( reduce 139
232 StatementExpression shift 231
419 LeftHandSide shift 55
162 ExpressionStatement shift 10
167 new shift 49
116 PrimitiveType shift 418
275 true shift 62
331 NullLiteral shift 43
109 char reduce 127
391 != reduce 189
223 IntegerLiteral shift 47
362 InclusiveOrExpression shift 29
139 while reduce 174
298 IntegerLiteral shift 47
107 LEXEME(Identifier) shift 34
275 PrimaryNoNewArray shift 85
222 LEXEME(NumberLiteral) reduce 157
228 ArrayCreationExpression shift 13
260 ; reduce 125
417 LEXEME(NumberLiteral) shift 8
157 LEXEME(CharacterLiteral) shift 32
116 FieldAccess shift 1
271 LEXEME(StringLiteral) shift 27
73 byte reduce 56
260 ( reduce 125
153 LEXEME(StringLiteral) reduce 148
127 char reduce 58
346 null shift 6
195 LEXEME(StringLiteral) shift 27
88 AndExpression shift 80
247 ReturnStatement shift 98
388 ( shift 39
388 ) shift 419
162 StatementExpression shift 17
155 || reduce 203
40 LEXEME(Identifier) shift 34
185 Primary shift 5
295 Identifier shift 42
118 UnaryExpressionNotPlusMinus shift 64
393 instanceof reduce 228
263 LEXEME(StringLiteral) shift 27
381 false shift 15
260 } reduce 125
233 for reduce 151
45 >= reduce 22
157 ConditionalAndExpression shift 58
364 CastExpression shift 104
260 { reduce 125
249 ; reduce 110
178 ForStatement shift 79
228 AssignmentExpression shift 131
190 LEXEME(StringLiteral) shift 27
409 Primary shift 5
346 return shift 140
266 ClassInstanceCreationExpression shift 37
390 Primary shift 63
22 && reduce 236
45 == reduce 22
178 WhileStatement shift 48
35 new reduce 140
310 <= reduce 33
197 VariableDeclarators shift 420
290 QualifiedName shift 9
178 if shift 65
334 LEXEME(StringLiteral) reduce 175
233 if reduce 151
391 && reduce 189
101 Identifier shift 42
331 true shift 62
120 != reduce 184
225 ] reduce 198
137 || reduce 185
326 ForStatement shift 79
223 Assignment shift 60
228 IntegerLiteral shift 47
225 [ reduce 198
101 false shift 15
298 ArrayCreationExpression shift 13
295 false shift 15
396 false shift 15
315 static reduce 98
389 public shift 73
225 > reduce 198
225 = reduce 198
322 StatementNoShortIf shift 421
187 while shift 170
225 < reduce 198
225 ; reduce 198
15 && reduce 1
370 LEXEME(StringLiteral) shift 27
424 public reduce 115
239 short reduce 149
104 || reduce 215
135 interface shift 422
39 MethodInvocation shift 61
108 FieldAccess shift 1
420 ; reduce 129
305 FieldAccess shift 1
178 for shift 78
153 LEXEME(CharacterLiteral) reduce 148
16 false shift 15
320 Primary shift 63
244 != reduce 230
22 != shift 141
187 LEXEME(NumberLiteral) shift 8
409 true shift 62
305 ArgumentList shift 423
135 protected shift 130
225 | reduce 198
420 , shift 182
88 this shift 23
202 ; shift 424
244 ] reduce 230
79 true reduce 134
405 == reduce 235
85 | reduce 176
120 && reduce 184
84 == reduce 212
387 UnaryExpression shift 20
312 InterfaceDeclaration shift 175
0 TypeImportOnDemandDeclaration shift 94
244 | reduce 230
275 ExpressionStatement shift 10
405 >= shift 381
374 EOF reduce 106
85 [ shift 425
149 RelationalExpression shift 106
180 } reduce 80
84 <= reduce 212
15 != reduce 1
362 new shift 49
85 ] reduce 176
140 LEXEME(NumberLiteral) shift 8
407 InclusiveOrExpression shift 29
113 ArrayAccess shift 120
310 >= reduce 33
171 while shift 170
206 Name shift 86
190 Expression shift 426
382 InterfaceType shift 427
74 LEXEME(StringLiteral) shift 27
232 Name shift 38
391 <= reduce 189
52 ArrayCreationExpression shift 13
186 LEXEME(Identifier) reduce 60
322 ClassInstanceCreationExpression shift 66
72 FieldAccess shift 1
3 LEXEME(Identifier) reduce 132
222 char reduce 157
310 == reduce 33
302 char shift 25
417 char shift 25
84 >= reduce 212
346 Statement shift 230
28 new reduce 130
361 MethodInvocation shift 70
223 IfThenElseStatement shift 3
365 MethodBody shift 428
298 Assignment shift 60
117 PrimaryNoNewArray shift 85
45 <= reduce 22
302 FormalParameterList shift 429
157 ArrayAccess shift 26
82 <= reduce 227
190 AdditiveExpression shift 82
296 static reduce 113
179 AndExpression shift 80
391 >= reduce 189
407 ClassInstanceCreationExpression shift 37
113 null shift 6
407 CastExpression shift 104
161 class reduce 59
372 ; shift 313
0 import shift 257
361 QualifiedName shift 9
266 UnaryExpressionNotPlusMinus shift 64
82 == reduce 227
153 ; reduce 148
45 instanceof reduce 22
391 == reduce 189
254 VariableDeclarators shift 430
71 new reduce 156
237 . reduce 180
267 || reduce 243
263 LEXEME(CharacterLiteral) shift 32
364 ClassInstanceCreationExpression shift 37
171 IfThenStatement shift 87
18 false reduce 126
99 boolean reduce 154
72 byte shift 7
85 / reduce 176
85 - reduce 176
139 char reduce 174
85 . reduce 176
85 ; reduce 176
82 >= reduce 227
85 < reduce 176
362 CastExpression shift 104
410 MethodInvocation shift 70
232 QualifiedName shift 9
85 > reduce 176
243 Type shift 356
247 IfThenElseStatement shift 3
39 new shift 49
47 || reduce 8
153 } reduce 148
346 StatementWithoutTrailingSubstatement shift 188
94 public reduce 48
153 { reduce 148
107 ClassInstanceCreationExpression shift 66
410 QualifiedName shift 9
85 + reduce 176
85 , reduce 176
85 ) reduce 176
85 * reduce 176
85 % reduce 176
85 & reduce 176
263 - shift 113
117 NullLiteral shift 43
183 NullLiteral shift 43
263 ( shift 116
75 true reduce 143
324 new reduce 153
263 ! shift 117
360 QualifiedName shift 9
379 protected reduce 46
178 IfThenStatement shift 87
127 native reduce 58
228 MultiplicativeExpression shift 112
69 ArrayCreationExpression shift 13
388 LEXEME(StringLiteral) shift 27
147 short reduce 62
239 if reduce 149
16 FieldAccess shift 1
95 this reduce 158
346 StringLiteral shift 53
50 native reduce 61
247 IntegerLiteral shift 47
264 IntegerLiteral shift 47
10 return reduce 141
223 IfThenElseStatementNoShortIf shift 164
385 QualifiedName shift 9
387 this shift 23
153 ( reduce 148
141 QualifiedName shift 9
183 SimpleName shift 36
396 FieldAccess shift 54
192 || reduce 191
237 [ reduce 180
370 LocalVariableDeclarationStatement shift 18
379 final reduce 46
224 BooleanLiteral shift 2
206 QualifiedName shift 9
322 WhileStatementNoShortIf shift 110
10 null reduce 141
140 Assignment shift 89
69 IntegerLiteral shift 47
183 true shift 62
117 true shift 62
373 abstract reduce 107
419 NullLiteral shift 43
385 Name shift 4
340 & reduce 29
279 || reduce 231
233 short reduce 151
39 InclusiveOrExpression shift 29
120 instanceof reduce 184
340 ) reduce 29
419 super shift 12
340 , reduce 29
148 Identifier shift 42
407 LEXEME(Identifier) shift 34
364 Literal shift 24
425 Expression shift 431
264 ArrayCreationExpression shift 13
421 else shift 432
160 short reduce 128
84 instanceof reduce 212
340 > reduce 29
340 < reduce 29
340 ; reduce 29
117 Primary shift 5
149 MethodInvocation shift 61
275 StatementExpression shift 17
50 void reduce 61
346 ArrayAccess shift 26
40 ClassInstanceCreationExpression shift 66
332 null reduce 160
248 native reduce 100
407 new shift 49
206 EqualityExpression shift 22
326 while shift 93
109 while reduce 127
355 ; shift 313
266 Literal shift 24
263 ~ shift 103
141 Name shift 4
324 LEXEME(Identifier) reduce 153
340 ] reduce 29
340 [ reduce 29
354 final shift 50
178 this shift 23
259 boolean reduce 122
394 || reduce 210
382 LEXEME(Identifier) shift 34
117 super shift 12
82 instanceof reduce 227
167 Literal shift 24
169 protected reduce 111
197 Identifier shift 234
275 LeftHandSide shift 55
147 interface reduce 62
213 public reduce 54
354 protected shift 130
239 for reduce 149
75 super reduce 143
169 final reduce 111
332 return reduce 160
127 void reduce 58
171 ForStatement shift 79
79 super reduce 134
340 | reduce 29
196 BooleanLiteral shift 2
391 instanceof reduce 189
88 UnaryExpression shift 20
74 AdditiveExpression shift 82
